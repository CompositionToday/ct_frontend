Index: src/components/about/V2TeamMembersInfo.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const V2TeamMembersInfo = {\n  teamMembers: [\n    {\n      avatar: \"Kiersten\",\n      name: \"Kiersten Densmore\",\n      role: \"Kiersten was the Lead UI Designer and a Front-End Developer for the project.\",\n    },\n    {\n      avatar: \"Joseph\",\n      name: \"Joseph Yim\",\n      role: \"Joseph was the Lead Front-End Developer for the project.\",\n    },\n    {\n      avatar: \"Ragen\",\n      name: \"Ragen Holybee\",\n      role: \"Ragen was the Project Manager and a Back-End Developer for the project.\",\n    },\n    {\n      avatar: \"Amber\",\n      name: \"Amber Hoekstra\",\n      role: \"Amber was the Content Coordinator and a Back-End Developer for the project.\",\n    },\n    {\n      avatar: \"Justin\",\n      name: \"Justin King\",\n      role: \"Justin was the UX Lead and a Front-End Developer for the project.\",\n    },\n  ],\n};
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/about/V2TeamMembersInfo.tsx b/src/components/about/V2TeamMembersInfo.tsx
--- a/src/components/about/V2TeamMembersInfo.tsx	
+++ b/src/components/about/V2TeamMembersInfo.tsx	
@@ -1,29 +1,31 @@
+// Team Member Info for 2022-2023 Senior Design Team
+
 export const V2TeamMembersInfo = {
   teamMembers: [
     {
-      avatar: "Kiersten",
-      name: "Kiersten Densmore",
-      role: "Kiersten was the Lead UI Designer and a Front-End Developer for the project.",
+      avatar: 'Kiersten',
+      name: 'Kiersten Densmore',
+      role: 'Kiersten was the Lead UI Designer and a Front-End Developer for the project.',
     },
     {
-      avatar: "Joseph",
-      name: "Joseph Yim",
-      role: "Joseph was the Lead Front-End Developer for the project.",
+      avatar: 'Joseph',
+      name: 'Joseph Yim',
+      role: 'Joseph was the Lead Front-End Developer for the project.',
     },
     {
-      avatar: "Ragen",
-      name: "Ragen Holybee",
-      role: "Ragen was the Project Manager and a Back-End Developer for the project.",
+      avatar: 'Ragen',
+      name: 'Ragen Holybee',
+      role: 'Ragen was the Project Manager and a Back-End Developer for the project.',
     },
     {
-      avatar: "Amber",
-      name: "Amber Hoekstra",
-      role: "Amber was the Content Coordinator and a Back-End Developer for the project.",
+      avatar: 'Amber',
+      name: 'Amber Hoekstra',
+      role: 'Amber was the Content Coordinator and a Back-End Developer for the project.',
     },
     {
-      avatar: "Justin",
-      name: "Justin King",
-      role: "Justin was the UX Lead and a Front-End Developer for the project.",
+      avatar: 'Justin',
+      name: 'Justin King',
+      role: 'Justin was the UX Lead and a Front-End Developer for the project.',
     },
   ],
-};
\ No newline at end of file
+}
Index: src/components/about/TeamMembers.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * List of Team Member Portraits and Descriptions\n * in the About Us Section\n */\n\nimport {\n  createStyles,\n  Image,\n  Text,\n  Group,\n  Container,\n  Space,\n} from \"@mantine/core\";\n\n\nconst useStyles = createStyles((theme) => ({\n\n  // container where all of the teamMember objects are dispalyed\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    width: \"80%\",\n    [theme.fn.smallerThan(\"md\")]: {\n      width: \"70%\",\n    },\n  },\n\n  // group component for team members lists (vertical list growth)\n  members: {\n    [theme.fn.smallerThan(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n\n  icon: {\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[3]\n        : theme.colors.gray[5],\n  },\n\n  // team member name\n  name: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    fontSize: 28,\n    color: \"#228BE6\",\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 20,\n    },\n  },\n\n  // team member role description\n  role: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    fontSize: 22,\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 16,\n    },\n  },\n\n  // team member portrait\n  image: {\n    maxWidth: 250,\n    [theme.fn.smallerThan(\"sm\")]: {\n      maxWidth: 175,\n    },\n  },\n}));\n\n\n// Props for teamMember object\ninterface UserInfoIconsProps {\n  teamMembers: {\n    avatar: string;\n    name: string;\n    role: string;\n  }[];\n}\n\n\nexport function TeamMembers({ teamMembers }: UserInfoIconsProps) {\n  const { classes } = useStyles();\n\n  // Generates a teamMember component for each member in the list, See V[x]TeamMembersInfo.tsx for the data\n  const teamMemberList = teamMembers.map((member) => {\n\n    // Get the correct team member photo file (.png)\n    let photo = require(\"../../images/\" + member.avatar +\".png\")\n    // console.log(\"photo = \" + photo)\n    \n    // Returns a single team member component\n    return (\n      <div>\n        <Group noWrap spacing={60} mt={100} className={classes.members}>\n\n          {/*Potrait*/}\n          <Image src={String(photo)} radius=\"md\" className={classes.image} />\n\n          <div>\n            {/*Team Member Name*/}\n            <Text weight={500} className={classes.name} mb=\"xl\">\n              {member.name}\n            </Text>\n\n            {/*Team Member Description*/}\n            <Text weight={500} className={classes.role} color=\"dimmed\">\n              {member.role}\n            </Text>\n          </div>\n\n        </Group>\n      </div>\n    );\n  });\n\n  // Returns the list of teamMembers\n  return (\n    <Container className={classes.container}>\n      {teamMemberList}\n      <Space h={100} />\n    </Container>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/about/TeamMembers.tsx b/src/components/about/TeamMembers.tsx
--- a/src/components/about/TeamMembers.tsx	
+++ b/src/components/about/TeamMembers.tsx	
@@ -3,40 +3,31 @@
  * in the About Us Section
  */
 
-import {
-  createStyles,
-  Image,
-  Text,
-  Group,
-  Container,
-  Space,
-} from "@mantine/core";
-
+import {createStyles, Image, Text, Group, Container, Space} from '@mantine/core'
 
 const useStyles = createStyles((theme) => ({
-
   // container where all of the teamMember objects are dispalyed
   container: {
-    display: "flex",
-    justifyContent: "center",
-    alignItems: "center",
-    flexWrap: "wrap",
-    width: "80%",
-    [theme.fn.smallerThan("md")]: {
-      width: "70%",
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'center',
+    flexWrap: 'wrap',
+    width: '80%',
+    [theme.fn.smallerThan('md')]: {
+      width: '70%',
     },
   },
 
   // group component for team members lists (vertical list growth)
   members: {
-    [theme.fn.smallerThan("sm")]: {
-      flexDirection: "column",
+    [theme.fn.smallerThan('sm')]: {
+      flexDirection: 'column',
     },
   },
 
   icon: {
     color:
-      theme.colorScheme === "dark"
+      theme.colorScheme === 'dark'
         ? theme.colors.dark[3]
         : theme.colors.gray[5],
   },
@@ -45,8 +36,8 @@
   name: {
     fontFamily: `Greycliff CF, ${theme.fontFamily}`,
     fontSize: 28,
-    color: "#228BE6",
-    [theme.fn.smallerThan("sm")]: {
+    color: '#228BE6',
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 20,
     },
   },
@@ -55,7 +46,7 @@
   role: {
     fontFamily: `Greycliff CF, ${theme.fontFamily}`,
     fontSize: 22,
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 16,
     },
   },
@@ -63,38 +54,34 @@
   // team member portrait
   image: {
     maxWidth: 250,
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       maxWidth: 175,
     },
   },
-}));
-
+}))
 
 // Props for teamMember object
 interface UserInfoIconsProps {
   teamMembers: {
-    avatar: string;
-    name: string;
-    role: string;
-  }[];
+    avatar: string
+    name: string
+    role: string
+  }[]
 }
-
 
-export function TeamMembers({ teamMembers }: UserInfoIconsProps) {
-  const { classes } = useStyles();
+export function TeamMembers({teamMembers}: UserInfoIconsProps) {
+  const {classes} = useStyles()
 
   // Generates a teamMember component for each member in the list, See V[x]TeamMembersInfo.tsx for the data
   const teamMemberList = teamMembers.map((member) => {
-
     // Get the correct team member photo file (.png)
-    let photo = require("../../images/" + member.avatar +".png")
+    let photo = require('../../images/' + member.avatar + '.png')
     // console.log("photo = " + photo)
-    
+
     // Returns a single team member component
     return (
       <div>
         <Group noWrap spacing={60} mt={100} className={classes.members}>
-
           {/*Potrait*/}
           <Image src={String(photo)} radius="md" className={classes.image} />
 
@@ -109,11 +96,10 @@
               {member.role}
             </Text>
           </div>
-
         </Group>
       </div>
-    );
-  });
+    )
+  })
 
   // Returns the list of teamMembers
   return (
@@ -121,5 +107,5 @@
       {teamMemberList}
       <Space h={100} />
     </Container>
-  );
+  )
 }
Index: src/components/login/profile.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import styled from \"@emotion/styled\";\n\ninterface ErrorMessageProp {\n  error: boolean;\n}\n\n// Any key with a prefix of 'auth/' is an error that Firebase gives\n// Any other errors are developer made errors\nexport const authErrorList = {\n  \"auth/wrong-password\": \"You have entered an invalid email or password\",\n  \"auth/user-not-found\": \"You have entered an invalid email or password\",\n  \"auth/invalid-email\": \"Please give a valid email\",\n  \"auth/weak-password\":\n    \"Password must contain at least 6 characters, 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character\",\n  \"auth/email-already-in-use\":\n    \"This email is already being used. Please use a different email\",\n  \"Passwords do not match\": \"Passwords do not match\",\n  \"Please input a password\": \"Please input a password\",\n  \"Please input an email\": \"Please input an email\",\n  \"Please give a name\": \"Please give a name\",\n  \"Password not strong enough\":\n    \"Password must contain at least 6 characters, 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character\",\n};\n\nexport const defaultErrorMessage =\n  \"There seems to be an issue, please try again later\";\n\nexport const ErrorMessage = styled.div<ErrorMessageProp>`\n  text-align: center;\n  color: red;\n  margin: 15px 0px;\n  display: ${(props) => (props.error ? \"block\" : \"none\")};\n`;\n\nexport const ForgetPasswordNotificaton = styled.p``;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/login/profile.tsx b/src/components/login/profile.tsx
--- a/src/components/login/profile.tsx	
+++ b/src/components/login/profile.tsx	
@@ -1,35 +1,35 @@
-import styled from "@emotion/styled";
+import styled from '@emotion/styled'
 
 interface ErrorMessageProp {
-  error: boolean;
+  error: boolean
 }
 
 // Any key with a prefix of 'auth/' is an error that Firebase gives
 // Any other errors are developer made errors
 export const authErrorList = {
-  "auth/wrong-password": "You have entered an invalid email or password",
-  "auth/user-not-found": "You have entered an invalid email or password",
-  "auth/invalid-email": "Please give a valid email",
-  "auth/weak-password":
-    "Password must contain at least 6 characters, 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character",
-  "auth/email-already-in-use":
-    "This email is already being used. Please use a different email",
-  "Passwords do not match": "Passwords do not match",
-  "Please input a password": "Please input a password",
-  "Please input an email": "Please input an email",
-  "Please give a name": "Please give a name",
-  "Password not strong enough":
-    "Password must contain at least 6 characters, 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character",
-};
+  'auth/wrong-password': 'You have entered an invalid email or password',
+  'auth/user-not-found': 'You have entered an invalid email or password',
+  'auth/invalid-email': 'Please give a valid email',
+  'auth/weak-password':
+    'Password must contain at least 6 characters, 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character',
+  'auth/email-already-in-use':
+    'This email is already being used. Please use a different email',
+  'Passwords do not match': 'Passwords do not match',
+  'Please input a password': 'Please input a password',
+  'Please input an email': 'Please input an email',
+  'Please give a name': 'Please give a name',
+  'Password not strong enough':
+    'Password must contain at least 6 characters, 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character',
+}
 
 export const defaultErrorMessage =
-  "There seems to be an issue, please try again later";
+  'There seems to be an issue, please try again later'
 
 export const ErrorMessage = styled.div<ErrorMessageProp>`
   text-align: center;
   color: red;
   margin: 15px 0px;
-  display: ${(props) => (props.error ? "block" : "none")};
-`;
+  display: ${(props) => (props.error ? 'block' : 'none')};
+`
 
-export const ForgetPasswordNotificaton = styled.p``;
+export const ForgetPasswordNotificaton = styled.p``
Index: src/components/modal/ConfirmationModal.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { openConfirmModal } from \"@mantine/modals\";\nimport React from \"react\";\n\ninterface ConfirmationModalProps {\n  title: string;\n  children: React.ReactNode;\n  confirmLabel: string;\n  cancelLabel: string;\n  color: string;\n  handleOnConfirm: () => void;\n}\n\nexport const openConfirmationModal = ({\n  title,\n  children,\n  confirmLabel,\n  cancelLabel,\n  color,\n  handleOnConfirm,\n}: ConfirmationModalProps) => {\n  console.log(title, children, confirmLabel, cancelLabel, color);\n  openConfirmModal({\n    title: title,\n    centered: true,\n    children: children,\n    labels: { confirm: confirmLabel, cancel: cancelLabel },\n    confirmProps: { color: color },\n    onCancel: () => console.log(\"Cancel\"),\n    onConfirm: () => handleOnConfirm(),\n  });\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/modal/ConfirmationModal.tsx b/src/components/modal/ConfirmationModal.tsx
--- a/src/components/modal/ConfirmationModal.tsx	
+++ b/src/components/modal/ConfirmationModal.tsx	
@@ -1,13 +1,13 @@
-import { openConfirmModal } from "@mantine/modals";
-import React from "react";
+import {openConfirmModal} from '@mantine/modals'
+import React from 'react'
 
 interface ConfirmationModalProps {
-  title: string;
-  children: React.ReactNode;
-  confirmLabel: string;
-  cancelLabel: string;
-  color: string;
-  handleOnConfirm: () => void;
+  title: string
+  children: React.ReactNode
+  confirmLabel: string
+  cancelLabel: string
+  color: string
+  handleOnConfirm: () => void
 }
 
 export const openConfirmationModal = ({
@@ -18,14 +18,14 @@
   color,
   handleOnConfirm,
 }: ConfirmationModalProps) => {
-  console.log(title, children, confirmLabel, cancelLabel, color);
+  console.log(title, children, confirmLabel, cancelLabel, color)
   openConfirmModal({
     title: title,
     centered: true,
     children: children,
-    labels: { confirm: confirmLabel, cancel: cancelLabel },
-    confirmProps: { color: color },
-    onCancel: () => console.log("Cancel"),
+    labels: {confirm: confirmLabel, cancel: cancelLabel},
+    confirmProps: {color: color},
+    onCancel: () => console.log('Cancel'),
     onConfirm: () => handleOnConfirm(),
-  });
-};
+  })
+}
Index: src/components/filter/Location.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  Autocomplete,\n  AutocompleteItem,\n  Loader,\n  createStyles,\n  Checkbox,\n} from \"@mantine/core\";\n\nexport interface LocationProp {\n  city: string | undefined;\n  state: string | undefined;\n  setCity: React.Dispatch<React.SetStateAction<string>>;\n  setState: React.Dispatch<React.SetStateAction<string>>;\n  displayError?: boolean;\n  setDisplayError?: React.Dispatch<React.SetStateAction<boolean>>;\n  withAsterisk?: boolean;\n  display: boolean;\n}\n\ninterface LocationData {\n  value: string;\n  city: string;\n  state: string;\n}\n\nexport function Location({\n  setCity,\n  setState,\n  city,\n  state,\n  displayError,\n  setDisplayError,\n  withAsterisk = false,\n  display,\n}: LocationProp) {\n  const timeoutRef = useRef<number>(-1);\n  const [value, setValue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<LocationData[]>([]);\n  const [userLocation, setUserLocation] = useState<string>(\"\");\n  const [remoteStatus, setRemoteStatus] = useState(\n    city === \"Remote\" || state === \"Remote\"\n  );\n  const [inputLoaded, setInputLoaded] = useState(false);\n\n  // const useStyles = createStyles((theme) => ({\n  //   input: {\n  //     borderColor: value !== \"\" && (city === \"\" || state === \"\") ? \"red\" : \"\",\n  //   },\n  // }));\n  // const { classes } = useStyles();\n\n  const handleChange = async (val: string) => {\n    console.log(\"I am triggered\");\n    setLoading(true);\n    setValue(val);\n    setData([]);\n    setCity(\"\");\n    setState(\"\");\n  };\n\n  const handleDropdownSelect = (item: AutocompleteItem) => {\n    setCity(item.city);\n    setState(item.state);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (city && state) {\n      setValue(`${city}, ${state}`);\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Chose a location\");\n    console.log(\"city: \", city);\n    console.log(\"state: \", state);\n    if (!city || !state) {\n      setValue(\"\");\n      setRemoteStatus(false);\n    }\n  }, [city, state]);\n\n  useEffect(() => {\n    console.log(value);\n    if (value === \"\") {\n      setLoading(false);\n      return;\n    }\n\n    if (setDisplayError) {\n      setDisplayError(false);\n    }\n\n    const delayDebounceFn = setTimeout(async () => {\n      try {\n        console.log(\"value: \", value);\n\n        // Send Axios request here\n        let temp = await fetch(\n          `https://api.mapbox.com/geocoding/v5/mapbox.places/${value}.json?country=us&limit=10&types=place&autocomplete=true&access_token=${process.env.REACT_APP_MAPBOX_API_KEY}`\n        );\n\n        let tmp = await temp.json();\n        console.log(tmp);\n        setData(\n          tmp.features.map((city: any) => {\n            let arr = city.place_name.split(\", \");\n            return {\n              value: `${arr[0]}, ${arr[1]}`,\n              city: arr[0],\n              state: arr[1],\n            };\n          })\n        );\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    }, 500);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, [value]);\n\n  useEffect(() => {\n    console.log(\"data\", data);\n  }, [data]);\n\n  useEffect(() => {\n    console.log(\"remote status: \", remoteStatus);\n    if (remoteStatus) {\n      setCity(\"Remote\");\n      setState(\"Remote\");\n      setValue(\"\");\n      setData([]);\n    } else if (inputLoaded) {\n      setCity(\"\");\n      setState(\"\");\n    }\n    setInputLoaded(true);\n  }, [remoteStatus]);\n\n  return (\n    <div style={display ? { marginTop: \"10px\" } : { display: \"none\" }}>\n      <Autocomplete\n        value={value}\n        data={data}\n        onChange={handleChange}\n        rightSection={loading ? <Loader size={16} /> : null}\n        label=\"Location\"\n        placeholder=\"City, State\"\n        onItemSubmit={handleDropdownSelect}\n        limit={15}\n        withAsterisk={withAsterisk}\n        error={\n          displayError && (!city || !state)\n            ? \"Select a location from the dropdown\"\n            : false\n        }\n        disabled={remoteStatus}\n      />\n      <Checkbox\n        checked={remoteStatus}\n        onChange={(e) => setRemoteStatus(e.currentTarget.checked)}\n        label=\"Remote\"\n        sx={{ marginTop: \"10px\" }}\n      />\n    </div>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/filter/Location.tsx b/src/components/filter/Location.tsx
--- a/src/components/filter/Location.tsx	
+++ b/src/components/filter/Location.tsx	
@@ -1,27 +1,27 @@
-import React, { useState, useRef, useEffect } from "react";
+import React, {useState, useRef, useEffect} from 'react'
 import {
   Autocomplete,
   AutocompleteItem,
   Loader,
   createStyles,
   Checkbox,
-} from "@mantine/core";
+} from '@mantine/core'
 
 export interface LocationProp {
-  city: string | undefined;
-  state: string | undefined;
-  setCity: React.Dispatch<React.SetStateAction<string>>;
-  setState: React.Dispatch<React.SetStateAction<string>>;
-  displayError?: boolean;
-  setDisplayError?: React.Dispatch<React.SetStateAction<boolean>>;
-  withAsterisk?: boolean;
-  display: boolean;
+  city: string | undefined
+  state: string | undefined
+  setCity: React.Dispatch<React.SetStateAction<string>>
+  setState: React.Dispatch<React.SetStateAction<string>>
+  displayError?: boolean
+  setDisplayError?: React.Dispatch<React.SetStateAction<boolean>>
+  withAsterisk?: boolean
+  display: boolean
 }
 
 interface LocationData {
-  value: string;
-  city: string;
-  state: string;
+  value: string
+  city: string
+  state: string
 }
 
 export function Location({
@@ -34,15 +34,15 @@
   withAsterisk = false,
   display,
 }: LocationProp) {
-  const timeoutRef = useRef<number>(-1);
-  const [value, setValue] = useState("");
-  const [loading, setLoading] = useState(false);
-  const [data, setData] = useState<LocationData[]>([]);
-  const [userLocation, setUserLocation] = useState<string>("");
+  const timeoutRef = useRef<number>(-1)
+  const [value, setValue] = useState('')
+  const [loading, setLoading] = useState(false)
+  const [data, setData] = useState<LocationData[]>([])
+  const [userLocation, setUserLocation] = useState<string>('')
   const [remoteStatus, setRemoteStatus] = useState(
-    city === "Remote" || state === "Remote"
-  );
-  const [inputLoaded, setInputLoaded] = useState(false);
+    city === 'Remote' || state === 'Remote',
+  )
+  const [inputLoaded, setInputLoaded] = useState(false)
 
   // const useStyles = createStyles((theme) => ({
   //   input: {
@@ -52,98 +52,98 @@
   // const { classes } = useStyles();
 
   const handleChange = async (val: string) => {
-    console.log("I am triggered");
-    setLoading(true);
-    setValue(val);
-    setData([]);
-    setCity("");
-    setState("");
-  };
+    console.log('I am triggered')
+    setLoading(true)
+    setValue(val)
+    setData([])
+    setCity('')
+    setState('')
+  }
 
   const handleDropdownSelect = (item: AutocompleteItem) => {
-    setCity(item.city);
-    setState(item.state);
-    setLoading(false);
-  };
+    setCity(item.city)
+    setState(item.state)
+    setLoading(false)
+  }
 
   useEffect(() => {
     if (city && state) {
-      setValue(`${city}, ${state}`);
+      setValue(`${city}, ${state}`)
     }
-  }, []);
+  }, [])
 
   useEffect(() => {
-    console.log("Chose a location");
-    console.log("city: ", city);
-    console.log("state: ", state);
+    console.log('Chose a location')
+    console.log('city: ', city)
+    console.log('state: ', state)
     if (!city || !state) {
-      setValue("");
-      setRemoteStatus(false);
+      setValue('')
+      setRemoteStatus(false)
     }
-  }, [city, state]);
+  }, [city, state])
 
   useEffect(() => {
-    console.log(value);
-    if (value === "") {
-      setLoading(false);
-      return;
+    console.log(value)
+    if (value === '') {
+      setLoading(false)
+      return
     }
 
     if (setDisplayError) {
-      setDisplayError(false);
+      setDisplayError(false)
     }
 
     const delayDebounceFn = setTimeout(async () => {
       try {
-        console.log("value: ", value);
+        console.log('value: ', value)
 
         // Send Axios request here
         let temp = await fetch(
-          `https://api.mapbox.com/geocoding/v5/mapbox.places/${value}.json?country=us&limit=10&types=place&autocomplete=true&access_token=${process.env.REACT_APP_MAPBOX_API_KEY}`
-        );
+          `https://api.mapbox.com/geocoding/v5/mapbox.places/${value}.json?country=us&limit=10&types=place&autocomplete=true&access_token=${process.env.REACT_APP_MAPBOX_API_KEY}`,
+        )
 
-        let tmp = await temp.json();
-        console.log(tmp);
+        let tmp = await temp.json()
+        console.log(tmp)
         setData(
           tmp.features.map((city: any) => {
-            let arr = city.place_name.split(", ");
+            let arr = city.place_name.split(', ')
             return {
               value: `${arr[0]}, ${arr[1]}`,
               city: arr[0],
               state: arr[1],
-            };
-          })
-        );
+            }
+          }),
+        )
       } catch (err) {
-        console.log(err);
+        console.log(err)
       } finally {
-        setLoading(false);
+        setLoading(false)
       }
-    }, 500);
+    }, 500)
 
-    return () => clearTimeout(delayDebounceFn);
-  }, [value]);
+    return () => clearTimeout(delayDebounceFn)
+  }, [value])
 
   useEffect(() => {
-    console.log("data", data);
-  }, [data]);
+    console.log('data', data)
+  }, [data])
 
   useEffect(() => {
-    console.log("remote status: ", remoteStatus);
+    console.log('remote status: ', remoteStatus)
     if (remoteStatus) {
-      setCity("Remote");
-      setState("Remote");
-      setValue("");
-      setData([]);
+      setCity('Remote')
+      setState('Remote')
+      setValue('')
+      setData([])
     } else if (inputLoaded) {
-      setCity("");
-      setState("");
+      setCity('')
+      setState('')
     }
-    setInputLoaded(true);
-  }, [remoteStatus]);
+    setInputLoaded(true)
+  }, [remoteStatus])
 
   return (
-    <div style={display ? { marginTop: "10px" } : { display: "none" }}>
+    <div style={display ? {marginTop: '10px'} : {display: 'none'}}>
       <Autocomplete
         value={value}
         data={data}
@@ -156,7 +156,7 @@
         withAsterisk={withAsterisk}
         error={
           displayError && (!city || !state)
-            ? "Select a location from the dropdown"
+            ? 'Select a location from the dropdown'
             : false
         }
         disabled={remoteStatus}
@@ -165,8 +165,8 @@
         checked={remoteStatus}
         onChange={(e) => setRemoteStatus(e.currentTarget.checked)}
         label="Remote"
-        sx={{ marginTop: "10px" }}
+        sx={{marginTop: '10px'}}
       />
     </div>
-  );
+  )
 }
Index: src/components/footer/FooterInfo.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const footerInfo = {\n  data: [\n    {\n      title: \"About\",\n      links: [\n        {\n          label: \"Meet the Team\",\n          link: \"/about\",\n        },\n      ],\n    },\n  ],\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/footer/FooterInfo.tsx b/src/components/footer/FooterInfo.tsx
--- a/src/components/footer/FooterInfo.tsx	
+++ b/src/components/footer/FooterInfo.tsx	
@@ -1,13 +1,13 @@
 export const footerInfo = {
   data: [
     {
-      title: "About",
+      title: 'About',
       links: [
         {
-          label: "Meet the Team",
-          link: "/about",
+          label: 'Meet the Team',
+          link: '/about',
         },
       ],
     },
   ],
-};
+}
Index: src/components/footer/Footer.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import react, { useState, useEffect } from \"react\";\nimport {\n  createStyles,\n  Text,\n  Container,\n  Group,\n  Image,\n  Title,\n} from \"@mantine/core\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst musicNoteIcon = require(\"../../images/BigMusicNote.png\");\nconst emailIcon = require(\"../../images/EmailIcon.png\");\n\nconst useStyles = createStyles((theme) => ({\n  footer: {\n    marginTop: 120,\n    paddingTop: theme.spacing.xl * 2,\n    paddingBottom: theme.spacing.xl * 2,\n    backgroundColor:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[6]\n        : theme.colors.gray[0],\n    borderTop: `1px solid ${\n      theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[2]\n    }`,\n  },\n\n  logo: {\n    maxWidth: 400,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  },\n\n  description: {\n    marginTop: 5,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      marginTop: theme.spacing.xs,\n      textAlign: \"center\",\n    },\n  },\n\n  inner: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  },\n\n  groups: {\n    display: \"flex\",\n    alignContent: \"center\",\n    flexWrap: \"wrap\",\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n\n  wrapper: {\n    width: 160,\n  },\n\n  link: {\n    display: \"block\",\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[1]\n        : theme.colors.gray[6],\n    fontSize: theme.fontSizes.sm,\n    paddingTop: 3,\n    paddingBottom: 3,\n\n    \"&:hover\": {\n      textDecoration: \"underline\",\n      cursor: `pointer`,\n    },\n  },\n\n  title: {\n    paddingTop: 3,\n    fontSize: theme.fontSizes.lg,\n    fontWeight: 700,\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    marginBottom: theme.spacing.xs / 2,\n    color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n  },\n\n  afterFooter: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: theme.spacing.xl,\n    paddingTop: theme.spacing.xl,\n    paddingBottom: theme.spacing.xl,\n    borderTop: `1px solid ${\n      theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[2]\n    }`,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n\n  social: {\n    [theme.fn.smallerThan(\"sm\")]: {\n      marginTop: theme.spacing.xs,\n    },\n  },\n\n  blueText: {\n    color: \"#228BE6\",\n  },\n\n  image: {\n    maxWidth: 30,\n  },\n\n  logoGroup: {\n    gap: 5,\n  },\n\n  emailIcon: {\n    maxWidth: 20,\n  },\n}));\n\ninterface FooterLinksProps {\n  data: {\n    title: string;\n    links: { label: string; link: string }[];\n  }[];\n}\n\nexport function Footer({ data }: FooterLinksProps) {\n  const { classes } = useStyles();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [displayFooter, setDisplayFooter] = useState(true);\n  const validFooterPage = [\n    \"/\",\n    \"/about\",\n    \"/jobs\",\n    \"/competitions\",\n    \"/festivals\",\n    \"/concerts\",\n    \"/admin/users\",\n    \"/create-opportunity\",\n    \"/admin/recent-posts\",\n    \"/my-posts\",\n  ];\n\n  useEffect(() => {\n    if (validFooterPage.includes(location.pathname)) {\n      setDisplayFooter(true);\n    } else {\n      setDisplayFooter(false);\n    }\n  }, [location.pathname]);\n\n  const groups = data.map((group) => {\n    const links = group.links.map((link, index) => (\n      <a\n        key={index}\n        className={classes.link}\n        onClick={() => navigate(link.link)}\n      >\n        {link.label}\n      </a>\n    ));\n\n    return (\n      <div className={classes.wrapper} key={group.title}>\n        <Text className={classes.title}>{group.title}</Text>\n        {links}\n      </div>\n    );\n  });\n\n  return (\n    <footer\n      className={classes.footer}\n      style={{ display: displayFooter ? \"block\" : \"none\" }}\n    >\n      <Container className={classes.inner}>\n        <div className={classes.logo}>\n          <Group className={classes.logoGroup}>\n            <Title className={classes.title} mt=\"xl\">\n              COMPOSITION:<span className={classes.blueText}>TODAY</span>\n            </Title>\n            <Image\n              src={String(musicNoteIcon)}\n              className={classes.image}\n              mt=\"xl\"\n            />\n          </Group>\n          <Text size=\"sm\" color=\"dimmed\" className={classes.description}>\n            An online hub for musicians to find jobs, competitions, festivals,\n            and concerts.\n          </Text>\n        </div>\n        <div className={classes.groups}>{groups}</div>\n      </Container>\n      <Container className={classes.afterFooter}>\n        <Text color=\"dimmed\" size=\"sm\">\n          © 2022 Composition Today. All rights reserved.\n        </Text>\n\n        <Group spacing={0} className={classes.social} position=\"right\" noWrap>\n          <Image src={String(emailIcon)} className={classes.emailIcon} />\n        </Group>\n      </Container>\n    </footer>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/footer/Footer.tsx b/src/components/footer/Footer.tsx
--- a/src/components/footer/Footer.tsx	
+++ b/src/components/footer/Footer.tsx	
@@ -1,16 +1,9 @@
-import react, { useState, useEffect } from "react";
-import {
-  createStyles,
-  Text,
-  Container,
-  Group,
-  Image,
-  Title,
-} from "@mantine/core";
-import { useLocation, useNavigate } from "react-router-dom";
+import react, {useState, useEffect} from 'react'
+import {createStyles, Text, Container, Group, Image, Title} from '@mantine/core'
+import {useLocation, useNavigate} from 'react-router-dom'
 
-const musicNoteIcon = require("../../images/BigMusicNote.png");
-const emailIcon = require("../../images/EmailIcon.png");
+const musicNoteIcon = require('../../images/BigMusicNote.png')
+const emailIcon = require('../../images/EmailIcon.png')
 
 const useStyles = createStyles((theme) => ({
   footer: {
@@ -18,50 +11,50 @@
     paddingTop: theme.spacing.xl * 2,
     paddingBottom: theme.spacing.xl * 2,
     backgroundColor:
-      theme.colorScheme === "dark"
+      theme.colorScheme === 'dark'
         ? theme.colors.dark[6]
         : theme.colors.gray[0],
     borderTop: `1px solid ${
-      theme.colorScheme === "dark" ? theme.colors.dark[5] : theme.colors.gray[2]
+      theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[2]
     }`,
   },
 
   logo: {
     maxWidth: 400,
 
-    [theme.fn.smallerThan("sm")]: {
-      display: "flex",
-      flexDirection: "column",
-      alignItems: "center",
+    [theme.fn.smallerThan('sm')]: {
+      display: 'flex',
+      flexDirection: 'column',
+      alignItems: 'center',
     },
   },
 
   description: {
     marginTop: 5,
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       marginTop: theme.spacing.xs,
-      textAlign: "center",
+      textAlign: 'center',
     },
   },
 
   inner: {
-    display: "flex",
-    justifyContent: "space-between",
+    display: 'flex',
+    justifyContent: 'space-between',
 
-    [theme.fn.smallerThan("sm")]: {
-      flexDirection: "column",
-      alignItems: "center",
+    [theme.fn.smallerThan('sm')]: {
+      flexDirection: 'column',
+      alignItems: 'center',
     },
   },
 
   groups: {
-    display: "flex",
-    alignContent: "center",
-    flexWrap: "wrap",
+    display: 'flex',
+    alignContent: 'center',
+    flexWrap: 'wrap',
 
-    [theme.fn.smallerThan("sm")]: {
-      display: "none",
+    [theme.fn.smallerThan('sm')]: {
+      display: 'none',
     },
   },
 
@@ -70,17 +63,17 @@
   },
 
   link: {
-    display: "block",
+    display: 'block',
     color:
-      theme.colorScheme === "dark"
+      theme.colorScheme === 'dark'
         ? theme.colors.dark[1]
         : theme.colors.gray[6],
     fontSize: theme.fontSizes.sm,
     paddingTop: 3,
     paddingBottom: 3,
 
-    "&:hover": {
-      textDecoration: "underline",
+    '&:hover': {
+      textDecoration: 'underline',
       cursor: `pointer`,
     },
   },
@@ -91,33 +84,33 @@
     fontWeight: 700,
     fontFamily: `Greycliff CF, ${theme.fontFamily}`,
     marginBottom: theme.spacing.xs / 2,
-    color: theme.colorScheme === "dark" ? theme.white : theme.black,
+    color: theme.colorScheme === 'dark' ? theme.white : theme.black,
   },
 
   afterFooter: {
-    display: "flex",
-    justifyContent: "space-between",
-    alignItems: "center",
+    display: 'flex',
+    justifyContent: 'space-between',
+    alignItems: 'center',
     marginTop: theme.spacing.xl,
     paddingTop: theme.spacing.xl,
     paddingBottom: theme.spacing.xl,
     borderTop: `1px solid ${
-      theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[2]
+      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[2]
     }`,
 
-    [theme.fn.smallerThan("sm")]: {
-      flexDirection: "column",
+    [theme.fn.smallerThan('sm')]: {
+      flexDirection: 'column',
     },
   },
 
   social: {
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       marginTop: theme.spacing.xs,
     },
   },
 
   blueText: {
-    color: "#228BE6",
+    color: '#228BE6',
   },
 
   image: {
@@ -131,40 +124,40 @@
   emailIcon: {
     maxWidth: 20,
   },
-}));
+}))
 
 interface FooterLinksProps {
   data: {
-    title: string;
-    links: { label: string; link: string }[];
-  }[];
+    title: string
+    links: {label: string; link: string}[]
+  }[]
 }
 
-export function Footer({ data }: FooterLinksProps) {
-  const { classes } = useStyles();
-  const navigate = useNavigate();
-  const location = useLocation();
-  const [displayFooter, setDisplayFooter] = useState(true);
+export function Footer({data}: FooterLinksProps) {
+  const {classes} = useStyles()
+  const navigate = useNavigate()
+  const location = useLocation()
+  const [displayFooter, setDisplayFooter] = useState(true)
   const validFooterPage = [
-    "/",
-    "/about",
-    "/jobs",
-    "/competitions",
-    "/festivals",
-    "/concerts",
-    "/admin/users",
-    "/create-opportunity",
-    "/admin/recent-posts",
-    "/my-posts",
-  ];
+    '/',
+    '/about',
+    '/jobs',
+    '/competitions',
+    '/festivals',
+    '/concerts',
+    '/admin/users',
+    '/create-opportunity',
+    '/admin/recent-posts',
+    '/my-posts',
+  ]
 
   useEffect(() => {
     if (validFooterPage.includes(location.pathname)) {
-      setDisplayFooter(true);
+      setDisplayFooter(true)
     } else {
-      setDisplayFooter(false);
+      setDisplayFooter(false)
     }
-  }, [location.pathname]);
+  }, [location.pathname])
 
   const groups = data.map((group) => {
     const links = group.links.map((link, index) => (
@@ -175,20 +168,20 @@
       >
         {link.label}
       </a>
-    ));
+    ))
 
     return (
       <div className={classes.wrapper} key={group.title}>
         <Text className={classes.title}>{group.title}</Text>
         {links}
       </div>
-    );
-  });
+    )
+  })
 
   return (
     <footer
       className={classes.footer}
-      style={{ display: displayFooter ? "block" : "none" }}
+      style={{display: displayFooter ? 'block' : 'none'}}
     >
       <Container className={classes.inner}>
         <div className={classes.logo}>
@@ -219,5 +212,5 @@
         </Group>
       </Container>
     </footer>
-  );
+  )
 }
Index: src/components/landing/Hero.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useState, useRef, useEffect } from \"react\";\nimport { createStyles, Container, Title, Text, Image } from \"@mantine/core\";\nimport { Teeter } from \"../animations/AnimateOnHover\";\nimport { IconScubaMask } from \"@tabler/icons\";\nimport { motion } from \"framer-motion\";\nimport ScubaMask from \"../../images/scuba-mask.png\";\nimport Eyes from \"../../images/eyes.png\";\n\nconst heroLogo = require(\"../../images/HeroLogo.png\");\nconst scubaLogo = require(\"../../images/scuba-mask.png\");\n\nconst useStyles = createStyles((theme) => ({\n  inner: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    // paddingTop: theme.spacing.xl,\n    paddingBottom: theme.spacing.xl * 6,\n  },\n\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    flexWrap: \"wrap\",\n\n    maxWidth: 480,\n    marginRight: theme.spacing.xl * 3,\n\n    [theme.fn.smallerThan(\"md\")]: {\n      maxWidth: \"100%\",\n      marginRight: 0,\n    },\n  },\n\n  title: {\n    color: theme.colorScheme === \"dark\" ? theme.white : \"#454545\",\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    fontSize: 55,\n    lineHeight: 1.2,\n    fontWeight: 800,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 36,\n    },\n  },\n\n  control: {\n    [theme.fn.smallerThan(\"xs\")]: {\n      flex: 1,\n    },\n  },\n\n  image: {\n    flex: 1,\n    // maxWidth: \"40vw\",\n    // marginLeft: 40,\n\n    [theme.fn.smallerThan(\"md\")]: {\n      display: \"none\",\n    },\n  },\n\n  highlight: {\n    position: \"relative\",\n    backgroundColor: theme.fn.variant({\n      variant: \"light\",\n      color: theme.primaryColor,\n    }).background,\n    borderRadius: theme.radius.sm,\n    padding: \"4px 12px\",\n  },\n\n  textHighlight: {\n    lineHeight: 0,\n  },\n\n  container: {\n    maxWidth: \"75vw\",\n\n    [theme.fn.smallerThan(\"md\")]: {\n      maxWidth: \"85vw\",\n    },\n  },\n\n  subheading: {\n    fontSize: 25,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 22,\n    },\n  },\n}));\n\nexport function Hero() {\n  const { classes } = useStyles();\n  const [rotateDegree, setRotateDegree] = useState(0);\n  const [heroImageClick, setHeroImageClick] = useState(0);\n  const [displayEasterEgg, setDisplayEasterEgg] = useState(0);\n\n  function angle(cx: number, cy: number, ex: number, ey: number) {\n    const dy = ey - cy;\n    const dx = ex - cx;\n    const rad = Math.atan2(dy, dx);\n    const deg = (rad * 180) / Math.PI;\n    return deg;\n  }\n\n  const handleMouseMove = (e: MouseEvent) => {\n    const anchor = document.getElementById(\"anchor\");\n    const rect = anchor?.getBoundingClientRect();\n\n    const anchorX = rect?.left! + rect?.width! / 2;\n    const anchorY = rect?.top! + rect?.height! / 2;\n    const mouseX = e.clientX;\n    const mouseY = e.clientY;\n\n    const angleDeg = angle(mouseX, mouseY, anchorX, anchorY);\n\n    // const eyes = document.querySelectorAll<HTMLElement>(`.eye`);\n    // eyes.forEach((eye) => {\n    //   eye.style.transform! = `rotate(${90 + angleDeg}deg)`;\n    // });\n    setRotateDegree(angleDeg);\n    console.log(\"moving event mouse\");\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (heroImageClick >= 23) {\n      setDisplayEasterEgg(1);\n    }\n  }, [heroImageClick]);\n\n  return (\n    <div>\n      <Container className={classes.container}>\n        <div className={classes.inner}>\n          <div className={classes.content}>\n            <Title className={classes.title} mb=\"xl\">\n              The Best Way to Discover{\" \"}\n              {/* <span className={classes.blueText}>Music Opportunities</span> */}\n              <Text\n                span\n                fw={800}\n                className={classes.textHighlight}\n                variant=\"gradient\"\n                gradient={{ from: \"cyan\", to: \"blue\", deg: 45 }}\n              >\n                Music{\" \"}\n              </Text>\n              <Text\n                span\n                fw={800}\n                className={classes.textHighlight}\n                variant=\"gradient\"\n                gradient={{ from: \"green\", to: \"blue\", deg: 45 }}\n              >\n                Opportunities\n              </Text>\n            </Title>\n            <Text color=\"dimmed\" mt=\"xl\" className={classes.subheading}>\n              An online hub for musicians to find jobs, competitions, festivals,\n              and concerts.\n            </Text>\n          </div>\n          <div\n            style={{\n              display: !displayEasterEgg ? \"block\" : \"none\",\n              opacity: !displayEasterEgg ? 1 : 0,\n            }}\n          >\n            <Teeter rotation={5} timing={120}>\n              <Image\n                src={String(heroLogo)}\n                className={classes.image}\n                onClick={() => setHeroImageClick(heroImageClick + 1)}\n              />\n            </Teeter>\n          </div>\n\n          <motion.div\n            key={displayEasterEgg}\n            initial={{ opacity: 0, scale: 0, rotate: 270 }}\n            animate={{\n              opacity: 1,\n              scale: 1,\n              rotate: 0,\n              transition: { duration: 1 },\n            }}\n            className={classes.image}\n            style={{\n              position: \"relative\",\n              display: displayEasterEgg ? \"block\" : \"none\",\n            }}\n          >\n            <IconScubaMask\n              size=\"lg\"\n              color=\"#359fec\"\n              className={classes.image}\n              id=\"anchor\"\n            />\n            {/* <img src={Eyes} style={{ position: \"absolute\" }} /> */}\n            <div\n              style={{\n                position: \"absolute\",\n                padding: \"0px\",\n                paddingTop: \"9%\",\n                borderRadius: \"10px\",\n                top: \"40%\",\n                left: \"23%\",\n                transform: `rotate(${90 + rotateDegree}deg)`,\n              }}\n              className=\"eye\"\n            >\n              <div\n                style={{\n                  background: \"black\",\n                  borderRadius: \"10px\",\n                  padding: \"0.45vw\",\n                }}\n                className={classes.image}\n              ></div>\n            </div>\n            <div\n              style={{\n                position: \"absolute\",\n                padding: \"0px\",\n                paddingTop: \"9%\",\n                borderRadius: \"10px\",\n                top: \"40%\",\n                right: \"39%\",\n                transform: `rotate(${90 + rotateDegree}deg)`,\n              }}\n              className=\"eye\"\n            >\n              <div\n                style={{\n                  background: \"black\",\n                  borderRadius: \"10px\",\n                  padding: \"0.45vw\",\n                }}\n                className={classes.image}\n              ></div>\n            </div>\n          </motion.div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/landing/Hero.tsx b/src/components/landing/Hero.tsx
--- a/src/components/landing/Hero.tsx	
+++ b/src/components/landing/Hero.tsx	
@@ -1,51 +1,51 @@
-import { useState, useRef, useEffect } from "react";
-import { createStyles, Container, Title, Text, Image } from "@mantine/core";
-import { Teeter } from "../animations/AnimateOnHover";
-import { IconScubaMask } from "@tabler/icons";
-import { motion } from "framer-motion";
-import ScubaMask from "../../images/scuba-mask.png";
-import Eyes from "../../images/eyes.png";
+import {useState, useRef, useEffect} from 'react'
+import {createStyles, Container, Title, Text, Image} from '@mantine/core'
+import {Teeter} from '../animations/AnimateOnHover'
+import {IconScubaMask} from '@tabler/icons'
+import {motion} from 'framer-motion'
+import ScubaMask from '../../images/scuba-mask.png'
+import Eyes from '../../images/eyes.png'
 
-const heroLogo = require("../../images/HeroLogo.png");
-const scubaLogo = require("../../images/scuba-mask.png");
+const heroLogo = require('../../images/HeroLogo.png')
+const scubaLogo = require('../../images/scuba-mask.png')
 
 const useStyles = createStyles((theme) => ({
   inner: {
-    display: "flex",
-    justifyContent: "space-between",
+    display: 'flex',
+    justifyContent: 'space-between',
     // paddingTop: theme.spacing.xl,
     paddingBottom: theme.spacing.xl * 6,
   },
 
   content: {
-    display: "flex",
-    alignItems: "center",
-    alignContent: "center",
-    flexWrap: "wrap",
+    display: 'flex',
+    alignItems: 'center',
+    alignContent: 'center',
+    flexWrap: 'wrap',
 
     maxWidth: 480,
     marginRight: theme.spacing.xl * 3,
 
-    [theme.fn.smallerThan("md")]: {
-      maxWidth: "100%",
+    [theme.fn.smallerThan('md')]: {
+      maxWidth: '100%',
       marginRight: 0,
     },
   },
 
   title: {
-    color: theme.colorScheme === "dark" ? theme.white : "#454545",
+    color: theme.colorScheme === 'dark' ? theme.white : '#454545',
     fontFamily: `Greycliff CF, ${theme.fontFamily}`,
     fontSize: 55,
     lineHeight: 1.2,
     fontWeight: 800,
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 36,
     },
   },
 
   control: {
-    [theme.fn.smallerThan("xs")]: {
+    [theme.fn.smallerThan('xs')]: {
       flex: 1,
     },
   },
@@ -55,19 +55,19 @@
     // maxWidth: "40vw",
     // marginLeft: 40,
 
-    [theme.fn.smallerThan("md")]: {
-      display: "none",
+    [theme.fn.smallerThan('md')]: {
+      display: 'none',
     },
   },
 
   highlight: {
-    position: "relative",
+    position: 'relative',
     backgroundColor: theme.fn.variant({
-      variant: "light",
+      variant: 'light',
       color: theme.primaryColor,
     }).background,
     borderRadius: theme.radius.sm,
-    padding: "4px 12px",
+    padding: '4px 12px',
   },
 
   textHighlight: {
@@ -75,68 +75,68 @@
   },
 
   container: {
-    maxWidth: "75vw",
+    maxWidth: '75vw',
 
-    [theme.fn.smallerThan("md")]: {
-      maxWidth: "85vw",
+    [theme.fn.smallerThan('md')]: {
+      maxWidth: '85vw',
     },
   },
 
   subheading: {
     fontSize: 25,
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 22,
     },
   },
-}));
+}))
 
 export function Hero() {
-  const { classes } = useStyles();
-  const [rotateDegree, setRotateDegree] = useState(0);
-  const [heroImageClick, setHeroImageClick] = useState(0);
-  const [displayEasterEgg, setDisplayEasterEgg] = useState(0);
+  const {classes} = useStyles()
+  const [rotateDegree, setRotateDegree] = useState(0)
+  const [heroImageClick, setHeroImageClick] = useState(0)
+  const [displayEasterEgg, setDisplayEasterEgg] = useState(0)
 
   function angle(cx: number, cy: number, ex: number, ey: number) {
-    const dy = ey - cy;
-    const dx = ex - cx;
-    const rad = Math.atan2(dy, dx);
-    const deg = (rad * 180) / Math.PI;
-    return deg;
+    const dy = ey - cy
+    const dx = ex - cx
+    const rad = Math.atan2(dy, dx)
+    const deg = (rad * 180) / Math.PI
+    return deg
   }
 
   const handleMouseMove = (e: MouseEvent) => {
-    const anchor = document.getElementById("anchor");
-    const rect = anchor?.getBoundingClientRect();
+    const anchor = document.getElementById('anchor')
+    const rect = anchor?.getBoundingClientRect()
 
-    const anchorX = rect?.left! + rect?.width! / 2;
-    const anchorY = rect?.top! + rect?.height! / 2;
-    const mouseX = e.clientX;
-    const mouseY = e.clientY;
+    const anchorX = rect?.left! + rect?.width! / 2
+    const anchorY = rect?.top! + rect?.height! / 2
+    const mouseX = e.clientX
+    const mouseY = e.clientY
 
-    const angleDeg = angle(mouseX, mouseY, anchorX, anchorY);
+    const angleDeg = angle(mouseX, mouseY, anchorX, anchorY)
 
     // const eyes = document.querySelectorAll<HTMLElement>(`.eye`);
     // eyes.forEach((eye) => {
     //   eye.style.transform! = `rotate(${90 + angleDeg}deg)`;
     // });
-    setRotateDegree(angleDeg);
-    console.log("moving event mouse");
-  };
+    setRotateDegree(angleDeg)
+    console.log('moving event mouse')
+  }
 
   useEffect(() => {
-    document.addEventListener("mousemove", handleMouseMove);
+    document.addEventListener('mousemove', handleMouseMove)
 
     return () => {
-      document.removeEventListener("mousemove", handleMouseMove);
-    };
-  }, []);
+      document.removeEventListener('mousemove', handleMouseMove)
+    }
+  }, [])
 
   useEffect(() => {
     if (heroImageClick >= 23) {
-      setDisplayEasterEgg(1);
+      setDisplayEasterEgg(1)
     }
-  }, [heroImageClick]);
+  }, [heroImageClick])
 
   return (
     <div>
@@ -144,23 +144,23 @@
         <div className={classes.inner}>
           <div className={classes.content}>
             <Title className={classes.title} mb="xl">
-              The Best Way to Discover{" "}
+              The Best Way to Discover{' '}
               {/* <span className={classes.blueText}>Music Opportunities</span> */}
               <Text
                 span
                 fw={800}
                 className={classes.textHighlight}
                 variant="gradient"
-                gradient={{ from: "cyan", to: "blue", deg: 45 }}
+                gradient={{from: 'cyan', to: 'blue', deg: 45}}
               >
-                Music{" "}
+                Music{' '}
               </Text>
               <Text
                 span
                 fw={800}
                 className={classes.textHighlight}
                 variant="gradient"
-                gradient={{ from: "green", to: "blue", deg: 45 }}
+                gradient={{from: 'green', to: 'blue', deg: 45}}
               >
                 Opportunities
               </Text>
@@ -172,7 +172,7 @@
           </div>
           <div
             style={{
-              display: !displayEasterEgg ? "block" : "none",
+              display: !displayEasterEgg ? 'block' : 'none',
               opacity: !displayEasterEgg ? 1 : 0,
             }}
           >
@@ -187,17 +187,17 @@
 
           <motion.div
             key={displayEasterEgg}
-            initial={{ opacity: 0, scale: 0, rotate: 270 }}
+            initial={{opacity: 0, scale: 0, rotate: 270}}
             animate={{
               opacity: 1,
               scale: 1,
               rotate: 0,
-              transition: { duration: 1 },
+              transition: {duration: 1},
             }}
             className={classes.image}
             style={{
-              position: "relative",
-              display: displayEasterEgg ? "block" : "none",
+              position: 'relative',
+              display: displayEasterEgg ? 'block' : 'none',
             }}
           >
             <IconScubaMask
@@ -209,42 +209,42 @@
             {/* <img src={Eyes} style={{ position: "absolute" }} /> */}
             <div
               style={{
-                position: "absolute",
-                padding: "0px",
-                paddingTop: "9%",
-                borderRadius: "10px",
-                top: "40%",
-                left: "23%",
+                position: 'absolute',
+                padding: '0px',
+                paddingTop: '9%',
+                borderRadius: '10px',
+                top: '40%',
+                left: '23%',
                 transform: `rotate(${90 + rotateDegree}deg)`,
               }}
               className="eye"
             >
               <div
                 style={{
-                  background: "black",
-                  borderRadius: "10px",
-                  padding: "0.45vw",
+                  background: 'black',
+                  borderRadius: '10px',
+                  padding: '0.45vw',
                 }}
                 className={classes.image}
               ></div>
             </div>
             <div
               style={{
-                position: "absolute",
-                padding: "0px",
-                paddingTop: "9%",
-                borderRadius: "10px",
-                top: "40%",
-                right: "39%",
+                position: 'absolute',
+                padding: '0px',
+                paddingTop: '9%',
+                borderRadius: '10px',
+                top: '40%',
+                right: '39%',
                 transform: `rotate(${90 + rotateDegree}deg)`,
               }}
               className="eye"
             >
               <div
                 style={{
-                  background: "black",
-                  borderRadius: "10px",
-                  padding: "0.45vw",
+                  background: 'black',
+                  borderRadius: '10px',
+                  padding: '0.45vw',
                 }}
                 className={classes.image}
               ></div>
@@ -253,5 +253,5 @@
         </div>
       </Container>
     </div>
-  );
+  )
 }
Index: src/components/landing/Features.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { AnimateIn } from \"../animations/AnimateOnScroll\";\n\nimport {\n  createStyles,\n  Title,\n  Text,\n  Card,\n  SimpleGrid,\n  Container,\n  Image,\n} from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst jobIcon = require(\"../../images/JobIcon.png\");\nconst ticketIcon = require(\"../../images/TicketIcon.png\");\nconst trophyIcon = require(\"../../images/TrophyIcon.png\");\nconst instrumentIcon = require(\"../../images/InstrumentIcon.png\");\nconst compositionsIcon = require(\"../../images/CompositionsIcon.png\");\nconst blogIcon = require(\"../../images/BlogIcon.png\");\nconst newsIcon = require(\"../../images/NewsIcon.png\");\n\nconst mockdata = [\n  {\n    link: \"/jobs\",\n    title: \"Jobs\",\n    icon: jobIcon,\n  },\n  {\n    link: \"/competitions\",\n    title: \"Competitions\",\n    icon: trophyIcon,\n  },\n  {\n    link: \"/festivals\",\n    title: \"Festivals\",\n    icon: ticketIcon,\n  },\n  {\n    link: \"/concerts\",\n    title: \"Concerts\",\n    icon: instrumentIcon,\n  },\n  {\n    link: \"/news\",\n    title: \"News\",\n    icon: newsIcon,\n  },\n  {\n    link: \"/blog\",\n    title: \"Blog\",\n    icon: blogIcon,\n  },\n  {\n    link: \"/competitions\",\n    title: \"Compositions\",\n    icon: compositionsIcon,\n  },\n];\n\nconst useStyles = createStyles((theme) => ({\n  title: {\n    fontSize: 32,\n    fontWeight: 900,\n    letterSpacing: 2,\n    paddingBottom: 35,\n    color: \"white\",\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 22,\n    },\n  },\n\n  description: {\n    maxWidth: 600,\n    margin: \"auto\",\n\n    \"&::after\": {\n      content: '\"\"',\n      display: \"block\",\n      backgroundColor: theme.fn.primaryColor(),\n      width: 45,\n      height: 2,\n      marginTop: theme.spacing.sm,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n\n  card: {\n    borderRadius: \"50%\",\n    width: 200,\n    height: 200,\n    border: `10px solid #228BE6`,\n    borderStyle: \"double\",\n\n    \"&:hover\": {\n      border: `6px solid #90CAF9`,\n      cursor: `pointer`,\n    },\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      width: 145,\n      height: 145,\n    },\n  },\n\n  cardTitle: {\n    width: \"100%\",\n    fontSize: 18,\n    fontWeight: 500,\n    color: \"#454545\",\n    textAlign: \"center\",\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 14,\n    },\n  },\n\n  featureCards: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    flexWrap: \"wrap\",\n    padding: 0,\n  },\n\n  feature: {\n    padding: 0,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      padding: 0,\n    },\n  },\n\n  featureContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n  },\n\n  image: {\n    marginTop: -20,\n    maxWidth: 80,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      marginTop: -10,\n      maxWidth: 55,\n    },\n  },\n\n  container: {\n    maxWidth: \"100%\",\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      padding: 0,\n    },\n  },\n\n  grid: {\n    gap: 50,\n\n    [theme.fn.smallerThan(\"md\")]: {\n      gap: \"40px 60px\",\n    },\n    [theme.fn.smallerThan(\"sm\")]: {\n      gap: \"40px 16px\",\n    },\n  },\n}));\n\nexport function Features() {\n  const { classes } = useStyles();\n  const navigate = useNavigate();\n\n  const features = mockdata.map((feature) => (\n    <Container className={classes.feature}>\n      <Card\n        key={feature.title}\n        shadow=\"md\"\n        className={classes.card}\n        p=\"xl\"\n        onClick={() => navigate(feature.link)}\n      >\n        <Container className={classes.featureCards}>\n          <Image src={String(feature.icon)} className={classes.image} />\n          <Text className={classes.cardTitle} mt=\"md\">\n            {feature.title}\n          </Text>\n        </Container>\n      </Card>\n    </Container>\n  ));\n  return (\n    <Container\n      py=\"xl\"\n      style={{ paddingTop: 100, paddingBottom: 100 }}\n      className={classes.container}\n    >\n\n      {/*Button List of all the Tabs on the Homepage*/}\n      <AnimateIn>\n        <Title order={2} className={classes.title} align=\"center\" mt=\"xl\">\n          Explore Opportunities and Events on <br />{\" \"}\n          <span style={{ color: \"#90CAF9\" }}>Composition Today</span>\n        </Title>\n      </AnimateIn>\n\n      {/*7x1 Row of the Buttons for each category*/}\n      <AnimateIn>\n        <Container mb=\"xl\" className={classes.featureContainer}>\n          <SimpleGrid\n            cols={4}\n            mt={50}\n            className={classes.grid}\n            breakpoints={[{ maxWidth: \"md\", cols: 2 }]}\n          >\n            {features.slice(0,4)}\n          </SimpleGrid>\n\n        </Container>\n        <Container mb=\"xl\" className={classes.featureContainer}>\n          <SimpleGrid\n              cols={3}\n              className={classes.grid}\n              breakpoints={[{ maxWidth: \"md\", cols: 2 }]}\n          >\n            {features.slice(4,7)}\n          </SimpleGrid>\n        </Container>\n      </AnimateIn>\n\n    </Container>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/landing/Features.tsx b/src/components/landing/Features.tsx
--- a/src/components/landing/Features.tsx	
+++ b/src/components/landing/Features.tsx	
@@ -1,4 +1,4 @@
-import { AnimateIn } from "../animations/AnimateOnScroll";
+import {AnimateIn} from '../animations/AnimateOnScroll'
 
 import {
   createStyles,
@@ -8,54 +8,54 @@
   SimpleGrid,
   Container,
   Image,
-} from "@mantine/core";
-import { useNavigate } from "react-router-dom";
+} from '@mantine/core'
+import {useNavigate} from 'react-router-dom'
 
-const jobIcon = require("../../images/JobIcon.png");
-const ticketIcon = require("../../images/TicketIcon.png");
-const trophyIcon = require("../../images/TrophyIcon.png");
-const instrumentIcon = require("../../images/InstrumentIcon.png");
-const compositionsIcon = require("../../images/CompositionsIcon.png");
-const blogIcon = require("../../images/BlogIcon.png");
-const newsIcon = require("../../images/NewsIcon.png");
+const jobIcon = require('../../images/JobIcon.png')
+const ticketIcon = require('../../images/TicketIcon.png')
+const trophyIcon = require('../../images/TrophyIcon.png')
+const instrumentIcon = require('../../images/InstrumentIcon.png')
+const compositionsIcon = require('../../images/CompositionsIcon.png')
+const blogIcon = require('../../images/BlogIcon.png')
+const newsIcon = require('../../images/NewsIcon.png')
 
 const mockdata = [
   {
-    link: "/jobs",
-    title: "Jobs",
+    link: '/jobs',
+    title: 'Jobs',
     icon: jobIcon,
   },
   {
-    link: "/competitions",
-    title: "Competitions",
+    link: '/competitions',
+    title: 'Competitions',
     icon: trophyIcon,
   },
   {
-    link: "/festivals",
-    title: "Festivals",
+    link: '/festivals',
+    title: 'Festivals',
     icon: ticketIcon,
   },
   {
-    link: "/concerts",
-    title: "Concerts",
+    link: '/concerts',
+    title: 'Concerts',
     icon: instrumentIcon,
   },
   {
-    link: "/news",
-    title: "News",
+    link: '/news',
+    title: 'News',
     icon: newsIcon,
   },
   {
-    link: "/blog",
-    title: "Blog",
+    link: '/blog',
+    title: 'Blog',
     icon: blogIcon,
   },
   {
-    link: "/competitions",
-    title: "Compositions",
+    link: '/competitions',
+    title: 'Compositions',
     icon: compositionsIcon,
   },
-];
+]
 
 const useStyles = createStyles((theme) => ({
   title: {
@@ -63,97 +63,97 @@
     fontWeight: 900,
     letterSpacing: 2,
     paddingBottom: 35,
-    color: "white",
-    [theme.fn.smallerThan("sm")]: {
+    color: 'white',
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 22,
     },
   },
 
   description: {
     maxWidth: 600,
-    margin: "auto",
+    margin: 'auto',
 
-    "&::after": {
+    '&::after': {
       content: '""',
-      display: "block",
+      display: 'block',
       backgroundColor: theme.fn.primaryColor(),
       width: 45,
       height: 2,
       marginTop: theme.spacing.sm,
-      marginLeft: "auto",
-      marginRight: "auto",
+      marginLeft: 'auto',
+      marginRight: 'auto',
     },
   },
 
   card: {
-    borderRadius: "50%",
+    borderRadius: '50%',
     width: 200,
     height: 200,
     border: `10px solid #228BE6`,
-    borderStyle: "double",
+    borderStyle: 'double',
 
-    "&:hover": {
+    '&:hover': {
       border: `6px solid #90CAF9`,
       cursor: `pointer`,
     },
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       width: 145,
       height: 145,
     },
   },
 
   cardTitle: {
-    width: "100%",
+    width: '100%',
     fontSize: 18,
     fontWeight: 500,
-    color: "#454545",
-    textAlign: "center",
+    color: '#454545',
+    textAlign: 'center',
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 14,
     },
   },
 
   featureCards: {
-    height: "100%",
-    display: "flex",
-    justifyContent: "center",
-    alignItems: "center",
-    alignContent: "center",
-    flexWrap: "wrap",
+    height: '100%',
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'center',
+    alignContent: 'center',
+    flexWrap: 'wrap',
     padding: 0,
   },
 
   feature: {
     padding: 0,
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       padding: 0,
     },
   },
 
   featureContainer: {
-    display: "flex",
-    justifyContent: "center",
-    alignItems: "center",
-    maxWidth: "100%",
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'center',
+    maxWidth: '100%',
   },
 
   image: {
     marginTop: -20,
     maxWidth: 80,
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       marginTop: -10,
       maxWidth: 55,
     },
   },
 
   container: {
-    maxWidth: "100%",
+    maxWidth: '100%',
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       padding: 0,
     },
   },
@@ -161,18 +161,18 @@
   grid: {
     gap: 50,
 
-    [theme.fn.smallerThan("md")]: {
-      gap: "40px 60px",
+    [theme.fn.smallerThan('md')]: {
+      gap: '40px 60px',
     },
-    [theme.fn.smallerThan("sm")]: {
-      gap: "40px 16px",
+    [theme.fn.smallerThan('sm')]: {
+      gap: '40px 16px',
     },
   },
-}));
+}))
 
 export function Features() {
-  const { classes } = useStyles();
-  const navigate = useNavigate();
+  const {classes} = useStyles()
+  const navigate = useNavigate()
 
   const features = mockdata.map((feature) => (
     <Container className={classes.feature}>
@@ -191,19 +191,18 @@
         </Container>
       </Card>
     </Container>
-  ));
+  ))
   return (
     <Container
       py="xl"
-      style={{ paddingTop: 100, paddingBottom: 100 }}
+      style={{paddingTop: 100, paddingBottom: 100}}
       className={classes.container}
     >
-
       {/*Button List of all the Tabs on the Homepage*/}
       <AnimateIn>
         <Title order={2} className={classes.title} align="center" mt="xl">
-          Explore Opportunities and Events on <br />{" "}
-          <span style={{ color: "#90CAF9" }}>Composition Today</span>
+          Explore Opportunities and Events on <br />{' '}
+          <span style={{color: '#90CAF9'}}>Composition Today</span>
         </Title>
       </AnimateIn>
 
@@ -214,23 +213,21 @@
             cols={4}
             mt={50}
             className={classes.grid}
-            breakpoints={[{ maxWidth: "md", cols: 2 }]}
+            breakpoints={[{maxWidth: 'md', cols: 2}]}
           >
-            {features.slice(0,4)}
+            {features.slice(0, 4)}
           </SimpleGrid>
-
         </Container>
         <Container mb="xl" className={classes.featureContainer}>
           <SimpleGrid
-              cols={3}
-              className={classes.grid}
-              breakpoints={[{ maxWidth: "md", cols: 2 }]}
+            cols={3}
+            className={classes.grid}
+            breakpoints={[{maxWidth: 'md', cols: 2}]}
           >
-            {features.slice(4,7)}
+            {features.slice(4, 7)}
           </SimpleGrid>
         </Container>
       </AnimateIn>
-
     </Container>
-  );
+  )
 }
Index: src/components/landing/RegisterCTA.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { AnimateIn } from \"../animations/AnimateOnScroll\";\n\nimport {\n  createStyles,\n  Image,\n  Container,\n  Title,\n  Text,\n  Button,\n  SimpleGrid,\n} from \"@mantine/core\";\nimport image from \"../../images/SignUp.png\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    paddingTop: 100,\n    paddingBottom: 40,\n    paddingLeft: 0,\n    paddingRight: 0,\n    maxWidth: 1080,\n\n    [theme.fn.smallerThan(\"md\")]: {\n      maxWidth: \"90vw\",\n    },\n  },\n\n  title: {\n    fontWeight: 800,\n    fontSize: 44,\n    marginBottom: theme.spacing.md,\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    color: \"#454545\",\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 28,\n    },\n  },\n\n  subtitle: {\n    fontSize: 25,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 18,\n    },\n  },\n\n  control: {\n    fontSize: 18,\n  },\n\n  image: {\n    maxWidth: 450,\n    [theme.fn.smallerThan(\"sm\")]: {\n      maxWidth: 250,\n    },\n  },\n\n  musicBarsImg: {\n    maxWidth: 470,\n    marginLeft: \"-20px\",\n    marginBottom: \"40px\",\n    [theme.fn.smallerThan(\"sm\")]: {\n      marginLeft: \"0px\",\n      maxWidth: 270,\n    },\n  },\n\n  centerText: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    flexWrap: \"wrap\",\n  },\n\n  centerImage: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  container: {\n    [theme.fn.smallerThan(\"md\")]: {\n      paddingLeft: 30,\n      paddingRight: 30,\n    },\n  },\n}));\n\nconst musicBars = require(\"../../images/MusicBars.png\");\n\nexport function RegisterCTA() {\n  const { classes } = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Container className={classes.root}>\n      <AnimateIn>\n        <SimpleGrid\n          spacing={80}\n          cols={2}\n          breakpoints={[{ maxWidth: \"sm\", cols: 1, spacing: 40 }]}\n          className={classes.container}\n        >\n          <div className={classes.centerText}>\n            <Image src={String(musicBars)} className={classes.musicBarsImg} />\n            <Title className={classes.title}>Want to contribute?</Title>\n            <Text color=\"dimmed\" className={classes.subtitle}>\n              Create an account with us today to post opportunities you've come\n              across.\n            </Text>\n            <Button\n              variant=\"outline\"\n              size=\"xl\"\n              mt=\"xl\"\n              className={classes.control}\n              onClick={() => navigate(\"/register\")}\n            >\n              Create an Account\n            </Button>\n          </div>\n          <div className={classes.centerImage}>\n            <Image src={image} className={classes.image} />\n          </div>\n        </SimpleGrid>\n      </AnimateIn>\n    </Container>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/landing/RegisterCTA.tsx b/src/components/landing/RegisterCTA.tsx
--- a/src/components/landing/RegisterCTA.tsx	
+++ b/src/components/landing/RegisterCTA.tsx	
@@ -1,4 +1,4 @@
-import { AnimateIn } from "../animations/AnimateOnScroll";
+import {AnimateIn} from '../animations/AnimateOnScroll'
 
 import {
   createStyles,
@@ -8,9 +8,9 @@
   Text,
   Button,
   SimpleGrid,
-} from "@mantine/core";
-import image from "../../images/SignUp.png";
-import { useNavigate } from "react-router-dom";
+} from '@mantine/core'
+import image from '../../images/SignUp.png'
+import {useNavigate} from 'react-router-dom'
 
 const useStyles = createStyles((theme) => ({
   root: {
@@ -20,8 +20,8 @@
     paddingRight: 0,
     maxWidth: 1080,
 
-    [theme.fn.smallerThan("md")]: {
-      maxWidth: "90vw",
+    [theme.fn.smallerThan('md')]: {
+      maxWidth: '90vw',
     },
   },
 
@@ -30,9 +30,9 @@
     fontSize: 44,
     marginBottom: theme.spacing.md,
     fontFamily: `Greycliff CF, ${theme.fontFamily}`,
-    color: "#454545",
+    color: '#454545',
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 28,
     },
   },
@@ -40,7 +40,7 @@
   subtitle: {
     fontSize: 25,
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 18,
     },
   },
@@ -51,47 +51,47 @@
 
   image: {
     maxWidth: 450,
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       maxWidth: 250,
     },
   },
 
   musicBarsImg: {
     maxWidth: 470,
-    marginLeft: "-20px",
-    marginBottom: "40px",
-    [theme.fn.smallerThan("sm")]: {
-      marginLeft: "0px",
+    marginLeft: '-20px',
+    marginBottom: '40px',
+    [theme.fn.smallerThan('sm')]: {
+      marginLeft: '0px',
       maxWidth: 270,
     },
   },
 
   centerText: {
-    display: "flex",
-    alignItems: "center",
-    alignContent: "center",
-    flexWrap: "wrap",
+    display: 'flex',
+    alignItems: 'center',
+    alignContent: 'center',
+    flexWrap: 'wrap',
   },
 
   centerImage: {
-    display: "flex",
-    justifyContent: "center",
-    alignItems: "center",
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'center',
   },
 
   container: {
-    [theme.fn.smallerThan("md")]: {
+    [theme.fn.smallerThan('md')]: {
       paddingLeft: 30,
       paddingRight: 30,
     },
   },
-}));
+}))
 
-const musicBars = require("../../images/MusicBars.png");
+const musicBars = require('../../images/MusicBars.png')
 
 export function RegisterCTA() {
-  const { classes } = useStyles();
-  const navigate = useNavigate();
+  const {classes} = useStyles()
+  const navigate = useNavigate()
 
   return (
     <Container className={classes.root}>
@@ -99,7 +99,7 @@
         <SimpleGrid
           spacing={80}
           cols={2}
-          breakpoints={[{ maxWidth: "sm", cols: 1, spacing: 40 }]}
+          breakpoints={[{maxWidth: 'sm', cols: 1, spacing: 40}]}
           className={classes.container}
         >
           <div className={classes.centerText}>
@@ -114,7 +114,7 @@
               size="xl"
               mt="xl"
               className={classes.control}
-              onClick={() => navigate("/register")}
+              onClick={() => navigate('/register')}
             >
               Create an Account
             </Button>
@@ -125,5 +125,5 @@
         </SimpleGrid>
       </AnimateIn>
     </Container>
-  );
+  )
 }
Index: src/components/adminView/SearchAndFilterUsers.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\n  ActionIcon,\n  createStyles,\n  Menu,\n  Chip,\n  Flex,\n  Tooltip,\n} from \"@mantine/core\";\nimport { Input } from \"@mantine/core\";\nimport { IconSearch, IconFilter } from \"@tabler/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { PaginationSearchObject } from \"../pagination/PaginationNavbar\";\n\ninterface SearchAndFilterProp {\n  email: string;\n  setSearchObj: React.Dispatch<React.SetStateAction<PaginationSearchObject>>;\n}\n\nconst useStyles = createStyles((theme) => ({\n  container: {\n    padding: \"0px\",\n    marginTop: \"40px\",\n\n    [theme.fn.smallerThan(\"md\")]: {\n      marginLeft: \"15px\",\n      marginRight: \"15px\",\n    },\n  },\n\n  search: {\n    borderColor: \"#939393\",\n\n    flexBasis: \"100%\",\n    marginRight: \"15px\",\n\n    [theme.fn.largerThan(\"md\")]: {\n      flexBasis: \"40%\",\n    },\n  },\n}));\n\nconst createSearchObj = (\n  setSearchObj: React.Dispatch<React.SetStateAction<PaginationSearchObject>>,\n  searchKeyword: string,\n  email: string,\n  adminChecked: boolean,\n  bannedChecked: boolean,\n  regularChecked: boolean\n) => {\n  let searchObj: PaginationSearchObject = {\n    keyword: searchKeyword,\n    current_email: email,\n    is_admin: adminChecked ? \"1\" : \"0\",\n    is_banned: bannedChecked ? \"1\" : \"0\",\n    is_regular: regularChecked ? \"1\" : \"0\",\n  };\n\n  console.log(searchObj);\n\n  setSearchObj(searchObj);\n};\n\nconst changeFilter = (\n  filter: string,\n  setAdminChecked: React.Dispatch<React.SetStateAction<boolean>>,\n  setBannedChecked: React.Dispatch<React.SetStateAction<boolean>>,\n  setRegularChecked: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  if (filter === \"admin\") {\n    setAdminChecked((e) => !e);\n    setBannedChecked(false);\n    setRegularChecked(false);\n  } else if (filter === \"banned\") {\n    setBannedChecked((e) => !e);\n    setAdminChecked(false);\n    setRegularChecked(false);\n  } else if (filter === \"regular\") {\n    setRegularChecked((e) => !e);\n    setAdminChecked(false);\n    setBannedChecked(false);\n  }\n};\n\nexport function SearchAndFilterUsers({\n  email,\n  setSearchObj,\n}: SearchAndFilterProp) {\n  const { classes } = useStyles();\n  const [adminChecked, setAdminChecked] = useState(false);\n  const [bannedChecked, setBannedChecked] = useState(false);\n  const [regularChecked, setRegularChecked] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\n\n  useEffect(() => {\n    createSearchObj(\n      setSearchObj,\n      searchKeyword,\n      email,\n      adminChecked,\n      bannedChecked,\n      regularChecked\n    );\n  }, [adminChecked, bannedChecked, regularChecked]);\n\n  const isFilterEnabled = () => {\n    return adminChecked || bannedChecked || regularChecked;\n  };\n\n  const handleEnterKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      console.log(\"loading set to true\");\n      createSearchObj(\n        setSearchObj,\n        searchKeyword,\n        email,\n        adminChecked,\n        bannedChecked,\n        regularChecked\n      );\n    }\n  };\n\n  return (\n    <Flex className={classes.container}>\n      <Input\n        icon={\n          <ActionIcon color=\"dark.2\">\n            <IconSearch />\n          </ActionIcon>\n        }\n        placeholder=\"Search\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setSearchKeyword(e.target.value)\n        }\n        onKeyDown={handleEnterKeyDown}\n        className={classes.search}\n      />\n      <Menu closeOnItemClick={false}>\n        <Menu.Target>\n          <Tooltip label=\"Filter\">\n            <ActionIcon\n              size=\"lg\"\n              color={isFilterEnabled() ? \"blue\" : \"dark.2\"}\n              variant={isFilterEnabled() ? \"light\" : \"subtle\"}\n            >\n              <IconFilter size={40} stroke={1.5} />\n            </ActionIcon>\n          </Tooltip>\n        </Menu.Target>\n\n        <Menu.Dropdown>\n          <Menu.Item\n            onClick={() =>\n              changeFilter(\n                \"admin\",\n                setAdminChecked,\n                setBannedChecked,\n                setRegularChecked\n              )\n            }\n          >\n            <Chip\n              defaultChecked\n              color=\"green\"\n              variant=\"filled\"\n              checked={adminChecked}\n              onChange={() =>\n                changeFilter(\n                  \"admin\",\n                  setAdminChecked,\n                  setBannedChecked,\n                  setRegularChecked\n                )\n              }\n            >\n              Admin\n            </Chip>\n          </Menu.Item>\n\n          <Menu.Item\n            onClick={() =>\n              changeFilter(\n                \"banned\",\n                setAdminChecked,\n                setBannedChecked,\n                setRegularChecked\n              )\n            }\n          >\n            <Chip\n              defaultChecked\n              color=\"red\"\n              variant=\"filled\"\n              checked={bannedChecked}\n              onChange={() =>\n                changeFilter(\n                  \"banned\",\n                  setAdminChecked,\n                  setBannedChecked,\n                  setRegularChecked\n                )\n              }\n            >\n              Banned\n            </Chip>\n          </Menu.Item>\n\n          <Menu.Item\n            onClick={() =>\n              changeFilter(\n                \"regular\",\n                setAdminChecked,\n                setBannedChecked,\n                setRegularChecked\n              )\n            }\n          >\n            <Chip\n              defaultChecked\n              color=\"blue\"\n              variant=\"filled\"\n              checked={regularChecked}\n              onChange={() =>\n                changeFilter(\n                  \"regular\",\n                  setAdminChecked,\n                  setBannedChecked,\n                  setRegularChecked\n                )\n              }\n            >\n              Regular\n            </Chip>\n          </Menu.Item>\n        </Menu.Dropdown>\n      </Menu>\n    </Flex>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/adminView/SearchAndFilterUsers.tsx b/src/components/adminView/SearchAndFilterUsers.tsx
--- a/src/components/adminView/SearchAndFilterUsers.tsx	
+++ b/src/components/adminView/SearchAndFilterUsers.tsx	
@@ -5,39 +5,39 @@
   Chip,
   Flex,
   Tooltip,
-} from "@mantine/core";
-import { Input } from "@mantine/core";
-import { IconSearch, IconFilter } from "@tabler/icons";
-import React, { useState, useEffect } from "react";
-import { PaginationSearchObject } from "../pagination/PaginationNavbar";
+} from '@mantine/core'
+import {Input} from '@mantine/core'
+import {IconSearch, IconFilter} from '@tabler/icons'
+import React, {useState, useEffect} from 'react'
+import {PaginationSearchObject} from '../pagination/PaginationNavbar'
 
 interface SearchAndFilterProp {
-  email: string;
-  setSearchObj: React.Dispatch<React.SetStateAction<PaginationSearchObject>>;
+  email: string
+  setSearchObj: React.Dispatch<React.SetStateAction<PaginationSearchObject>>
 }
 
 const useStyles = createStyles((theme) => ({
   container: {
-    padding: "0px",
-    marginTop: "40px",
+    padding: '0px',
+    marginTop: '40px',
 
-    [theme.fn.smallerThan("md")]: {
-      marginLeft: "15px",
-      marginRight: "15px",
+    [theme.fn.smallerThan('md')]: {
+      marginLeft: '15px',
+      marginRight: '15px',
     },
   },
 
   search: {
-    borderColor: "#939393",
+    borderColor: '#939393',
 
-    flexBasis: "100%",
-    marginRight: "15px",
+    flexBasis: '100%',
+    marginRight: '15px',
 
-    [theme.fn.largerThan("md")]: {
-      flexBasis: "40%",
+    [theme.fn.largerThan('md')]: {
+      flexBasis: '40%',
     },
   },
-}));
+}))
 
 const createSearchObj = (
   setSearchObj: React.Dispatch<React.SetStateAction<PaginationSearchObject>>,
@@ -45,51 +45,51 @@
   email: string,
   adminChecked: boolean,
   bannedChecked: boolean,
-  regularChecked: boolean
+  regularChecked: boolean,
 ) => {
   let searchObj: PaginationSearchObject = {
     keyword: searchKeyword,
     current_email: email,
-    is_admin: adminChecked ? "1" : "0",
-    is_banned: bannedChecked ? "1" : "0",
-    is_regular: regularChecked ? "1" : "0",
-  };
+    is_admin: adminChecked ? '1' : '0',
+    is_banned: bannedChecked ? '1' : '0',
+    is_regular: regularChecked ? '1' : '0',
+  }
 
-  console.log(searchObj);
+  console.log(searchObj)
 
-  setSearchObj(searchObj);
-};
+  setSearchObj(searchObj)
+}
 
 const changeFilter = (
   filter: string,
   setAdminChecked: React.Dispatch<React.SetStateAction<boolean>>,
   setBannedChecked: React.Dispatch<React.SetStateAction<boolean>>,
-  setRegularChecked: React.Dispatch<React.SetStateAction<boolean>>
+  setRegularChecked: React.Dispatch<React.SetStateAction<boolean>>,
 ) => {
-  if (filter === "admin") {
-    setAdminChecked((e) => !e);
-    setBannedChecked(false);
-    setRegularChecked(false);
-  } else if (filter === "banned") {
-    setBannedChecked((e) => !e);
-    setAdminChecked(false);
-    setRegularChecked(false);
-  } else if (filter === "regular") {
-    setRegularChecked((e) => !e);
-    setAdminChecked(false);
-    setBannedChecked(false);
+  if (filter === 'admin') {
+    setAdminChecked((e) => !e)
+    setBannedChecked(false)
+    setRegularChecked(false)
+  } else if (filter === 'banned') {
+    setBannedChecked((e) => !e)
+    setAdminChecked(false)
+    setRegularChecked(false)
+  } else if (filter === 'regular') {
+    setRegularChecked((e) => !e)
+    setAdminChecked(false)
+    setBannedChecked(false)
   }
-};
+}
 
 export function SearchAndFilterUsers({
   email,
   setSearchObj,
 }: SearchAndFilterProp) {
-  const { classes } = useStyles();
-  const [adminChecked, setAdminChecked] = useState(false);
-  const [bannedChecked, setBannedChecked] = useState(false);
-  const [regularChecked, setRegularChecked] = useState(false);
-  const [searchKeyword, setSearchKeyword] = useState("");
+  const {classes} = useStyles()
+  const [adminChecked, setAdminChecked] = useState(false)
+  const [bannedChecked, setBannedChecked] = useState(false)
+  const [regularChecked, setRegularChecked] = useState(false)
+  const [searchKeyword, setSearchKeyword] = useState('')
 
   useEffect(() => {
     createSearchObj(
@@ -98,27 +98,27 @@
       email,
       adminChecked,
       bannedChecked,
-      regularChecked
-    );
-  }, [adminChecked, bannedChecked, regularChecked]);
+      regularChecked,
+    )
+  }, [adminChecked, bannedChecked, regularChecked])
 
   const isFilterEnabled = () => {
-    return adminChecked || bannedChecked || regularChecked;
-  };
+    return adminChecked || bannedChecked || regularChecked
+  }
 
   const handleEnterKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
-    if (e.key === "Enter") {
-      console.log("loading set to true");
+    if (e.key === 'Enter') {
+      console.log('loading set to true')
       createSearchObj(
         setSearchObj,
         searchKeyword,
         email,
         adminChecked,
         bannedChecked,
-        regularChecked
-      );
+        regularChecked,
+      )
     }
-  };
+  }
 
   return (
     <Flex className={classes.container}>
@@ -140,8 +140,8 @@
           <Tooltip label="Filter">
             <ActionIcon
               size="lg"
-              color={isFilterEnabled() ? "blue" : "dark.2"}
-              variant={isFilterEnabled() ? "light" : "subtle"}
+              color={isFilterEnabled() ? 'blue' : 'dark.2'}
+              variant={isFilterEnabled() ? 'light' : 'subtle'}
             >
               <IconFilter size={40} stroke={1.5} />
             </ActionIcon>
@@ -152,10 +152,10 @@
           <Menu.Item
             onClick={() =>
               changeFilter(
-                "admin",
+                'admin',
                 setAdminChecked,
                 setBannedChecked,
-                setRegularChecked
+                setRegularChecked,
               )
             }
           >
@@ -166,10 +166,10 @@
               checked={adminChecked}
               onChange={() =>
                 changeFilter(
-                  "admin",
+                  'admin',
                   setAdminChecked,
                   setBannedChecked,
-                  setRegularChecked
+                  setRegularChecked,
                 )
               }
             >
@@ -180,10 +180,10 @@
           <Menu.Item
             onClick={() =>
               changeFilter(
-                "banned",
+                'banned',
                 setAdminChecked,
                 setBannedChecked,
-                setRegularChecked
+                setRegularChecked,
               )
             }
           >
@@ -194,10 +194,10 @@
               checked={bannedChecked}
               onChange={() =>
                 changeFilter(
-                  "banned",
+                  'banned',
                   setAdminChecked,
                   setBannedChecked,
-                  setRegularChecked
+                  setRegularChecked,
                 )
               }
             >
@@ -208,10 +208,10 @@
           <Menu.Item
             onClick={() =>
               changeFilter(
-                "regular",
+                'regular',
                 setAdminChecked,
                 setBannedChecked,
-                setRegularChecked
+                setRegularChecked,
               )
             }
           >
@@ -222,10 +222,10 @@
               checked={regularChecked}
               onChange={() =>
                 changeFilter(
-                  "regular",
+                  'regular',
                   setAdminChecked,
                   setBannedChecked,
-                  setRegularChecked
+                  setRegularChecked,
                 )
               }
             >
@@ -235,5 +235,5 @@
         </Menu.Dropdown>
       </Menu>
     </Flex>
-  );
+  )
 }
Index: src/components/adminView/UsersList.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\n  Paper,\n  Menu,\n  Badge,\n  Table,\n  Text,\n  ActionIcon,\n  ScrollArea,\n  useMantineTheme,\n  Container,\n  createStyles,\n  LoadingOverlay,\n  Skeleton,\n} from \"@mantine/core\";\nimport {\n  IconBan,\n  IconTrash,\n  IconArrowBigUpLine,\n  IconCheck,\n  IconArrowBigDownLine,\n  IconDots,\n} from \"@tabler/icons\";\nimport { auth } from \"../../Firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport { openAdminModal } from \"./modals/AdminModal\";\nimport { openDeleteModal } from \"./modals/DeleteModal\";\nimport { openBanModal } from \"./modals/BanModal\";\nimport {\n  PaginationNavbar,\n  PaginationSearchObject,\n} from \"../pagination/PaginationNavbar\";\nimport { SearchAndFilterUsers } from \"./SearchAndFilterUsers\";\nimport { useMediaQuery } from \"@mantine/hooks\";\n\ninterface UserTableData {\n  name: string;\n  type: string;\n  email: string;\n}\n\nexport interface RawUserData {\n  UID: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  is_admin: number;\n  is_banned: number;\n}\n\nconst typeColors: Record<string, string> = {\n  regular: \"blue\",\n  admin: \"green\",\n  banned: \"red\",\n};\n\nconst useStyles = createStyles((theme) => ({\n  container: {\n    width: \"80vw\",\n    padding: \"0px\",\n\n    [theme.fn.smallerThan(\"md\")]: {\n      width: \"100%\",\n    },\n  },\n\n  userContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    position: \"relative\",\n    zIndex: 1,\n    borderColor: \"#939393\",\n\n    [theme.fn.smallerThan(\"md\")]: {\n      padding: \"15px\",\n      borderRadius: \"0px\",\n    },\n\n    [theme.fn.largerThan(\"sm\")]: {\n      height: \"65vh\",\n    },\n  },\n\n  table: {\n    maxWidth: \"100%\",\n    flexBasis: \"100%\",\n\n    [theme.fn.smallerThan(\"md\")]: {\n      maxHeight: \"85%\",\n      padding: \"0px\",\n    },\n  },\n\n  bold: {\n    fontWeight: 700,\n  },\n\n  header: {\n    position: \"sticky\",\n    top: 0,\n    backgroundColor:\n      theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white,\n    transition: \"box-shadow 150ms ease\",\n\n    \"&::after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      zIndex: 1,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      borderBottom: `1px solid ${\n        theme.colorScheme === \"dark\"\n          ? theme.colors.dark[3]\n          : theme.colors.gray[2]\n      }`,\n    },\n  },\n\n  scrolled: {\n    // boxShadow: theme.shadows.sm,\n  },\n}));\n\nexport function UsersList() {\n  const theme = useMantineTheme();\n  const { classes, cx } = useStyles();\n  const [rawUserList, setRawUserList] = useState<RawUserData[]>([]);\n  const [userList, setUserList] = useState<UserTableData[]>([]);\n  const [searchParams, setSearchParams] = useState<PaginationSearchObject>({\n    keyword: \"\",\n    current_email: \"\",\n  });\n  const [scrolled, setScrolled] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, async (user) => {\n      if (user && user.email) {\n        setSearchParams({ ...searchParams, current_email: user.email });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    convertRawUserDataToTableData();\n  }, [rawUserList, searchParams]);\n\n  useEffect(() => {\n    console.log(\"loading changed to:\", loading);\n  }, [loading]);\n\n  const convertRawUserDataToTableData = () => {\n    let newUserList: UserTableData[] = [];\n    rawUserList?.forEach((user) => {\n      let formattedUserData: UserTableData = {\n        name: \"\",\n        type: \"Regular\",\n        email: user.email,\n      };\n\n      formattedUserData.name = user.first_name.concat(\" \", user.last_name);\n\n      if (user.is_admin === 1) formattedUserData.type = \"Admin\";\n      if (user.is_banned === 1) formattedUserData.type = \"Banned\";\n\n      newUserList.push(formattedUserData);\n    });\n    setUserList(newUserList);\n  };\n\n  const mobileScreen = useMediaQuery(\"(max-width: 768px)\");\n\n  const rows = userList?.map((item, index) => (\n    <tr key={item.email}>\n      <td>\n        <Text size=\"sm\" weight={500}>\n          {item.name}\n        </Text>\n        {mobileScreen && (\n          <Text size=\"xs\" color=\"dimmed\">\n            {item.email}\n          </Text>\n        )}\n      </td>\n      {!mobileScreen && (\n        <td>\n          <Text size=\"sm\" color=\"dimmed\">\n            {item.email}\n          </Text>\n        </td>\n      )}\n      <td>\n        <Badge\n          color={typeColors[item.type.toLowerCase()]}\n          variant={theme.colorScheme === \"dark\" ? \"light\" : \"outline\"}\n          size={mobileScreen ? \"sm\" : \"md\"}\n        >\n          {item.type}\n        </Badge>\n      </td>\n      <td>\n        <Menu>\n          <Menu.Target>\n            <ActionIcon color=\"dark\" sx={{ position: \"static\", zIndex: 0 }}>\n              <IconDots size={16} stroke={1.5} />\n            </ActionIcon>\n          </Menu.Target>\n\n          <Menu.Dropdown>\n            <Menu.Item\n              disabled={item.type === \"Banned\" ? true : false}\n              icon={\n                item.type === \"Admin\" ? (\n                  <IconArrowBigDownLine size={16} stroke={1.5} />\n                ) : (\n                  <IconArrowBigUpLine size={16} stroke={1.5} />\n                )\n              }\n              onClick={\n                item.type === \"Admin\"\n                  ? () =>\n                      openAdminModal(\n                        item.name,\n                        item.email,\n                        index,\n                        true,\n                        setRawUserList\n                      )\n                  : () =>\n                      openAdminModal(\n                        item.name,\n                        item.email,\n                        index,\n                        false,\n                        setRawUserList\n                      )\n              }\n            >\n              {item.type === \"Admin\" ? \"Remove Admin\" : \"Make Admin\"}\n            </Menu.Item>\n\n            <Menu.Item\n              icon={\n                item.type === \"Banned\" ? (\n                  <IconCheck size={16} stroke={1.5} />\n                ) : (\n                  <IconBan size={16} stroke={1.5} />\n                )\n              }\n              onClick={\n                item.type === \"Banned\"\n                  ? () =>\n                      openBanModal(\n                        item.name,\n                        item.email,\n                        index,\n                        true,\n                        setRawUserList\n                      )\n                  : () =>\n                      openBanModal(\n                        item.name,\n                        item.email,\n                        index,\n                        false,\n                        setRawUserList\n                      )\n              }\n            >\n              {item.type === \"Banned\" ? \"Unban\" : \"Ban\"} User\n            </Menu.Item>\n\n            {/* <Menu.Item\n              icon={<IconTrash size={16} stroke={1.5} />}\n              onClick={() =>\n                openDeleteModal(item.name, item.email, index, setRawUserList)\n              }\n            >\n              Delete User\n            </Menu.Item> */}\n          </Menu.Dropdown>\n        </Menu>\n      </td>\n    </tr>\n  ));\n\n  const loadingRows = [1, 2, 3, 4, 5].map((item, index) => (\n    <tr key={index}>\n      <td>\n        <Skeleton\n          height={8}\n          width=\"40%\"\n          radius=\"xl\"\n          sx={{ margin: \"8px 0px\" }}\n        />\n        {mobileScreen && (\n          <Skeleton\n            height={6}\n            width=\"100%\"\n            radius=\"xl\"\n            sx={{ margin: \"8px 0px\" }}\n          />\n        )}\n      </td>\n      {!mobileScreen && (\n        <td>\n          <Skeleton\n            height={8}\n            width=\"100%\"\n            radius=\"xl\"\n            sx={{ margin: \"8px 0px\" }}\n          />\n        </td>\n      )}\n      <td>\n        <Skeleton\n          height={16}\n          width=\"20%\"\n          radius=\"xl\"\n          sx={{ margin: \"8px 0px\" }}\n        />\n      </td>\n      <td>\n        <Skeleton\n          height={8}\n          width=\"10%\"\n          radius=\"xl\"\n          sx={{ margin: \"8px 0px\" }}\n        />\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Container fluid className={classes.container}>\n      <SearchAndFilterUsers\n        email={searchParams.current_email ? searchParams.current_email : \"\"}\n        setSearchObj={setSearchParams}\n      />\n\n      <Paper\n        withBorder\n        mt={30}\n        radius=\"lg\"\n        className={classes.userContainer}\n        sx={{ padding: \"40px 20px\" }}\n      >\n        <LoadingOverlay\n          visible={loading}\n          overlayOpacity={0.2}\n          overlayBlur={0.2}\n          radius=\"lg\"\n        />\n        <ScrollArea w=\"100%\" h=\"90%\">\n          <Container className={classes.table}>\n            <Table verticalSpacing=\"sm\">\n              <thead\n                className={cx(classes.header, {\n                  [classes.scrolled]: scrolled,\n                })}\n              >\n                <tr>\n                  <th>\n                    {loading ? (\n                      <Skeleton\n                        height={12}\n                        width=\"40%\"\n                        radius=\"xl\"\n                        sx={{ margin: \"8px 0px\" }}\n                      />\n                    ) : (\n                      \"Name\"\n                    )}\n                  </th>\n                  {!mobileScreen && (\n                    <th>\n                      {loading ? (\n                        <Skeleton\n                          height={12}\n                          width=\"30%\"\n                          radius=\"xl\"\n                          sx={{ margin: \"8px 0px\" }}\n                        />\n                      ) : (\n                        \"Email\"\n                      )}\n                    </th>\n                  )}\n                  <th>\n                    {loading ? (\n                      <Skeleton\n                        height={12}\n                        width=\"30%\"\n                        radius=\"xl\"\n                        sx={{ margin: \"8px 0px\" }}\n                      />\n                    ) : (\n                      \"Type\"\n                    )}\n                  </th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>{loading ? loadingRows : rows}</tbody>\n            </Table>\n          </Container>\n        </ScrollArea>\n        <Container sx={{ alignSelf: \"flex-end\", marginTop: \"30px\" }}>\n          <PaginationNavbar\n            apiEndpointExtension={\"users\"}\n            numberOfItemsPerPage={10}\n            setListOfObjects={setRawUserList}\n            searchFilterObject={searchParams}\n            setLoading={setLoading}\n          />\n        </Container>\n      </Paper>\n    </Container>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/adminView/UsersList.tsx b/src/components/adminView/UsersList.tsx
--- a/src/components/adminView/UsersList.tsx	
+++ b/src/components/adminView/UsersList.tsx	
@@ -11,7 +11,7 @@
   createStyles,
   LoadingOverlay,
   Skeleton,
-} from "@mantine/core";
+} from '@mantine/core'
 import {
   IconBan,
   IconTrash,
@@ -19,75 +19,75 @@
   IconCheck,
   IconArrowBigDownLine,
   IconDots,
-} from "@tabler/icons";
-import { auth } from "../../Firebase";
-import { onAuthStateChanged } from "firebase/auth";
-import { useEffect, useState } from "react";
-import { openAdminModal } from "./modals/AdminModal";
-import { openDeleteModal } from "./modals/DeleteModal";
-import { openBanModal } from "./modals/BanModal";
+} from '@tabler/icons'
+import {auth} from '../../Firebase'
+import {onAuthStateChanged} from 'firebase/auth'
+import {useEffect, useState} from 'react'
+import {openAdminModal} from './modals/AdminModal'
+import {openDeleteModal} from './modals/DeleteModal'
+import {openBanModal} from './modals/BanModal'
 import {
   PaginationNavbar,
   PaginationSearchObject,
-} from "../pagination/PaginationNavbar";
-import { SearchAndFilterUsers } from "./SearchAndFilterUsers";
-import { useMediaQuery } from "@mantine/hooks";
+} from '../pagination/PaginationNavbar'
+import {SearchAndFilterUsers} from './SearchAndFilterUsers'
+import {useMediaQuery} from '@mantine/hooks'
 
 interface UserTableData {
-  name: string;
-  type: string;
-  email: string;
+  name: string
+  type: string
+  email: string
 }
 
 export interface RawUserData {
-  UID: string;
-  first_name: string;
-  last_name: string;
-  email: string;
-  is_admin: number;
-  is_banned: number;
+  UID: string
+  first_name: string
+  last_name: string
+  email: string
+  is_admin: number
+  is_banned: number
 }
 
 const typeColors: Record<string, string> = {
-  regular: "blue",
-  admin: "green",
-  banned: "red",
-};
+  regular: 'blue',
+  admin: 'green',
+  banned: 'red',
+}
 
 const useStyles = createStyles((theme) => ({
   container: {
-    width: "80vw",
-    padding: "0px",
+    width: '80vw',
+    padding: '0px',
 
-    [theme.fn.smallerThan("md")]: {
-      width: "100%",
+    [theme.fn.smallerThan('md')]: {
+      width: '100%',
     },
   },
 
   userContainer: {
-    display: "flex",
-    flexWrap: "wrap",
-    position: "relative",
+    display: 'flex',
+    flexWrap: 'wrap',
+    position: 'relative',
     zIndex: 1,
-    borderColor: "#939393",
+    borderColor: '#939393',
 
-    [theme.fn.smallerThan("md")]: {
-      padding: "15px",
-      borderRadius: "0px",
+    [theme.fn.smallerThan('md')]: {
+      padding: '15px',
+      borderRadius: '0px',
     },
 
-    [theme.fn.largerThan("sm")]: {
-      height: "65vh",
+    [theme.fn.largerThan('sm')]: {
+      height: '65vh',
     },
   },
 
   table: {
-    maxWidth: "100%",
-    flexBasis: "100%",
+    maxWidth: '100%',
+    flexBasis: '100%',
 
-    [theme.fn.smallerThan("md")]: {
-      maxHeight: "85%",
-      padding: "0px",
+    [theme.fn.smallerThan('md')]: {
+      maxHeight: '85%',
+      padding: '0px',
     },
   },
 
@@ -96,21 +96,21 @@
   },
 
   header: {
-    position: "sticky",
+    position: 'sticky',
     top: 0,
     backgroundColor:
-      theme.colorScheme === "dark" ? theme.colors.dark[7] : theme.white,
-    transition: "box-shadow 150ms ease",
+      theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,
+    transition: 'box-shadow 150ms ease',
 
-    "&::after": {
+    '&::after': {
       content: '""',
-      position: "absolute",
+      position: 'absolute',
       zIndex: 1,
       left: 0,
       right: 0,
       bottom: 0,
       borderBottom: `1px solid ${
-        theme.colorScheme === "dark"
+        theme.colorScheme === 'dark'
           ? theme.colors.dark[3]
           : theme.colors.gray[2]
       }`,
@@ -120,56 +120,56 @@
   scrolled: {
     // boxShadow: theme.shadows.sm,
   },
-}));
+}))
 
 export function UsersList() {
-  const theme = useMantineTheme();
-  const { classes, cx } = useStyles();
-  const [rawUserList, setRawUserList] = useState<RawUserData[]>([]);
-  const [userList, setUserList] = useState<UserTableData[]>([]);
+  const theme = useMantineTheme()
+  const {classes, cx} = useStyles()
+  const [rawUserList, setRawUserList] = useState<RawUserData[]>([])
+  const [userList, setUserList] = useState<UserTableData[]>([])
   const [searchParams, setSearchParams] = useState<PaginationSearchObject>({
-    keyword: "",
-    current_email: "",
-  });
-  const [scrolled, setScrolled] = useState(false);
-  const [loading, setLoading] = useState(true);
+    keyword: '',
+    current_email: '',
+  })
+  const [scrolled, setScrolled] = useState(false)
+  const [loading, setLoading] = useState(true)
 
   useEffect(() => {
     onAuthStateChanged(auth, async (user) => {
       if (user && user.email) {
-        setSearchParams({ ...searchParams, current_email: user.email });
+        setSearchParams({...searchParams, current_email: user.email})
       }
-    });
-  }, []);
+    })
+  }, [])
 
   useEffect(() => {
-    convertRawUserDataToTableData();
-  }, [rawUserList, searchParams]);
+    convertRawUserDataToTableData()
+  }, [rawUserList, searchParams])
 
   useEffect(() => {
-    console.log("loading changed to:", loading);
-  }, [loading]);
+    console.log('loading changed to:', loading)
+  }, [loading])
 
   const convertRawUserDataToTableData = () => {
-    let newUserList: UserTableData[] = [];
+    let newUserList: UserTableData[] = []
     rawUserList?.forEach((user) => {
       let formattedUserData: UserTableData = {
-        name: "",
-        type: "Regular",
+        name: '',
+        type: 'Regular',
         email: user.email,
-      };
+      }
 
-      formattedUserData.name = user.first_name.concat(" ", user.last_name);
+      formattedUserData.name = user.first_name.concat(' ', user.last_name)
 
-      if (user.is_admin === 1) formattedUserData.type = "Admin";
-      if (user.is_banned === 1) formattedUserData.type = "Banned";
+      if (user.is_admin === 1) formattedUserData.type = 'Admin'
+      if (user.is_banned === 1) formattedUserData.type = 'Banned'
 
-      newUserList.push(formattedUserData);
-    });
-    setUserList(newUserList);
-  };
+      newUserList.push(formattedUserData)
+    })
+    setUserList(newUserList)
+  }
 
-  const mobileScreen = useMediaQuery("(max-width: 768px)");
+  const mobileScreen = useMediaQuery('(max-width: 768px)')
 
   const rows = userList?.map((item, index) => (
     <tr key={item.email}>
@@ -193,8 +193,8 @@
       <td>
         <Badge
           color={typeColors[item.type.toLowerCase()]}
-          variant={theme.colorScheme === "dark" ? "light" : "outline"}
-          size={mobileScreen ? "sm" : "md"}
+          variant={theme.colorScheme === 'dark' ? 'light' : 'outline'}
+          size={mobileScreen ? 'sm' : 'md'}
         >
           {item.type}
         </Badge>
@@ -202,30 +202,30 @@
       <td>
         <Menu>
           <Menu.Target>
-            <ActionIcon color="dark" sx={{ position: "static", zIndex: 0 }}>
+            <ActionIcon color="dark" sx={{position: 'static', zIndex: 0}}>
               <IconDots size={16} stroke={1.5} />
             </ActionIcon>
           </Menu.Target>
 
           <Menu.Dropdown>
             <Menu.Item
-              disabled={item.type === "Banned" ? true : false}
+              disabled={item.type === 'Banned' ? true : false}
               icon={
-                item.type === "Admin" ? (
+                item.type === 'Admin' ? (
                   <IconArrowBigDownLine size={16} stroke={1.5} />
                 ) : (
                   <IconArrowBigUpLine size={16} stroke={1.5} />
                 )
               }
               onClick={
-                item.type === "Admin"
+                item.type === 'Admin'
                   ? () =>
                       openAdminModal(
                         item.name,
                         item.email,
                         index,
                         true,
-                        setRawUserList
+                        setRawUserList,
                       )
                   : () =>
                       openAdminModal(
@@ -233,30 +233,30 @@
                         item.email,
                         index,
                         false,
-                        setRawUserList
+                        setRawUserList,
                       )
               }
             >
-              {item.type === "Admin" ? "Remove Admin" : "Make Admin"}
+              {item.type === 'Admin' ? 'Remove Admin' : 'Make Admin'}
             </Menu.Item>
 
             <Menu.Item
               icon={
-                item.type === "Banned" ? (
+                item.type === 'Banned' ? (
                   <IconCheck size={16} stroke={1.5} />
                 ) : (
                   <IconBan size={16} stroke={1.5} />
                 )
               }
               onClick={
-                item.type === "Banned"
+                item.type === 'Banned'
                   ? () =>
                       openBanModal(
                         item.name,
                         item.email,
                         index,
                         true,
-                        setRawUserList
+                        setRawUserList,
                       )
                   : () =>
                       openBanModal(
@@ -264,11 +264,11 @@
                         item.email,
                         index,
                         false,
-                        setRawUserList
+                        setRawUserList,
                       )
               }
             >
-              {item.type === "Banned" ? "Unban" : "Ban"} User
+              {item.type === 'Banned' ? 'Unban' : 'Ban'} User
             </Menu.Item>
 
             {/* <Menu.Item
@@ -283,23 +283,18 @@
         </Menu>
       </td>
     </tr>
-  ));
+  ))
 
   const loadingRows = [1, 2, 3, 4, 5].map((item, index) => (
     <tr key={index}>
       <td>
-        <Skeleton
-          height={8}
-          width="40%"
-          radius="xl"
-          sx={{ margin: "8px 0px" }}
-        />
+        <Skeleton height={8} width="40%" radius="xl" sx={{margin: '8px 0px'}} />
         {mobileScreen && (
           <Skeleton
             height={6}
             width="100%"
             radius="xl"
-            sx={{ margin: "8px 0px" }}
+            sx={{margin: '8px 0px'}}
           />
         )}
       </td>
@@ -309,7 +304,7 @@
             height={8}
             width="100%"
             radius="xl"
-            sx={{ margin: "8px 0px" }}
+            sx={{margin: '8px 0px'}}
           />
         </td>
       )}
@@ -318,24 +313,19 @@
           height={16}
           width="20%"
           radius="xl"
-          sx={{ margin: "8px 0px" }}
+          sx={{margin: '8px 0px'}}
         />
       </td>
       <td>
-        <Skeleton
-          height={8}
-          width="10%"
-          radius="xl"
-          sx={{ margin: "8px 0px" }}
-        />
+        <Skeleton height={8} width="10%" radius="xl" sx={{margin: '8px 0px'}} />
       </td>
     </tr>
-  ));
+  ))
 
   return (
     <Container fluid className={classes.container}>
       <SearchAndFilterUsers
-        email={searchParams.current_email ? searchParams.current_email : ""}
+        email={searchParams.current_email ? searchParams.current_email : ''}
         setSearchObj={setSearchParams}
       />
 
@@ -344,7 +334,7 @@
         mt={30}
         radius="lg"
         className={classes.userContainer}
-        sx={{ padding: "40px 20px" }}
+        sx={{padding: '40px 20px'}}
       >
         <LoadingOverlay
           visible={loading}
@@ -367,10 +357,10 @@
                         height={12}
                         width="40%"
                         radius="xl"
-                        sx={{ margin: "8px 0px" }}
+                        sx={{margin: '8px 0px'}}
                       />
                     ) : (
-                      "Name"
+                      'Name'
                     )}
                   </th>
                   {!mobileScreen && (
@@ -380,10 +370,10 @@
                           height={12}
                           width="30%"
                           radius="xl"
-                          sx={{ margin: "8px 0px" }}
+                          sx={{margin: '8px 0px'}}
                         />
                       ) : (
-                        "Email"
+                        'Email'
                       )}
                     </th>
                   )}
@@ -393,10 +383,10 @@
                         height={12}
                         width="30%"
                         radius="xl"
-                        sx={{ margin: "8px 0px" }}
+                        sx={{margin: '8px 0px'}}
                       />
                     ) : (
-                      "Type"
+                      'Type'
                     )}
                   </th>
                   <th></th>
@@ -406,9 +396,9 @@
             </Table>
           </Container>
         </ScrollArea>
-        <Container sx={{ alignSelf: "flex-end", marginTop: "30px" }}>
+        <Container sx={{alignSelf: 'flex-end', marginTop: '30px'}}>
           <PaginationNavbar
-            apiEndpointExtension={"users"}
+            apiEndpointExtension={'users'}
             numberOfItemsPerPage={10}
             setListOfObjects={setRawUserList}
             searchFilterObject={searchParams}
@@ -417,5 +407,5 @@
         </Container>
       </Paper>
     </Container>
-  );
+  )
 }
Index: src/components/adminView/modals/BanModal.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Text } from \"@mantine/core\";\nimport React from \"react\";\nimport { RawUserData } from \"../UsersList\";\nimport { openConfirmationModal } from \"../../modal/ConfirmationModal\";\n\nexport const openBanModal = (\n  name: string,\n  email: string,\n  index: number,\n  isBanned: boolean,\n  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>\n) => {\n  const banOrUnbanUser = async () => {\n    try {\n      let requestInfo = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ is_banned: isBanned ? \"0\" : \"1\" }),\n      };\n\n      let res = await fetch(\n        `https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday/users/${email}`,\n        requestInfo\n      );\n\n      let resJSON = await res.json();\n      console.log(resJSON);\n\n      setRawUserList((existingData) => {\n        return [\n          ...existingData.slice(0, index),\n          resJSON.listOfObjects[0],\n          ...existingData.slice(index + 1),\n        ];\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleOnConfirm = () => {\n    banOrUnbanUser();\n  };\n\n  const createChildren = () => {\n    return isBanned ? (\n      <Text size=\"sm\">\n        Are you sure you want to unban{\" \"}\n        <span style={{ fontWeight: 700 }}>{name}</span>? This action will allow\n        this user to login again.\n      </Text>\n    ) : (\n      <Text size=\"sm\">\n        Are you sure you want to ban{\" \"}\n        <span style={{ fontWeight: 700 }}>{name}</span>? This action will\n        prevent this user from logging in. All posts they have created will be\n        soft deleted.\n      </Text>\n    );\n  };\n\n  const title = isBanned ? \"Unban User\" : \"Ban User\";\n  const confirmLabel = isBanned ? \"Unban user\" : \"Ban user\";\n  const cancelLabel = \"Cancel\";\n  const color = \"red\";\n  const children = createChildren();\n\n  openConfirmationModal({\n    title,\n    children,\n    confirmLabel,\n    cancelLabel,\n    color,\n    handleOnConfirm,\n  });\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/adminView/modals/BanModal.tsx b/src/components/adminView/modals/BanModal.tsx
--- a/src/components/adminView/modals/BanModal.tsx	
+++ b/src/components/adminView/modals/BanModal.tsx	
@@ -1,69 +1,69 @@
-import { Text } from "@mantine/core";
-import React from "react";
-import { RawUserData } from "../UsersList";
-import { openConfirmationModal } from "../../modal/ConfirmationModal";
+import {Text} from '@mantine/core'
+import React from 'react'
+import {RawUserData} from '../UsersList'
+import {openConfirmationModal} from '../../modal/ConfirmationModal'
 
 export const openBanModal = (
   name: string,
   email: string,
   index: number,
   isBanned: boolean,
-  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>
+  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>,
 ) => {
   const banOrUnbanUser = async () => {
     try {
       let requestInfo = {
-        method: "PUT",
-        headers: { "Content-Type": "application/json" },
-        body: JSON.stringify({ is_banned: isBanned ? "0" : "1" }),
-      };
+        method: 'PUT',
+        headers: {'Content-Type': 'application/json'},
+        body: JSON.stringify({is_banned: isBanned ? '0' : '1'}),
+      }
 
       let res = await fetch(
         `https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday/users/${email}`,
-        requestInfo
-      );
+        requestInfo,
+      )
 
-      let resJSON = await res.json();
-      console.log(resJSON);
+      let resJSON = await res.json()
+      console.log(resJSON)
 
       setRawUserList((existingData) => {
         return [
           ...existingData.slice(0, index),
           resJSON.listOfObjects[0],
           ...existingData.slice(index + 1),
-        ];
-      });
+        ]
+      })
     } catch (err) {
-      console.log(err);
+      console.log(err)
     }
-  };
+  }
 
   const handleOnConfirm = () => {
-    banOrUnbanUser();
-  };
+    banOrUnbanUser()
+  }
 
   const createChildren = () => {
     return isBanned ? (
       <Text size="sm">
-        Are you sure you want to unban{" "}
-        <span style={{ fontWeight: 700 }}>{name}</span>? This action will allow
+        Are you sure you want to unban{' '}
+        <span style={{fontWeight: 700}}>{name}</span>? This action will allow
         this user to login again.
       </Text>
     ) : (
       <Text size="sm">
-        Are you sure you want to ban{" "}
-        <span style={{ fontWeight: 700 }}>{name}</span>? This action will
-        prevent this user from logging in. All posts they have created will be
-        soft deleted.
+        Are you sure you want to ban{' '}
+        <span style={{fontWeight: 700}}>{name}</span>? This action will prevent
+        this user from logging in. All posts they have created will be soft
+        deleted.
       </Text>
-    );
-  };
+    )
+  }
 
-  const title = isBanned ? "Unban User" : "Ban User";
-  const confirmLabel = isBanned ? "Unban user" : "Ban user";
-  const cancelLabel = "Cancel";
-  const color = "red";
-  const children = createChildren();
+  const title = isBanned ? 'Unban User' : 'Ban User'
+  const confirmLabel = isBanned ? 'Unban user' : 'Ban user'
+  const cancelLabel = 'Cancel'
+  const color = 'red'
+  const children = createChildren()
 
   openConfirmationModal({
     title,
@@ -72,5 +72,5 @@
     cancelLabel,
     color,
     handleOnConfirm,
-  });
-};
+  })
+}
Index: src/components/adminView/modals/AdminModal.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Text } from \"@mantine/core\";\nimport React from \"react\";\nimport { RawUserData } from \"../UsersList\";\nimport { openConfirmationModal } from \"../../modal/ConfirmationModal\";\n\nexport const openAdminModal = (\n  name: string,\n  email: string,\n  index: number,\n  isAdmin: boolean,\n  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>\n) => {\n  const makeOrRemoveAdmin = async () => {\n    try {\n      let requestInfo = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ is_admin: isAdmin ? \"0\" : \"1\" }),\n      };\n\n      let res = await fetch(\n        `https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday/users/${email}`,\n        requestInfo\n      );\n\n      let resJSON = await res.json();\n      console.log(resJSON);\n\n      setRawUserList((existingData) => {\n        return [\n          ...existingData.slice(0, index),\n          resJSON.listOfObjects[0],\n          ...existingData.slice(index + 1),\n        ];\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleOnConfirm = () => {\n    makeOrRemoveAdmin();\n  };\n\n  const createChildren = () => {\n    return isAdmin ? (\n      <Text size=\"sm\">\n        Are you sure you want to remove{\" \"}\n        <span style={{ fontWeight: 700 }}>{name}</span> as an admin? This action\n        will remove admin abilities from this user.\n      </Text>\n    ) : (\n      <Text size=\"sm\">\n        Are you sure you want to make{\" \"}\n        <span style={{ fontWeight: 700 }}>{name}</span> an admin? This action\n        will grant this user admin abilities.\n      </Text>\n    );\n  };\n\n  const title = isAdmin ? \"Remove Admin\" : \"Make Admin\";\n  const confirmLabel = isAdmin ? \"Remove admin\" : \"Make admin\";\n  const cancelLabel = \"Cancel\";\n  const color = \"red\";\n  const children = createChildren();\n\n  openConfirmationModal({\n    title,\n    children,\n    confirmLabel,\n    cancelLabel,\n    color,\n    handleOnConfirm,\n  });\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/adminView/modals/AdminModal.tsx b/src/components/adminView/modals/AdminModal.tsx
--- a/src/components/adminView/modals/AdminModal.tsx	
+++ b/src/components/adminView/modals/AdminModal.tsx	
@@ -1,68 +1,68 @@
-import { Text } from "@mantine/core";
-import React from "react";
-import { RawUserData } from "../UsersList";
-import { openConfirmationModal } from "../../modal/ConfirmationModal";
+import {Text} from '@mantine/core'
+import React from 'react'
+import {RawUserData} from '../UsersList'
+import {openConfirmationModal} from '../../modal/ConfirmationModal'
 
 export const openAdminModal = (
   name: string,
   email: string,
   index: number,
   isAdmin: boolean,
-  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>
+  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>,
 ) => {
   const makeOrRemoveAdmin = async () => {
     try {
       let requestInfo = {
-        method: "PUT",
-        headers: { "Content-Type": "application/json" },
-        body: JSON.stringify({ is_admin: isAdmin ? "0" : "1" }),
-      };
+        method: 'PUT',
+        headers: {'Content-Type': 'application/json'},
+        body: JSON.stringify({is_admin: isAdmin ? '0' : '1'}),
+      }
 
       let res = await fetch(
         `https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday/users/${email}`,
-        requestInfo
-      );
+        requestInfo,
+      )
 
-      let resJSON = await res.json();
-      console.log(resJSON);
+      let resJSON = await res.json()
+      console.log(resJSON)
 
       setRawUserList((existingData) => {
         return [
           ...existingData.slice(0, index),
           resJSON.listOfObjects[0],
           ...existingData.slice(index + 1),
-        ];
-      });
+        ]
+      })
     } catch (err) {
-      console.log(err);
+      console.log(err)
     }
-  };
+  }
 
   const handleOnConfirm = () => {
-    makeOrRemoveAdmin();
-  };
+    makeOrRemoveAdmin()
+  }
 
   const createChildren = () => {
     return isAdmin ? (
       <Text size="sm">
-        Are you sure you want to remove{" "}
-        <span style={{ fontWeight: 700 }}>{name}</span> as an admin? This action
+        Are you sure you want to remove{' '}
+        <span style={{fontWeight: 700}}>{name}</span> as an admin? This action
         will remove admin abilities from this user.
       </Text>
     ) : (
       <Text size="sm">
-        Are you sure you want to make{" "}
-        <span style={{ fontWeight: 700 }}>{name}</span> an admin? This action
-        will grant this user admin abilities.
+        Are you sure you want to make{' '}
+        <span style={{fontWeight: 700}}>{name}</span> an admin? This action will
+        grant this user admin abilities.
       </Text>
-    );
-  };
+    )
+  }
 
-  const title = isAdmin ? "Remove Admin" : "Make Admin";
-  const confirmLabel = isAdmin ? "Remove admin" : "Make admin";
-  const cancelLabel = "Cancel";
-  const color = "red";
-  const children = createChildren();
+  const title = isAdmin ? 'Remove Admin' : 'Make Admin'
+  const confirmLabel = isAdmin ? 'Remove admin' : 'Make admin'
+  const cancelLabel = 'Cancel'
+  const color = 'red'
+  const children = createChildren()
 
   openConfirmationModal({
     title,
@@ -71,5 +71,5 @@
     cancelLabel,
     color,
     handleOnConfirm,
-  });
-};
+  })
+}
Index: src/components/adminView/modals/DeleteModal.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Text } from \"@mantine/core\";\nimport React from \"react\";\nimport { RawUserData } from \"../UsersList\";\nimport { openConfirmationModal } from \"../../modal/ConfirmationModal\";\n\nexport const openDeleteModal = (\n  name: string,\n  email: string,\n  index: number,\n  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>\n) => {\n  const deleteUser = async () => {\n    try {\n      let requestInfo = {\n        method: \"DELETE\",\n      };\n\n      let res = await fetch(\n        `https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday/users/${email}`,\n        requestInfo\n      );\n\n      let resJSON = await res.json();\n      console.log(\"resJSON\", resJSON);\n\n      setRawUserList((existingData) => {\n        return [\n          ...existingData.slice(0, index),\n          ...existingData.slice(index + 1),\n        ];\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleOnConfirm = () => {\n    deleteUser();\n  };\n\n  const createChildren = () => {\n    return (\n      <Text size=\"sm\">\n        Are you sure you want to delete{\" \"}\n        <span style={{ fontWeight: 700 }}>{name}</span>? This action will{\" \"}\n        <span style={{ fontWeight: 700 }}>permanently delete </span>\n        this user from the database.\n      </Text>\n    );\n  };\n\n  const title = \"Delete User\";\n  const confirmLabel = \"Delete user\";\n  const cancelLabel = \"Cancel\";\n  const color = \"red\";\n  const children = createChildren();\n\n  openConfirmationModal({\n    title,\n    children,\n    confirmLabel,\n    cancelLabel,\n    color,\n    handleOnConfirm,\n  });\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/adminView/modals/DeleteModal.tsx b/src/components/adminView/modals/DeleteModal.tsx
--- a/src/components/adminView/modals/DeleteModal.tsx	
+++ b/src/components/adminView/modals/DeleteModal.tsx	
@@ -1,59 +1,59 @@
-import { Text } from "@mantine/core";
-import React from "react";
-import { RawUserData } from "../UsersList";
-import { openConfirmationModal } from "../../modal/ConfirmationModal";
+import {Text} from '@mantine/core'
+import React from 'react'
+import {RawUserData} from '../UsersList'
+import {openConfirmationModal} from '../../modal/ConfirmationModal'
 
 export const openDeleteModal = (
   name: string,
   email: string,
   index: number,
-  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>
+  setRawUserList: React.Dispatch<React.SetStateAction<RawUserData[]>>,
 ) => {
   const deleteUser = async () => {
     try {
       let requestInfo = {
-        method: "DELETE",
-      };
+        method: 'DELETE',
+      }
 
       let res = await fetch(
         `https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday/users/${email}`,
-        requestInfo
-      );
+        requestInfo,
+      )
 
-      let resJSON = await res.json();
-      console.log("resJSON", resJSON);
+      let resJSON = await res.json()
+      console.log('resJSON', resJSON)
 
       setRawUserList((existingData) => {
         return [
           ...existingData.slice(0, index),
           ...existingData.slice(index + 1),
-        ];
-      });
+        ]
+      })
     } catch (err) {
-      console.log(err);
+      console.log(err)
     }
-  };
+  }
 
   const handleOnConfirm = () => {
-    deleteUser();
-  };
+    deleteUser()
+  }
 
   const createChildren = () => {
     return (
       <Text size="sm">
-        Are you sure you want to delete{" "}
-        <span style={{ fontWeight: 700 }}>{name}</span>? This action will{" "}
-        <span style={{ fontWeight: 700 }}>permanently delete </span>
+        Are you sure you want to delete{' '}
+        <span style={{fontWeight: 700}}>{name}</span>? This action will{' '}
+        <span style={{fontWeight: 700}}>permanently delete </span>
         this user from the database.
       </Text>
-    );
-  };
+    )
+  }
 
-  const title = "Delete User";
-  const confirmLabel = "Delete user";
-  const cancelLabel = "Cancel";
-  const color = "red";
-  const children = createChildren();
+  const title = 'Delete User'
+  const confirmLabel = 'Delete user'
+  const cancelLabel = 'Cancel'
+  const color = 'red'
+  const children = createChildren()
 
   openConfirmationModal({
     title,
@@ -62,5 +62,5 @@
     cancelLabel,
     color,
     handleOnConfirm,
-  });
-};
+  })
+}
Index: src/components/animations/AnimateOnHover.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { ReactNode } from \"react\";\n\nimport { animated, useSpring } from \"react-spring\";\n\ntype PropsWithChildren = {\n  rotation: number;\n  timing: number;\n  children: ReactNode;\n};\n\nexport const Teeter: React.FC<PropsWithChildren> = ({\n  rotation = 0,\n  timing = 150,\n  children,\n}) => {\n  const [isBooped, setIsBooped] = React.useState(false);\n  const props = useSpring({\n    display: \"inline-block\",\n    backfaceVisibility: \"hidden\",\n    transform: isBooped ? `rotate(${rotation}deg)` : `rotate(0deg)`,\n    config: {\n      tension: 300,\n      friction: 10,\n    },\n  } as const);\n  React.useEffect(() => {\n    if (!isBooped) {\n      return;\n    }\n    const timeoutId = window.setTimeout(() => {\n      setIsBooped(false);\n    }, timing);\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isBooped, timing]);\n  const trigger = () => {\n    setIsBooped(true);\n  };\n\n  return (\n    <animated.span onMouseEnter={trigger} style={props}>\n      {children}\n    </animated.span>\n  );\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/animations/AnimateOnHover.tsx b/src/components/animations/AnimateOnHover.tsx
--- a/src/components/animations/AnimateOnHover.tsx	
+++ b/src/components/animations/AnimateOnHover.tsx	
@@ -1,46 +1,46 @@
-import React, { ReactNode } from "react";
+import React, {ReactNode} from 'react'
 
-import { animated, useSpring } from "react-spring";
+import {animated, useSpring} from 'react-spring'
 
 type PropsWithChildren = {
-  rotation: number;
-  timing: number;
-  children: ReactNode;
-};
+  rotation: number
+  timing: number
+  children: ReactNode
+}
 
 export const Teeter: React.FC<PropsWithChildren> = ({
   rotation = 0,
   timing = 150,
   children,
 }) => {
-  const [isBooped, setIsBooped] = React.useState(false);
+  const [isBooped, setIsBooped] = React.useState(false)
   const props = useSpring({
-    display: "inline-block",
-    backfaceVisibility: "hidden",
+    display: 'inline-block',
+    backfaceVisibility: 'hidden',
     transform: isBooped ? `rotate(${rotation}deg)` : `rotate(0deg)`,
     config: {
       tension: 300,
       friction: 10,
     },
-  } as const);
+  } as const)
   React.useEffect(() => {
     if (!isBooped) {
-      return;
+      return
     }
     const timeoutId = window.setTimeout(() => {
-      setIsBooped(false);
-    }, timing);
+      setIsBooped(false)
+    }, timing)
     return () => {
-      window.clearTimeout(timeoutId);
-    };
-  }, [isBooped, timing]);
+      window.clearTimeout(timeoutId)
+    }
+  }, [isBooped, timing])
   const trigger = () => {
-    setIsBooped(true);
-  };
+    setIsBooped(true)
+  }
 
   return (
     <animated.span onMouseEnter={trigger} style={props}>
       {children}
     </animated.span>
-  );
-};
+  )
+}
Index: src/components/animations/AnimateOnScroll.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect, useRef, ReactNode } from \"react\";\n\nfunction useElementOnScreen(ref: React.RefObject<Element>, rootMargin = \"0px\") {\n  const [isIntersecting, setIsIntersecting] = useState(true);\n  useEffect(() => {\n    let observerRefValue = ref.current;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setIsIntersecting(entry.isIntersecting);\n      },\n      { rootMargin }\n    );\n    if (ref.current) {\n      observer.observe(ref.current);\n      observerRefValue = ref.current;\n    }\n    return () => {\n      if (observerRefValue) {\n        observer.unobserve(observerRefValue);\n      }\n    };\n  }, [ref, rootMargin]);\n  return isIntersecting;\n}\n\ntype PropsWithChildren = {\n  children: ReactNode;\n};\n\nexport const AnimateIn: React.FC<PropsWithChildren> = ({ children }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const onScreen = useElementOnScreen(ref);\n  return (\n    <div\n      ref={ref}\n      style={{\n        opacity: onScreen ? 1 : 0,\n        translate: onScreen ? \"none\" : \"0 3rem\",\n        transition: \"600ms ease-in-out\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/animations/AnimateOnScroll.tsx b/src/components/animations/AnimateOnScroll.tsx
--- a/src/components/animations/AnimateOnScroll.tsx	
+++ b/src/components/animations/AnimateOnScroll.tsx	
@@ -1,46 +1,46 @@
-import React, { useState, useEffect, useRef, ReactNode } from "react";
+import React, {useState, useEffect, useRef, ReactNode} from 'react'
 
-function useElementOnScreen(ref: React.RefObject<Element>, rootMargin = "0px") {
-  const [isIntersecting, setIsIntersecting] = useState(true);
+function useElementOnScreen(ref: React.RefObject<Element>, rootMargin = '0px') {
+  const [isIntersecting, setIsIntersecting] = useState(true)
   useEffect(() => {
-    let observerRefValue = ref.current;
+    let observerRefValue = ref.current
 
     const observer = new IntersectionObserver(
       ([entry]) => {
-        setIsIntersecting(entry.isIntersecting);
+        setIsIntersecting(entry.isIntersecting)
       },
-      { rootMargin }
-    );
+      {rootMargin},
+    )
     if (ref.current) {
-      observer.observe(ref.current);
-      observerRefValue = ref.current;
+      observer.observe(ref.current)
+      observerRefValue = ref.current
     }
     return () => {
       if (observerRefValue) {
-        observer.unobserve(observerRefValue);
+        observer.unobserve(observerRefValue)
       }
-    };
-  }, [ref, rootMargin]);
-  return isIntersecting;
+    }
+  }, [ref, rootMargin])
+  return isIntersecting
 }
 
 type PropsWithChildren = {
-  children: ReactNode;
-};
+  children: ReactNode
+}
 
-export const AnimateIn: React.FC<PropsWithChildren> = ({ children }) => {
-  const ref = useRef<HTMLDivElement>(null);
-  const onScreen = useElementOnScreen(ref);
+export const AnimateIn: React.FC<PropsWithChildren> = ({children}) => {
+  const ref = useRef<HTMLDivElement>(null)
+  const onScreen = useElementOnScreen(ref)
   return (
     <div
       ref={ref}
       style={{
         opacity: onScreen ? 1 : 0,
-        translate: onScreen ? "none" : "0 3rem",
-        transition: "600ms ease-in-out",
+        translate: onScreen ? 'none' : '0 3rem',
+        transition: '600ms ease-in-out',
       }}
     >
       {children}
     </div>
-  );
-};
+  )
+}
Index: src/components/navigation/NavBar.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useState, useEffect } from \"react\";\nimport { auth } from \"../../Firebase\";\nimport { signOut, onAuthStateChanged } from \"firebase/auth\";\nimport {\n  createStyles,\n  Header,\n  Container,\n  Group,\n  Button,\n  Burger,\n  Image,\n  Menu,\n} from \"@mantine/core\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { IconUserCircle } from \"@tabler/icons\";\nimport { useMediaQuery } from \"@mantine/hooks\";\n\nconst musicNoteIcon = require(\"../../images/MusicNote.png\");\n\nconst HEADER_HEIGHT = 60;\n\nconst useStyles = createStyles((theme) => ({\n  inner: {\n    height: HEADER_HEIGHT,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n\n    [theme.fn.largerThan(\"md\")]: {\n      marginLeft: \"25px\",\n      marginRight: \"20px\",\n    },\n  },\n\n  links: {\n    [theme.fn.smallerThan(\"md\")]: {\n      display: \"none\",\n    },\n  },\n\n  burger: {\n    [theme.fn.largerThan(\"md\")]: {\n      display: \"none\",\n    },\n  },\n\n  link: {\n    display: \"block\",\n    lineHeight: 1,\n    padding: \"8px 12px\",\n    borderRadius: theme.radius.sm,\n    textDecoration: \"none\",\n    color:\n      theme.colorScheme === \"dark\"\n        ? theme.colors.dark[0]\n        : theme.colors.gray[7],\n    fontSize: theme.fontSizes.md,\n    fontWeight: 500,\n\n    \"&:hover\": {\n      backgroundColor:\n        theme.colorScheme === \"dark\"\n          ? theme.colors.dark[6]\n          : theme.colors.gray[0],\n      cursor: `pointer`,\n    },\n  },\n\n  menuLink: {\n    fontSize: \"12pt\",\n  },\n\n  linkActive: {\n    \"&, &:hover\": {\n      backgroundColor: theme.fn.variant({\n        variant: \"light\",\n        color: theme.primaryColor,\n      }).background,\n      color: theme.fn.variant({ variant: \"light\", color: theme.primaryColor })\n        .color,\n    },\n  },\n\n  linkLabel: {\n    marginRight: 5,\n  },\n\n  title: {\n    color: \"#454545\",\n    fontSize: 18,\n    textDecoration: \"none\",\n    fontWeight: 600,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      fontSize: 14,\n    },\n  },\n\n  grayText: {\n    color: \"#454545\",\n  },\n\n  blueText: {\n    color: \"#228BE6\",\n  },\n\n  image: {\n    maxWidth: 30,\n\n    [theme.fn.smallerThan(\"sm\")]: {\n      maxWidth: 25,\n    },\n  },\n\n  logoGroup: {\n    gap: 5,\n\n    \"&:hover\": {\n      cursor: `pointer`,\n    },\n  },\n\n  dropdown: {\n    position: \"absolute\",\n    top: HEADER_HEIGHT,\n    left: 0,\n    right: 0,\n    zIndex: 4,\n    borderTopRightRadius: 0,\n    borderTopLeftRadius: 0,\n    borderTopWidth: 0,\n    overflow: \"hidden\",\n\n    [theme.fn.largerThan(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\ninterface HeaderActionProps {\n  links: {\n    link: string;\n    label: string;\n  }[];\n}\n\nexport function NavBar({ links }: HeaderActionProps) {\n  const url = \"https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday\";\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [userBanned, setUserBanned] = useState(false);\n\n  const { classes, cx } = useStyles();\n  const [signedIn, setSignedIn] = useState(false);\n\n  const [userFirstName, setUserFirstName] = useState(\"Welcome\");\n  const [userAdmin, setUserAdmin] = useState(false);\n\n  const [active, setActive] = useState(\"/\");\n\n  const items = links.map((link) => {\n    return (\n      <a\n        key={link.label}\n        className={cx(classes.link, {\n          [classes.linkActive]: active === link.link,\n        })}\n        onClick={() => {\n          navigate(link.link);\n        }}\n      >\n        {link.label}\n      </a>\n    );\n  });\n\n  useEffect(() => {\n    onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        setSignedIn(true);\n      } else {\n        setSignedIn(false);\n      }\n    });\n  }, []);\n\n  // This useEffect is to force users to be redirected to the banned page (assuming they are signed into a banned account), whenever they try to change the url, check if the current user is an admin, and make sure a user is scrolled to the top of the page whenever they redirect to a new page\n  useEffect(() => {\n    onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        let response = await fetch(`${url}/users/${user.uid}`);\n        let responseJson = await response.json();\n\n        let userData = responseJson.listOfObjects[0];\n\n        setUserFirstName(userData.first_name);\n\n        if (userData.is_admin) {\n          setUserAdmin(true);\n        } else {\n          setUserAdmin(false);\n        }\n\n        if (userData.is_banned) {\n          setUserBanned(true);\n          navigate(\"/banned\");\n        } else {\n          setUserBanned(false);\n        }\n      } else {\n        setUserBanned(false);\n        setUserAdmin(false);\n      }\n    });\n\n    // This is here so that no matter what page a user goes to, they will be redirect to the top of the page. The reason this has to be here is because for some reason, rediecting to a new page doesn't allows have them scrolled to the top of the page\n    window.scrollTo(0, 0);\n  }, [location.pathname, signedIn]);\n\n  useEffect(() => {\n    setActive(location.pathname);\n  }, [location.pathname]);\n\n  const displayBurger = useMediaQuery(\"(max-width: 992px)\");\n\n  const [opened, setOpened] = useState(false);\n\n  const DisplayBurger: React.FC = () => {\n    return (\n      <Menu.Dropdown>\n\n        <Menu.Item\n            className={cx(classes.menuLink, {\n              [classes.linkActive]: active === \"/news\",\n            })}\n            onClick={() => {\n              navigate(\"/news\");\n            }}\n        >\n          News\n        </Menu.Item>\n\n        <Menu.Item\n            className={cx(classes.menuLink, {\n              [classes.linkActive]: active === \"/blog\",\n            })}\n            onClick={() => {\n              navigate(\"/blog\");\n            }}\n        >\n          Blog\n        </Menu.Item>\n\n        <Menu.Item\n          className={cx(classes.menuLink, {\n            [classes.linkActive]: active === \"/jobs\",\n          })}\n          onClick={() => {\n            navigate(\"/jobs\");\n          }}\n        >\n          Jobs\n        </Menu.Item>\n\n        <Menu.Item\n          className={cx(classes.menuLink, {\n            [classes.linkActive]: active === \"/competitions\",\n          })}\n          onClick={() => {\n            navigate(\"/competitions\");\n          }}\n        >\n          Competitions\n        </Menu.Item>\n\n        <Menu.Item\n          className={cx(classes.menuLink, {\n            [classes.linkActive]: active === \"/festivals\",\n          })}\n          onClick={() => {\n            navigate(\"/festivals\");\n          }}\n        >\n          Festivals\n        </Menu.Item>\n\n        <Menu.Item\n          className={cx(classes.menuLink, {\n            [classes.linkActive]: active === \"/concerts\",\n          })}\n          onClick={() => {\n            navigate(\"/concerts\");\n          }}\n        >\n          Concerts\n        </Menu.Item>\n\n        <Menu.Divider />\n\n        {signedIn ? (\n          <DisplaySignedIn />\n        ) : (\n          <>\n            {/* <Menu.Label>Account</Menu.Label> */}\n            <Menu.Item\n              className={cx(classes.menuLink, {\n                [classes.linkActive]: active === \"/login\",\n              })}\n              onClick={() => {\n                navigate(\"/login\");\n              }}\n            >\n              Login\n            </Menu.Item>\n            <Menu.Item\n              className={cx(classes.menuLink, {\n                [classes.linkActive]: active === \"/register\",\n              })}\n              onClick={() => {\n                navigate(\"/register\");\n              }}\n            >\n              Register\n            </Menu.Item>\n          </>\n        )}\n      </Menu.Dropdown>\n    );\n  };\n\n  const DisplaySignedIn: React.FC = () => {\n    return (\n      <>\n        <Menu.Label>Posts</Menu.Label>\n\n        <Menu.Item\n          className={cx(classes.menuLink, {\n            [classes.linkActive]: active === \"/my-posts\",\n          })}\n          onClick={() => {\n            navigate(\"/my-posts\");\n          }}\n        >\n          My Posts\n        </Menu.Item>\n\n        <Menu.Item\n          className={cx(classes.menuLink, {\n            [classes.linkActive]: active === \"/create-opportunity\",\n          })}\n          onClick={() => {\n            navigate(\"/create-opportunity\");\n          }}\n        >\n          Create a Post\n        </Menu.Item>\n\n        {/*Dropdown Button to User Feedback Survey*/}\n      <Menu.Item\n          className={cx(classes.menuLink, {\n              [classes.linkActive]: active === \"/survey\",\n          })}\n          onClick={() => {\n              navigate(\"/survey\");\n          }}\n      >\n          User Feedback\n      </Menu.Item>\n\n        {userAdmin && (\n          <>\n            <Menu.Divider />\n            <Menu.Label>Admin</Menu.Label>\n            <Menu.Item\n              className={cx(classes.menuLink, {\n                [classes.linkActive]: active === \"/admin/scrapedPosts\",\n              })}\n              onClick={() => {\n                navigate(\"/admin/scrapedPosts\");\n              }}\n            >\n              Scraped Posts\n            </Menu.Item>\n            <Menu.Item\n              className={cx(classes.menuLink, {\n                [classes.linkActive]: active === \"/admin/users\",\n              })}\n              onClick={() => {\n                navigate(\"/admin/users\");\n              }}\n            >\n              Manage Users\n            </Menu.Item>\n            \n            <Menu.Item\n              className={cx(classes.menuLink, {\n                [classes.linkActive]: active === \"/admin/reported\",\n              })}\n              onClick={() => {\n                navigate(\"/admin/reported\");\n              }}\n            >\n              Reported Posts\n            </Menu.Item>\n            \n            <Menu.Item\n              className={cx(classes.menuLink, {\n                [classes.linkActive]: active === \"/admin/recent-posts\",\n              })}\n              onClick={() => {\n                navigate(\"/admin/recent-posts\");\n              }}\n            >\n              Recent Posts\n            </Menu.Item>\n\n            <Menu.Item\n                className={cx(classes.menuLink, {\n                  [classes.linkActive]: active === \"/admin/recent-posts\",\n                })}\n                onClick={() => {\n                  navigate(\"/admin/create-blog-post\");\n                }}\n            >\n              Create Blog Post\n            </Menu.Item>\n          </>\n        )}\n        <Menu.Divider />\n\n        <Menu.Item\n          style={{ fontSize: \"12pt\" }}\n          color=\"red\"\n          onClick={async () => {\n            await signOut(auth);\n            setSignedIn(false);\n            navigate(\"/\");\n          }}\n        >\n          Sign Out\n        </Menu.Item>\n      </>\n    );\n  };\n\n  const DisplayMenuButton: React.FC = () => {\n    return signedIn ? (\n      <Group>\n        <Menu shadow=\"md\" width={150} withArrow>\n          <Menu.Target>\n            <Button\n              variant=\"subtle\"\n              sx={{ height: 30 }}\n              size=\"md\"\n              leftIcon={<IconUserCircle />}\n              color=\"gray.7\"\n            >\n              Hi, {userFirstName}\n            </Button>\n          </Menu.Target>\n          <Menu.Dropdown>\n            <DisplaySignedIn />\n          </Menu.Dropdown>\n        </Menu>\n      </Group>\n    ) : (\n      <Group style={{ paddingRight: 25 }} className={classes.links}>\n        <Button\n          variant=\"subtle\"\n          sx={{ height: 30 }}\n          size=\"md\"\n          color=\"blue\"\n          onClick={() => {\n            navigate(\"/login\");\n          }}\n        >\n          Login\n        </Button>\n        <Button\n          radius=\"md\"\n          sx={{ height: 30 }}\n          size=\"md\"\n          // variant=\"gradient\"\n          // gradient={{ from: 'green', to: 'blue', deg: 60 }}\n          onClick={() => {\n            navigate(\"/register\");\n          }}\n        >\n          Register\n        </Button>\n      </Group>\n    );\n  };\n\n  return (\n    <>\n      <Header\n        height={HEADER_HEIGHT}\n        sx={{ borderBottom: 0 }}\n        mt={10}\n        style={{ visibility: userBanned ? \"hidden\" : \"visible\" }}\n      >\n        <Container className={classes.inner} fluid>\n          <Group>\n            <Group spacing=\"xs\" className={classes.logoGroup}>\n              <a\n                className={classes.title}\n                onClick={() => {\n                  navigate(\"/\");\n                }}\n              >\n                COMPOSITION:\n                <span className={classes.blueText}>TODAY</span>\n              </a>\n              <Image\n                src={String(musicNoteIcon)}\n                className={classes.image}\n                onClick={() => navigate(\"/\")}\n              />\n            </Group>\n          </Group>\n          <Group spacing={5} className={classes.links}>\n            {items}\n          </Group>\n          {displayBurger ? (\n            <Menu\n              shadow=\"md\"\n              width=\"100vw\"\n              onClose={() => {\n                setOpened(false);\n              }}\n            >\n              <Menu.Target>\n                <Burger\n                  opened={opened}\n                  onClick={() => setOpened((o) => !o)}\n                  size=\"sm\"\n                />\n              </Menu.Target>\n              <DisplayBurger />\n            </Menu>\n          ) : (\n            <DisplayMenuButton />\n          )}\n        </Container>\n      </Header>\n    </>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/NavBar.tsx b/src/components/navigation/NavBar.tsx
--- a/src/components/navigation/NavBar.tsx	
+++ b/src/components/navigation/NavBar.tsx	
@@ -1,6 +1,6 @@
-import { useState, useEffect } from "react";
-import { auth } from "../../Firebase";
-import { signOut, onAuthStateChanged } from "firebase/auth";
+import {useState, useEffect} from 'react'
+import {auth} from '../../Firebase'
+import {signOut, onAuthStateChanged} from 'firebase/auth'
 import {
   createStyles,
   Header,
@@ -10,56 +10,56 @@
   Burger,
   Image,
   Menu,
-} from "@mantine/core";
-import { useLocation, useNavigate } from "react-router-dom";
-import { IconUserCircle } from "@tabler/icons";
-import { useMediaQuery } from "@mantine/hooks";
+} from '@mantine/core'
+import {useLocation, useNavigate} from 'react-router-dom'
+import {IconUserCircle} from '@tabler/icons'
+import {useMediaQuery} from '@mantine/hooks'
 
-const musicNoteIcon = require("../../images/MusicNote.png");
+const musicNoteIcon = require('../../images/MusicNote.png')
 
-const HEADER_HEIGHT = 60;
+const HEADER_HEIGHT = 60
 
 const useStyles = createStyles((theme) => ({
   inner: {
     height: HEADER_HEIGHT,
-    display: "flex",
-    justifyContent: "space-between",
-    alignItems: "center",
+    display: 'flex',
+    justifyContent: 'space-between',
+    alignItems: 'center',
 
-    [theme.fn.largerThan("md")]: {
-      marginLeft: "25px",
-      marginRight: "20px",
+    [theme.fn.largerThan('md')]: {
+      marginLeft: '25px',
+      marginRight: '20px',
     },
   },
 
   links: {
-    [theme.fn.smallerThan("md")]: {
-      display: "none",
+    [theme.fn.smallerThan('md')]: {
+      display: 'none',
     },
   },
 
   burger: {
-    [theme.fn.largerThan("md")]: {
-      display: "none",
+    [theme.fn.largerThan('md')]: {
+      display: 'none',
     },
   },
 
   link: {
-    display: "block",
+    display: 'block',
     lineHeight: 1,
-    padding: "8px 12px",
+    padding: '8px 12px',
     borderRadius: theme.radius.sm,
-    textDecoration: "none",
+    textDecoration: 'none',
     color:
-      theme.colorScheme === "dark"
+      theme.colorScheme === 'dark'
         ? theme.colors.dark[0]
         : theme.colors.gray[7],
     fontSize: theme.fontSizes.md,
     fontWeight: 500,
 
-    "&:hover": {
+    '&:hover': {
       backgroundColor:
-        theme.colorScheme === "dark"
+        theme.colorScheme === 'dark'
           ? theme.colors.dark[6]
           : theme.colors.gray[0],
       cursor: `pointer`,
@@ -67,16 +67,16 @@
   },
 
   menuLink: {
-    fontSize: "12pt",
+    fontSize: '12pt',
   },
 
   linkActive: {
-    "&, &:hover": {
+    '&, &:hover': {
       backgroundColor: theme.fn.variant({
-        variant: "light",
+        variant: 'light',
         color: theme.primaryColor,
       }).background,
-      color: theme.fn.variant({ variant: "light", color: theme.primaryColor })
+      color: theme.fn.variant({variant: 'light', color: theme.primaryColor})
         .color,
     },
   },
@@ -86,28 +86,28 @@
   },
 
   title: {
-    color: "#454545",
+    color: '#454545',
     fontSize: 18,
-    textDecoration: "none",
+    textDecoration: 'none',
     fontWeight: 600,
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       fontSize: 14,
     },
   },
 
   grayText: {
-    color: "#454545",
+    color: '#454545',
   },
 
   blueText: {
-    color: "#228BE6",
+    color: '#228BE6',
   },
 
   image: {
     maxWidth: 30,
 
-    [theme.fn.smallerThan("sm")]: {
+    [theme.fn.smallerThan('sm')]: {
       maxWidth: 25,
     },
   },
@@ -115,13 +115,13 @@
   logoGroup: {
     gap: 5,
 
-    "&:hover": {
+    '&:hover': {
       cursor: `pointer`,
     },
   },
 
   dropdown: {
-    position: "absolute",
+    position: 'absolute',
     top: HEADER_HEIGHT,
     left: 0,
     right: 0,
@@ -129,34 +129,34 @@
     borderTopRightRadius: 0,
     borderTopLeftRadius: 0,
     borderTopWidth: 0,
-    overflow: "hidden",
+    overflow: 'hidden',
 
-    [theme.fn.largerThan("md")]: {
-      display: "none",
+    [theme.fn.largerThan('md')]: {
+      display: 'none',
     },
   },
-}));
+}))
 
 interface HeaderActionProps {
   links: {
-    link: string;
-    label: string;
-  }[];
+    link: string
+    label: string
+  }[]
 }
 
-export function NavBar({ links }: HeaderActionProps) {
-  const url = "https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday";
-  const navigate = useNavigate();
-  const location = useLocation();
-  const [userBanned, setUserBanned] = useState(false);
+export function NavBar({links}: HeaderActionProps) {
+  const url = 'https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday'
+  const navigate = useNavigate()
+  const location = useLocation()
+  const [userBanned, setUserBanned] = useState(false)
 
-  const { classes, cx } = useStyles();
-  const [signedIn, setSignedIn] = useState(false);
+  const {classes, cx} = useStyles()
+  const [signedIn, setSignedIn] = useState(false)
 
-  const [userFirstName, setUserFirstName] = useState("Welcome");
-  const [userAdmin, setUserAdmin] = useState(false);
+  const [userFirstName, setUserFirstName] = useState('Welcome')
+  const [userAdmin, setUserAdmin] = useState(false)
 
-  const [active, setActive] = useState("/");
+  const [active, setActive] = useState('/')
 
   const items = links.map((link) => {
     return (
@@ -166,97 +166,96 @@
           [classes.linkActive]: active === link.link,
         })}
         onClick={() => {
-          navigate(link.link);
+          navigate(link.link)
         }}
       >
         {link.label}
       </a>
-    );
-  });
+    )
+  })
 
   useEffect(() => {
     onAuthStateChanged(auth, async (user) => {
       if (user) {
-        setSignedIn(true);
+        setSignedIn(true)
       } else {
-        setSignedIn(false);
+        setSignedIn(false)
       }
-    });
-  }, []);
+    })
+  }, [])
 
   // This useEffect is to force users to be redirected to the banned page (assuming they are signed into a banned account), whenever they try to change the url, check if the current user is an admin, and make sure a user is scrolled to the top of the page whenever they redirect to a new page
   useEffect(() => {
     onAuthStateChanged(auth, async (user) => {
       if (user) {
-        let response = await fetch(`${url}/users/${user.uid}`);
-        let responseJson = await response.json();
+        let response = await fetch(`${url}/users/${user.uid}`)
+        let responseJson = await response.json()
 
-        let userData = responseJson.listOfObjects[0];
+        let userData = responseJson.listOfObjects[0]
 
-        setUserFirstName(userData.first_name);
+        setUserFirstName(userData.first_name)
 
         if (userData.is_admin) {
-          setUserAdmin(true);
+          setUserAdmin(true)
         } else {
-          setUserAdmin(false);
+          setUserAdmin(false)
         }
 
         if (userData.is_banned) {
-          setUserBanned(true);
-          navigate("/banned");
+          setUserBanned(true)
+          navigate('/banned')
         } else {
-          setUserBanned(false);
+          setUserBanned(false)
         }
       } else {
-        setUserBanned(false);
-        setUserAdmin(false);
+        setUserBanned(false)
+        setUserAdmin(false)
       }
-    });
+    })
 
     // This is here so that no matter what page a user goes to, they will be redirect to the top of the page. The reason this has to be here is because for some reason, rediecting to a new page doesn't allows have them scrolled to the top of the page
-    window.scrollTo(0, 0);
-  }, [location.pathname, signedIn]);
+    window.scrollTo(0, 0)
+  }, [location.pathname, signedIn])
 
   useEffect(() => {
-    setActive(location.pathname);
-  }, [location.pathname]);
+    setActive(location.pathname)
+  }, [location.pathname])
 
-  const displayBurger = useMediaQuery("(max-width: 992px)");
+  const displayBurger = useMediaQuery('(max-width: 992px)')
 
-  const [opened, setOpened] = useState(false);
+  const [opened, setOpened] = useState(false)
 
   const DisplayBurger: React.FC = () => {
     return (
       <Menu.Dropdown>
-
         <Menu.Item
-            className={cx(classes.menuLink, {
-              [classes.linkActive]: active === "/news",
-            })}
-            onClick={() => {
-              navigate("/news");
-            }}
+          className={cx(classes.menuLink, {
+            [classes.linkActive]: active === '/news',
+          })}
+          onClick={() => {
+            navigate('/news')
+          }}
         >
           News
         </Menu.Item>
 
         <Menu.Item
-            className={cx(classes.menuLink, {
-              [classes.linkActive]: active === "/blog",
-            })}
-            onClick={() => {
-              navigate("/blog");
-            }}
+          className={cx(classes.menuLink, {
+            [classes.linkActive]: active === '/blog',
+          })}
+          onClick={() => {
+            navigate('/blog')
+          }}
         >
           Blog
         </Menu.Item>
 
         <Menu.Item
           className={cx(classes.menuLink, {
-            [classes.linkActive]: active === "/jobs",
+            [classes.linkActive]: active === '/jobs',
           })}
           onClick={() => {
-            navigate("/jobs");
+            navigate('/jobs')
           }}
         >
           Jobs
@@ -264,10 +263,10 @@
 
         <Menu.Item
           className={cx(classes.menuLink, {
-            [classes.linkActive]: active === "/competitions",
+            [classes.linkActive]: active === '/competitions',
           })}
           onClick={() => {
-            navigate("/competitions");
+            navigate('/competitions')
           }}
         >
           Competitions
@@ -275,10 +274,10 @@
 
         <Menu.Item
           className={cx(classes.menuLink, {
-            [classes.linkActive]: active === "/festivals",
+            [classes.linkActive]: active === '/festivals',
           })}
           onClick={() => {
-            navigate("/festivals");
+            navigate('/festivals')
           }}
         >
           Festivals
@@ -286,10 +285,10 @@
 
         <Menu.Item
           className={cx(classes.menuLink, {
-            [classes.linkActive]: active === "/concerts",
+            [classes.linkActive]: active === '/concerts',
           })}
           onClick={() => {
-            navigate("/concerts");
+            navigate('/concerts')
           }}
         >
           Concerts
@@ -304,20 +303,20 @@
             {/* <Menu.Label>Account</Menu.Label> */}
             <Menu.Item
               className={cx(classes.menuLink, {
-                [classes.linkActive]: active === "/login",
+                [classes.linkActive]: active === '/login',
               })}
               onClick={() => {
-                navigate("/login");
+                navigate('/login')
               }}
             >
               Login
             </Menu.Item>
             <Menu.Item
               className={cx(classes.menuLink, {
-                [classes.linkActive]: active === "/register",
+                [classes.linkActive]: active === '/register',
               })}
               onClick={() => {
-                navigate("/register");
+                navigate('/register')
               }}
             >
               Register
@@ -325,8 +324,8 @@
           </>
         )}
       </Menu.Dropdown>
-    );
-  };
+    )
+  }
 
   const DisplaySignedIn: React.FC = () => {
     return (
@@ -335,10 +334,10 @@
 
         <Menu.Item
           className={cx(classes.menuLink, {
-            [classes.linkActive]: active === "/my-posts",
+            [classes.linkActive]: active === '/my-posts',
           })}
           onClick={() => {
-            navigate("/my-posts");
+            navigate('/my-posts')
           }}
         >
           My Posts
@@ -346,26 +345,26 @@
 
         <Menu.Item
           className={cx(classes.menuLink, {
-            [classes.linkActive]: active === "/create-opportunity",
+            [classes.linkActive]: active === '/create-opportunity',
           })}
           onClick={() => {
-            navigate("/create-opportunity");
+            navigate('/create-opportunity')
           }}
         >
           Create a Post
         </Menu.Item>
 
         {/*Dropdown Button to User Feedback Survey*/}
-      <Menu.Item
+        <Menu.Item
           className={cx(classes.menuLink, {
-              [classes.linkActive]: active === "/survey",
+            [classes.linkActive]: active === '/survey',
           })}
           onClick={() => {
-              navigate("/survey");
+            navigate('/survey')
           }}
-      >
+        >
           User Feedback
-      </Menu.Item>
+        </Menu.Item>
 
         {userAdmin && (
           <>
@@ -373,54 +372,54 @@
             <Menu.Label>Admin</Menu.Label>
             <Menu.Item
               className={cx(classes.menuLink, {
-                [classes.linkActive]: active === "/admin/scrapedPosts",
+                [classes.linkActive]: active === '/admin/scrapedPosts',
               })}
               onClick={() => {
-                navigate("/admin/scrapedPosts");
+                navigate('/admin/scrapedPosts')
               }}
             >
               Scraped Posts
             </Menu.Item>
             <Menu.Item
               className={cx(classes.menuLink, {
-                [classes.linkActive]: active === "/admin/users",
+                [classes.linkActive]: active === '/admin/users',
               })}
               onClick={() => {
-                navigate("/admin/users");
+                navigate('/admin/users')
               }}
             >
               Manage Users
             </Menu.Item>
-            
+
             <Menu.Item
               className={cx(classes.menuLink, {
-                [classes.linkActive]: active === "/admin/reported",
+                [classes.linkActive]: active === '/admin/reported',
               })}
               onClick={() => {
-                navigate("/admin/reported");
+                navigate('/admin/reported')
               }}
             >
               Reported Posts
             </Menu.Item>
-            
+
             <Menu.Item
               className={cx(classes.menuLink, {
-                [classes.linkActive]: active === "/admin/recent-posts",
+                [classes.linkActive]: active === '/admin/recent-posts',
               })}
               onClick={() => {
-                navigate("/admin/recent-posts");
+                navigate('/admin/recent-posts')
               }}
             >
               Recent Posts
             </Menu.Item>
 
             <Menu.Item
-                className={cx(classes.menuLink, {
-                  [classes.linkActive]: active === "/admin/recent-posts",
-                })}
-                onClick={() => {
-                  navigate("/admin/create-blog-post");
-                }}
+              className={cx(classes.menuLink, {
+                [classes.linkActive]: active === '/admin/recent-posts',
+              })}
+              onClick={() => {
+                navigate('/admin/create-blog-post')
+              }}
             >
               Create Blog Post
             </Menu.Item>
@@ -429,19 +428,19 @@
         <Menu.Divider />
 
         <Menu.Item
-          style={{ fontSize: "12pt" }}
+          style={{fontSize: '12pt'}}
           color="red"
           onClick={async () => {
-            await signOut(auth);
-            setSignedIn(false);
-            navigate("/");
+            await signOut(auth)
+            setSignedIn(false)
+            navigate('/')
           }}
         >
           Sign Out
         </Menu.Item>
       </>
-    );
-  };
+    )
+  }
 
   const DisplayMenuButton: React.FC = () => {
     return signedIn ? (
@@ -450,7 +449,7 @@
           <Menu.Target>
             <Button
               variant="subtle"
-              sx={{ height: 30 }}
+              sx={{height: 30}}
               size="md"
               leftIcon={<IconUserCircle />}
               color="gray.7"
@@ -464,41 +463,41 @@
         </Menu>
       </Group>
     ) : (
-      <Group style={{ paddingRight: 25 }} className={classes.links}>
+      <Group style={{paddingRight: 25}} className={classes.links}>
         <Button
           variant="subtle"
-          sx={{ height: 30 }}
+          sx={{height: 30}}
           size="md"
           color="blue"
           onClick={() => {
-            navigate("/login");
+            navigate('/login')
           }}
         >
           Login
         </Button>
         <Button
           radius="md"
-          sx={{ height: 30 }}
+          sx={{height: 30}}
           size="md"
           // variant="gradient"
           // gradient={{ from: 'green', to: 'blue', deg: 60 }}
           onClick={() => {
-            navigate("/register");
+            navigate('/register')
           }}
         >
           Register
         </Button>
       </Group>
-    );
-  };
+    )
+  }
 
   return (
     <>
       <Header
         height={HEADER_HEIGHT}
-        sx={{ borderBottom: 0 }}
+        sx={{borderBottom: 0}}
         mt={10}
-        style={{ visibility: userBanned ? "hidden" : "visible" }}
+        style={{visibility: userBanned ? 'hidden' : 'visible'}}
       >
         <Container className={classes.inner} fluid>
           <Group>
@@ -506,7 +505,7 @@
               <a
                 className={classes.title}
                 onClick={() => {
-                  navigate("/");
+                  navigate('/')
                 }}
               >
                 COMPOSITION:
@@ -515,7 +514,7 @@
               <Image
                 src={String(musicNoteIcon)}
                 className={classes.image}
-                onClick={() => navigate("/")}
+                onClick={() => navigate('/')}
               />
             </Group>
           </Group>
@@ -527,7 +526,7 @@
               shadow="md"
               width="100vw"
               onClose={() => {
-                setOpened(false);
+                setOpened(false)
               }}
             >
               <Menu.Target>
@@ -545,5 +544,5 @@
         </Container>
       </Header>
     </>
-  );
+  )
 }
Index: src/components/about/V3TeamMembersInfo.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const V3TeamMembersInfo = {\n    teamMembers: [\n        {\n            avatar: \"kiersten\",\n            name: \"Test\",\n            role: \"Test\",\n        },\n        {\n            avatar: \"joseph\",\n            name: \"Joseph Yim\",\n            role: \"Joseph was the Lead Front-End Developer for the project.\",\n        },\n        {\n            avatar: \"ragen\",\n            name: \"Ragen Holybee\",\n            role: \"Ragen was the Project Manager and a Back-End Developer for the project.\",\n        },\n        {\n            avatar: \"amber\",\n            name: \"Amber Hoekstra\",\n            role: \"Amber was the Content Coordinator and a Back-End Developer for the project.\",\n        },\n        {\n            avatar: \"justin\",\n            name: \"Justin King\",\n            role: \"Justin was the UX Lead and a Front-End Developer for the project.\",\n        },\n    ],\n};
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/about/V3TeamMembersInfo.tsx b/src/components/about/V3TeamMembersInfo.tsx
--- a/src/components/about/V3TeamMembersInfo.tsx	
+++ b/src/components/about/V3TeamMembersInfo.tsx	
@@ -1,29 +1,31 @@
+// Team Member Info for 2023-2024 Senior Design Team
+
 export const V3TeamMembersInfo = {
-    teamMembers: [
-        {
-            avatar: "kiersten",
-            name: "Test",
-            role: "Test",
-        },
-        {
-            avatar: "joseph",
-            name: "Joseph Yim",
-            role: "Joseph was the Lead Front-End Developer for the project.",
-        },
-        {
-            avatar: "ragen",
-            name: "Ragen Holybee",
-            role: "Ragen was the Project Manager and a Back-End Developer for the project.",
-        },
-        {
-            avatar: "amber",
-            name: "Amber Hoekstra",
-            role: "Amber was the Content Coordinator and a Back-End Developer for the project.",
-        },
-        {
-            avatar: "justin",
-            name: "Justin King",
-            role: "Justin was the UX Lead and a Front-End Developer for the project.",
-        },
-    ],
-};
\ No newline at end of file
+  teamMembers: [
+    {
+      avatar: 'kiersten',
+      name: 'Test',
+      role: 'Test',
+    },
+    {
+      avatar: 'joseph',
+      name: 'Joseph Yim',
+      role: 'Joseph was the Lead Front-End Developer for the project.',
+    },
+    {
+      avatar: 'ragen',
+      name: 'Ragen Holybee',
+      role: 'Ragen was the Project Manager and a Back-End Developer for the project.',
+    },
+    {
+      avatar: 'amber',
+      name: 'Amber Hoekstra',
+      role: 'Amber was the Content Coordinator and a Back-End Developer for the project.',
+    },
+    {
+      avatar: 'justin',
+      name: 'Justin King',
+      role: 'Justin was the UX Lead and a Front-End Developer for the project.',
+    },
+  ],
+}
Index: src/components/navigation/NavItems.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const navItems = {\n  links: [\n\n    {\n      link: \"/news\",\n      label: \"News\",\n    },\n\n    {\n      link: \"/blog\",\n      label: \"Blog\",\n    },\n\n    {\n      link: \"/jobs\",\n      label: \"Jobs\",\n    },\n\n    {\n      link: \"/competitions\",\n      label: \"Competitions\",\n    },\n\n    {\n      link: \"/festivals\",\n      label: \"Festivals\",\n    },\n\n    {\n      link: \"/concerts\",\n      label: \"Concerts\",\n    },\n  ],\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/NavItems.tsx b/src/components/navigation/NavItems.tsx
--- a/src/components/navigation/NavItems.tsx	
+++ b/src/components/navigation/NavItems.tsx	
@@ -1,34 +1,33 @@
 export const navItems = {
   links: [
-
     {
-      link: "/news",
-      label: "News",
+      link: '/news',
+      label: 'News',
     },
 
     {
-      link: "/blog",
-      label: "Blog",
+      link: '/blog',
+      label: 'Blog',
     },
 
     {
-      link: "/jobs",
-      label: "Jobs",
+      link: '/jobs',
+      label: 'Jobs',
     },
 
     {
-      link: "/competitions",
-      label: "Competitions",
+      link: '/competitions',
+      label: 'Competitions',
     },
 
     {
-      link: "/festivals",
-      label: "Festivals",
+      link: '/festivals',
+      label: 'Festivals',
     },
 
     {
-      link: "/concerts",
-      label: "Concerts",
+      link: '/concerts',
+      label: 'Concerts',
     },
   ],
-};
+}
Index: src/components/pagination/PaginationNavbar.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\n  OpportunityItem,\n  PaginationNavbarContainer,\n} from \"../opportunity/OpportunityHelper\";\nimport { RawUserData } from \"../adminView/UsersList\";\nimport React, { useState, useEffect } from \"react\";\nimport { Pagination } from \"@mantine/core\";\nimport { useMediaQuery } from \"@mantine/hooks\";\n\nexport interface PaginationNavbarProp {\n  apiEndpointExtension: string;\n  numberOfItemsPerPage: number;\n  searchFilterObject?: PaginationSearchObject;\n  setListOfObjects:\n    | React.Dispatch<React.SetStateAction<RawUserData[]>>\n    | React.Dispatch<React.SetStateAction<OpportunityItem[]>>;\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n  recall?: number;\n}\n\nexport interface PaginationSearchObject {\n  UID?: string;\n  idposts?: number;\n  title?: string;\n  description?: string;\n  link?: string;\n  date_posted?: Date;\n  city?: string;\n  state?: string;\n  organization?: string;\n  end_date?: Date | string | number;\n  salary?: number;\n  job_type?: string;\n  winner?: string | null;\n  job_category?: string;\n  competition_category?: string;\n  address?: string;\n  start_date?: Date | string | number;\n  type?: string;\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  keyword?: string;\n  is_deleted?: string | number;\n  is_flagged?: string | number;\n  is_expired?: string | number;\n  is_admin?: string;\n  is_banned?: string;\n  is_regular?: string;\n  is_winner?: string;\n  current_email?: string;\n  start_time?: Date | string | number | null;\n  author?: string;\n  fee?: string | number;\n  sort?: string | number;\n  deadline?: Date | string | number;\n}\n\nexport function PaginationNavbar({\n  // The string that is the api extension. Do NOT begin it with a \"/\".\n  apiEndpointExtension,\n  // The number of items you want to display on a page.\n  // If the API has a set number of items it returns for 1 page, please put in that number here.\n  numberOfItemsPerPage,\n  // The setter of the useState that holds all the current items displayed on a page.\n  setListOfObjects,\n  // An optional object where the keys are the name of the attribute you want to search for and the value is the actual value of the key.\n  searchFilterObject,\n  setLoading,\n  recall = -99,\n}: PaginationNavbarProp) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageCount, setPageCount] = useState(1);\n  const medianScreen = useMediaQuery(\"(max-width: 992px)\");\n  const url = \"https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday\";\n\n  const timeOut = 450;\n\n  useEffect(() => {\n    const getPageCount = async () => {\n      try {\n        setLoading(true);\n        console.log(\"searchFilterObj\", searchFilterObject);\n        const countUrl = new URL(`${url}/${apiEndpointExtension}/count`);\n        if (searchFilterObject) {\n          for (const [key, value] of Object.entries(searchFilterObject)) {\n            countUrl.searchParams.set(key, String(value));\n          }\n        }\n\n        let responseCount = await fetch(countUrl);\n\n        let responseCountJson = await responseCount.json();\n        console.log(\"number of posts count\", responseCountJson.count);\n        let numberOfPage = Math.ceil(\n          responseCountJson.count / numberOfItemsPerPage\n        );\n        setPageCount(numberOfPage);\n        console.log(\"number of pages\", numberOfPage);\n        setTimeout(() => {\n          setLoading(false);\n        }, timeOut);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setCurrentPage(1);\n        console.log(recall);\n      }\n    };\n    getPageCount();\n  }, [searchFilterObject, recall, apiEndpointExtension]);\n\n  useEffect(() => {\n    const getCurrentPage = async () => {\n      try {\n        setLoading(true);\n        const getUrl = new URL(`${url}/${apiEndpointExtension}`);\n        if (searchFilterObject) {\n          for (const [key, value] of Object.entries(searchFilterObject)) {\n            getUrl.searchParams.set(key, String(value));\n          }\n        }\n\n        getUrl.searchParams.set(\"page_number\", String(currentPage));\n        console.log(\"geturl: \", getUrl.toString());\n        let response = await fetch(getUrl);\n\n        let responseJson = await response.json();\n        setListOfObjects(responseJson.listOfObjects || []);\n        setTimeout(() => {\n          setLoading(false);\n        }, timeOut);\n        console.log(\"res\", responseJson);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getCurrentPage();\n  }, [\n    currentPage,\n    pageCount,\n    searchFilterObject,\n    recall,\n    apiEndpointExtension,\n  ]);\n\n  return (\n    <div style={{ display: pageCount ? \"block\" : \"none\" }}>\n      <PaginationNavbarContainer justify=\"center\" align=\"flex-end\">\n        <Pagination\n          page={currentPage}\n          onChange={setCurrentPage}\n          total={pageCount}\n          size={medianScreen ? \"xs\" : \"sm\"}\n          radius=\"xl\"\n        />\n      </PaginationNavbarContainer>\n    </div>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/pagination/PaginationNavbar.tsx b/src/components/pagination/PaginationNavbar.tsx
--- a/src/components/pagination/PaginationNavbar.tsx	
+++ b/src/components/pagination/PaginationNavbar.tsx	
@@ -1,59 +1,59 @@
 import {
   OpportunityItem,
   PaginationNavbarContainer,
-} from "../opportunity/OpportunityHelper";
-import { RawUserData } from "../adminView/UsersList";
-import React, { useState, useEffect } from "react";
-import { Pagination } from "@mantine/core";
-import { useMediaQuery } from "@mantine/hooks";
+} from '../opportunity/OpportunityHelper'
+import {RawUserData} from '../adminView/UsersList'
+import React, {useState, useEffect} from 'react'
+import {Pagination} from '@mantine/core'
+import {useMediaQuery} from '@mantine/hooks'
 
 export interface PaginationNavbarProp {
-  apiEndpointExtension: string;
-  numberOfItemsPerPage: number;
-  searchFilterObject?: PaginationSearchObject;
+  apiEndpointExtension: string
+  numberOfItemsPerPage: number
+  searchFilterObject?: PaginationSearchObject
   setListOfObjects:
     | React.Dispatch<React.SetStateAction<RawUserData[]>>
-    | React.Dispatch<React.SetStateAction<OpportunityItem[]>>;
-  setLoading: React.Dispatch<React.SetStateAction<boolean>>;
-  recall?: number;
+    | React.Dispatch<React.SetStateAction<OpportunityItem[]>>
+  setLoading: React.Dispatch<React.SetStateAction<boolean>>
+  recall?: number
 }
 
 export interface PaginationSearchObject {
-  UID?: string;
-  idposts?: number;
-  title?: string;
-  description?: string;
-  link?: string;
-  date_posted?: Date;
-  city?: string;
-  state?: string;
-  organization?: string;
-  end_date?: Date | string | number;
-  salary?: number;
-  job_type?: string;
-  winner?: string | null;
-  job_category?: string;
-  competition_category?: string;
-  address?: string;
-  start_date?: Date | string | number;
-  type?: string;
-  first_name?: string;
-  last_name?: string;
-  email?: string;
-  keyword?: string;
-  is_deleted?: string | number;
-  is_flagged?: string | number;
-  is_expired?: string | number;
-  is_admin?: string;
-  is_banned?: string;
-  is_regular?: string;
-  is_winner?: string;
-  current_email?: string;
-  start_time?: Date | string | number | null;
-  author?: string;
-  fee?: string | number;
-  sort?: string | number;
-  deadline?: Date | string | number;
+  UID?: string
+  idposts?: number
+  title?: string
+  description?: string
+  link?: string
+  date_posted?: Date
+  city?: string
+  state?: string
+  organization?: string
+  end_date?: Date | string | number
+  salary?: number
+  job_type?: string
+  winner?: string | null
+  job_category?: string
+  competition_category?: string
+  address?: string
+  start_date?: Date | string | number
+  type?: string
+  first_name?: string
+  last_name?: string
+  email?: string
+  keyword?: string
+  is_deleted?: string | number
+  is_flagged?: string | number
+  is_expired?: string | number
+  is_admin?: string
+  is_banned?: string
+  is_regular?: string
+  is_winner?: string
+  current_email?: string
+  start_time?: Date | string | number | null
+  author?: string
+  fee?: string | number
+  sort?: string | number
+  deadline?: Date | string | number
 }
 
 export function PaginationNavbar({
@@ -69,93 +69,87 @@
   setLoading,
   recall = -99,
 }: PaginationNavbarProp) {
-  const [currentPage, setCurrentPage] = useState(1);
-  const [pageCount, setPageCount] = useState(1);
-  const medianScreen = useMediaQuery("(max-width: 992px)");
-  const url = "https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday";
+  const [currentPage, setCurrentPage] = useState(1)
+  const [pageCount, setPageCount] = useState(1)
+  const medianScreen = useMediaQuery('(max-width: 992px)')
+  const url = 'https://oyster-app-7l5vz.ondigitalocean.app/compositiontoday'
 
-  const timeOut = 450;
+  const timeOut = 450
 
   useEffect(() => {
     const getPageCount = async () => {
       try {
-        setLoading(true);
-        console.log("searchFilterObj", searchFilterObject);
-        const countUrl = new URL(`${url}/${apiEndpointExtension}/count`);
+        setLoading(true)
+        console.log('searchFilterObj', searchFilterObject)
+        const countUrl = new URL(`${url}/${apiEndpointExtension}/count`)
         if (searchFilterObject) {
           for (const [key, value] of Object.entries(searchFilterObject)) {
-            countUrl.searchParams.set(key, String(value));
+            countUrl.searchParams.set(key, String(value))
           }
         }
 
-        let responseCount = await fetch(countUrl);
+        let responseCount = await fetch(countUrl)
 
-        let responseCountJson = await responseCount.json();
-        console.log("number of posts count", responseCountJson.count);
+        let responseCountJson = await responseCount.json()
+        console.log('number of posts count', responseCountJson.count)
         let numberOfPage = Math.ceil(
-          responseCountJson.count / numberOfItemsPerPage
-        );
-        setPageCount(numberOfPage);
-        console.log("number of pages", numberOfPage);
+          responseCountJson.count / numberOfItemsPerPage,
+        )
+        setPageCount(numberOfPage)
+        console.log('number of pages', numberOfPage)
         setTimeout(() => {
-          setLoading(false);
-        }, timeOut);
+          setLoading(false)
+        }, timeOut)
       } catch (err) {
-        console.log(err);
+        console.log(err)
       } finally {
-        setCurrentPage(1);
-        console.log(recall);
+        setCurrentPage(1)
+        console.log(recall)
       }
-    };
-    getPageCount();
-  }, [searchFilterObject, recall, apiEndpointExtension]);
+    }
+    getPageCount()
+  }, [searchFilterObject, recall, apiEndpointExtension])
 
   useEffect(() => {
     const getCurrentPage = async () => {
       try {
-        setLoading(true);
-        const getUrl = new URL(`${url}/${apiEndpointExtension}`);
+        setLoading(true)
+        const getUrl = new URL(`${url}/${apiEndpointExtension}`)
         if (searchFilterObject) {
           for (const [key, value] of Object.entries(searchFilterObject)) {
-            getUrl.searchParams.set(key, String(value));
+            getUrl.searchParams.set(key, String(value))
           }
         }
 
-        getUrl.searchParams.set("page_number", String(currentPage));
-        console.log("geturl: ", getUrl.toString());
-        let response = await fetch(getUrl);
+        getUrl.searchParams.set('page_number', String(currentPage))
+        console.log('geturl: ', getUrl.toString())
+        let response = await fetch(getUrl)
 
-        let responseJson = await response.json();
-        setListOfObjects(responseJson.listOfObjects || []);
+        let responseJson = await response.json()
+        setListOfObjects(responseJson.listOfObjects || [])
         setTimeout(() => {
-          setLoading(false);
-        }, timeOut);
-        console.log("res", responseJson);
+          setLoading(false)
+        }, timeOut)
+        console.log('res', responseJson)
       } catch (err) {
-        console.log(err);
+        console.log(err)
       }
-    };
+    }
 
-    getCurrentPage();
-  }, [
-    currentPage,
-    pageCount,
-    searchFilterObject,
-    recall,
-    apiEndpointExtension,
-  ]);
+    getCurrentPage()
+  }, [currentPage, pageCount, searchFilterObject, recall, apiEndpointExtension])
 
   return (
-    <div style={{ display: pageCount ? "block" : "none" }}>
+    <div style={{display: pageCount ? 'block' : 'none'}}>
       <PaginationNavbarContainer justify="center" align="flex-end">
         <Pagination
           page={currentPage}
           onChange={setCurrentPage}
           total={pageCount}
-          size={medianScreen ? "xs" : "sm"}
+          size={medianScreen ? 'xs' : 'sm'}
           radius="xl"
         />
       </PaginationNavbarContainer>
     </div>
-  );
+  )
 }
Index: src/pages/Blog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Opportunity } from \"../components/opportunity/Opportunity\";\nimport { motion } from \"framer-motion\";\n\nexport function Blog() {\n    return (\n        <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3 }}\n        >\n            <Opportunity apiEndpoint=\"blog\" />\n        </motion.div>\n    );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Blog.tsx b/src/pages/Blog.tsx
--- a/src/pages/Blog.tsx	
+++ b/src/pages/Blog.tsx	
@@ -1,14 +1,14 @@
-import { Opportunity } from "../components/opportunity/Opportunity";
-import { motion } from "framer-motion";
+import {Opportunity} from '../components/opportunity/Opportunity'
+import {motion} from 'framer-motion'
 
 export function Blog() {
-    return (
-        <motion.div
-            initial={{ opacity: 0 }}
-            animate={{ opacity: 1 }}
-            transition={{ duration: 0.3 }}
-        >
-            <Opportunity apiEndpoint="blog" />
-        </motion.div>
-    );
+  return (
+    <motion.div
+      initial={{opacity: 0}}
+      animate={{opacity: 1}}
+      transition={{duration: 0.3}}
+    >
+      <Opportunity apiEndpoint="blog" />
+    </motion.div>
+  )
 }
Index: src/pages/News.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Opportunity } from \"../components/opportunity/Opportunity\";\nimport { motion } from \"framer-motion\";\n\nexport function News() {\n    return (\n        <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3 }}\n        >\n            <Opportunity apiEndpoint=\"news\" />\n        </motion.div>\n    );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/News.tsx b/src/pages/News.tsx
--- a/src/pages/News.tsx	
+++ b/src/pages/News.tsx	
@@ -1,14 +1,14 @@
-import { Opportunity } from "../components/opportunity/Opportunity";
-import { motion } from "framer-motion";
+import {Opportunity} from '../components/opportunity/Opportunity'
+import {motion} from 'framer-motion'
 
 export function News() {
-    return (
-        <motion.div
-            initial={{ opacity: 0 }}
-            animate={{ opacity: 1 }}
-            transition={{ duration: 0.3 }}
-        >
-            <Opportunity apiEndpoint="news" />
-        </motion.div>
-    );
+  return (
+    <motion.div
+      initial={{opacity: 0}}
+      animate={{opacity: 1}}
+      transition={{duration: 0.3}}
+    >
+      <Opportunity apiEndpoint="news" />
+    </motion.div>
+  )
 }
Index: public/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <!-- <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" /> -->\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/MusicNote.png\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <meta name=\"google-site-verification\" content=\"dkouGPp7NoANrkgFVxANCxEYaBhbpQ5uKFYLju4ZT3M\" />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n    <title>Composition Today</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n    <!-- Default Statcounter code for Composition Today\n    http://compositiontoday.net/ -->\n    <script type=\"text/javascript\">\n    var sc_project=12964172; \n    var sc_invisible=1; \n    var sc_security=\"7c8b49bd\"; \n    </script>\n    <script type=\"text/javascript\"\n    src=\"https://www.statcounter.com/counter/counter.js\"\n    async></script>\n    <noscript><div class=\"statcounter\"><a title=\"Web Analytics\"\n    href=\"https://statcounter.com/\" target=\"_blank\"><img\n    class=\"statcounter\"\n    src=\"https://c.statcounter.com/12964172/0/7c8b49bd/1/\"\n    alt=\"Web Analytics\"\n    referrerPolicy=\"no-referrer-when-downgrade\"></a></div></noscript>\n    <!-- End of Statcounter Code -->\n  </body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/index.html b/public/index.html
--- a/public/index.html	
+++ b/public/index.html	
@@ -10,7 +10,10 @@
       name="description"
       content="Web site created using create-react-app"
     />
-    <meta name="google-site-verification" content="dkouGPp7NoANrkgFVxANCxEYaBhbpQ5uKFYLju4ZT3M" />
+    <meta
+      name="google-site-verification"
+      content="dkouGPp7NoANrkgFVxANCxEYaBhbpQ5uKFYLju4ZT3M"
+    />
     <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
     <!--
       manifest.json provides metadata used when your web app is installed on a
@@ -44,19 +47,25 @@
     <!-- Default Statcounter code for Composition Today
     http://compositiontoday.net/ -->
     <script type="text/javascript">
-    var sc_project=12964172; 
-    var sc_invisible=1; 
-    var sc_security="7c8b49bd"; 
+      var sc_project = 12964172;
+      var sc_invisible = 1;
+      var sc_security = "7c8b49bd";
     </script>
-    <script type="text/javascript"
-    src="https://www.statcounter.com/counter/counter.js"
-    async></script>
-    <noscript><div class="statcounter"><a title="Web Analytics"
-    href="https://statcounter.com/" target="_blank"><img
-    class="statcounter"
-    src="https://c.statcounter.com/12964172/0/7c8b49bd/1/"
-    alt="Web Analytics"
-    referrerPolicy="no-referrer-when-downgrade"></a></div></noscript>
+    <script
+      type="text/javascript"
+      src="https://www.statcounter.com/counter/counter.js"
+      async
+    ></script>
+    <noscript
+      ><div class="statcounter">
+        <a title="Web Analytics" href="https://statcounter.com/" target="_blank"
+          ><img
+            class="statcounter"
+            src="https://c.statcounter.com/12964172/0/7c8b49bd/1/"
+            alt="Web Analytics"
+            referrerpolicy="no-referrer-when-downgrade"
+        /></a></div
+    ></noscript>
     <!-- End of Statcounter Code -->
   </body>
 </html>
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"composition-today\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@emotion/react\": \"^11.10.5\",\n    \"@emotion/styled\": \"^11.10.5\",\n    \"@mantine/carousel\": \"^5.7.1\",\n    \"@mantine/core\": \"^5.7.1\",\n    \"@mantine/dates\": \"^5.7.1\",\n    \"@mantine/dropzone\": \"^5.7.1\",\n    \"@mantine/form\": \"^5.7.1\",\n    \"@mantine/hooks\": \"^5.7.1\",\n    \"@mantine/modals\": \"^5.7.1\",\n    \"@mantine/notifications\": \"^5.7.1\",\n    \"@mantine/nprogress\": \"^5.7.1\",\n    \"@mantine/spotlight\": \"^5.7.1\",\n    \"@tabler/icons\": \"^1.112.0\",\n    \"@testing-library/jest-dom\": \"^5.16.5\",\n    \"@testing-library/react\": \"^13.4.0\",\n    \"@testing-library/user-event\": \"^13.5.0\",\n    \"@types/jest\": \"^27.5.2\",\n    \"@types/react\": \"^18.0.25\",\n    \"@types/react-dom\": \"^18.0.8\",\n    \"dayjs\": \"^1.11.6\",\n    \"embla-carousel-react\": \"^7.0.5\",\n    \"firebase\": \"^9.14.0\",\n    \"framer-motion\": \"^10.1.0\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-router-dom\": \"^6.4.3\",\n    \"react-scripts\": \"5.0.1\",\n    \"react-spring\": \"^9.5.5\",\n    \"typescript\": \"^4.8.4\",\n    \"web-vitals\": \"^2.1.4\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^18.11.18\",\n    \"prettier\": \"2.7.1\"\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	
+++ b/package.json	
@@ -32,7 +32,9 @@
     "react-scripts": "5.0.1",
     "react-spring": "^9.5.5",
     "typescript": "^4.8.4",
-    "web-vitals": "^2.1.4"
+    "web-vitals": "^2.1.4",
+    "@react-buddy/ide-toolbox": "^2.4.0",
+    "@react-buddy/palette-mantine": "^5.7.1"
   },
   "scripts": {
     "start": "react-scripts start",
Index: src/index.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>declare module \"*.svg\";\ndeclare module \"*.png\";\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.d.ts b/src/index.d.ts
--- a/src/index.d.ts	
+++ b/src/index.d.ts	
@@ -1,2 +1,2 @@
-declare module "*.svg";
-declare module "*.png";
+declare module '*.svg'
+declare module '*.png'
Index: src/App.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Login } from \"./pages/Login\";\nimport { Register } from \"./pages/Register\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport { Landing } from \"./pages/Landing\";\nimport { About } from \"./pages/AboutUs\";\nimport { NotFound } from \"./pages/NotFound\";\nimport { ForgotPassword } from \"./pages/ForgotPassword\";\nimport { Jobs } from \"./pages/Jobs\";\nimport { Competitions } from \"./pages/Competitions\";\nimport { NavBar } from \"./components/navigation/NavBar\";\nimport { navItems } from \"./components/navigation/NavItems\";\nimport { Users } from \"./pages/adminView/Users\";\nimport { Festivals } from \"./pages/Festivals\";\nimport { CreateOpportunityPage } from \"./pages/CreateOpportunityPage\";\nimport { Concerts } from \"./pages/Concerts\";\nimport { BannedUser } from \"./pages/BannedUser\";\nimport { NotificationsProvider } from \"@mantine/notifications\";\nimport { MantineProvider, Modal } from \"@mantine/core\";\nimport { ModalsProvider } from \"@mantine/modals\";\nimport { RecentPosts } from \"./pages/adminView/RecentPosts\";\nimport { MyPosts } from \"./pages/MyPosts\";\nimport { Footer } from \"./components/footer/Footer\";\nimport { footerInfo } from \"./components/footer/FooterInfo\";\nimport { useState } from \"react\";\n\nimport { LoadingOverlay } from \"@mantine/core\";\nimport AnimatedRoutes from \"./AnimatedRoutes\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nexport default function App() {\n  const [loading, setLoading] = useState(true);\n  setTimeout(() => {\n    setLoading(false);\n  }, 2500);\n  return (\n    <>\n      <Modal\n        opened={loading}\n        onClose={() => console.log(\"closing page load modal\")}\n        fullScreen\n      >\n\n        {/* This is the loading screen when the website is first loaded */}\n        <LoadingOverlay\n          visible={loading}\n          overlayOpacity={1}\n          overlayBlur={1}\n          transitionDuration={400}\n          loaderProps={{ variant: \"bars\" }}\n          zIndex={2}\n        />\n      </Modal>\n\n      <MantineProvider>\n        <ModalsProvider>\n          <NotificationsProvider>\n            <HashRouter>\n\n                {/* This is the Navbar at the top of every Page*/}\n              <NavBar links={navItems.links} />\n\n                {/*This is the Container with all the event Listings*/}\n              <AnimatedRoutes />\n\n                {/*This is the footer at the bottom of the Webpage */}\n              <Footer data={footerInfo.data} />\n\n            </HashRouter>\n          </NotificationsProvider>\n        </ModalsProvider>\n      </MantineProvider>\n    </>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.tsx b/src/App.tsx
--- a/src/App.tsx	
+++ b/src/App.tsx	
@@ -1,53 +1,52 @@
-import { Login } from "./pages/Login";
-import { Register } from "./pages/Register";
-import { HashRouter, Route, Routes } from "react-router-dom";
-import { Landing } from "./pages/Landing";
-import { About } from "./pages/AboutUs";
-import { NotFound } from "./pages/NotFound";
-import { ForgotPassword } from "./pages/ForgotPassword";
-import { Jobs } from "./pages/Jobs";
-import { Competitions } from "./pages/Competitions";
-import { NavBar } from "./components/navigation/NavBar";
-import { navItems } from "./components/navigation/NavItems";
-import { Users } from "./pages/adminView/Users";
-import { Festivals } from "./pages/Festivals";
-import { CreateOpportunityPage } from "./pages/CreateOpportunityPage";
-import { Concerts } from "./pages/Concerts";
-import { BannedUser } from "./pages/BannedUser";
-import { NotificationsProvider } from "@mantine/notifications";
-import { MantineProvider, Modal } from "@mantine/core";
-import { ModalsProvider } from "@mantine/modals";
-import { RecentPosts } from "./pages/adminView/RecentPosts";
-import { MyPosts } from "./pages/MyPosts";
-import { Footer } from "./components/footer/Footer";
-import { footerInfo } from "./components/footer/FooterInfo";
-import { useState } from "react";
+import {Login} from './pages/Login'
+import {Register} from './pages/Register'
+import {HashRouter, Route, Routes} from 'react-router-dom'
+import {Landing} from './pages/Landing'
+import {About} from './pages/AboutUs'
+import {NotFound} from './pages/NotFound'
+import {ForgotPassword} from './pages/ForgotPassword'
+import {Jobs} from './pages/Jobs'
+import {Competitions} from './pages/Competitions'
+import {NavBar} from './components/navigation/NavBar'
+import {navItems} from './components/navigation/NavItems'
+import {Users} from './pages/adminView/Users'
+import {Festivals} from './pages/Festivals'
+import {CreateOpportunityPage} from './pages/CreateOpportunityPage'
+import {Concerts} from './pages/Concerts'
+import {BannedUser} from './pages/BannedUser'
+import {NotificationsProvider} from '@mantine/notifications'
+import {MantineProvider, Modal} from '@mantine/core'
+import {ModalsProvider} from '@mantine/modals'
+import {RecentPosts} from './pages/adminView/RecentPosts'
+import {MyPosts} from './pages/MyPosts'
+import {Footer} from './components/footer/Footer'
+import {footerInfo} from './components/footer/FooterInfo'
+import {useState} from 'react'
 
-import { LoadingOverlay } from "@mantine/core";
-import AnimatedRoutes from "./AnimatedRoutes";
+import {LoadingOverlay} from '@mantine/core'
+import AnimatedRoutes from './AnimatedRoutes'
 
-import { BrowserRouter } from "react-router-dom";
+import {BrowserRouter} from 'react-router-dom'
 
 export default function App() {
-  const [loading, setLoading] = useState(true);
+  const [loading, setLoading] = useState(true)
   setTimeout(() => {
-    setLoading(false);
-  }, 2500);
+    setLoading(false)
+  }, 2500)
   return (
     <>
       <Modal
         opened={loading}
-        onClose={() => console.log("closing page load modal")}
+        onClose={() => console.log('closing page load modal')}
         fullScreen
       >
-
         {/* This is the loading screen when the website is first loaded */}
         <LoadingOverlay
           visible={loading}
           overlayOpacity={1}
           overlayBlur={1}
           transitionDuration={400}
-          loaderProps={{ variant: "bars" }}
+          loaderProps={{variant: 'bars'}}
           zIndex={2}
         />
       </Modal>
@@ -56,20 +55,18 @@
         <ModalsProvider>
           <NotificationsProvider>
             <HashRouter>
-
-                {/* This is the Navbar at the top of every Page*/}
+              {/* This is the Navbar at the top of every Page*/}
               <NavBar links={navItems.links} />
 
-                {/*This is the Container with all the event Listings*/}
+              {/*This is the Container with all the event Listings*/}
               <AnimatedRoutes />
 
-                {/*This is the footer at the bottom of the Webpage */}
+              {/*This is the footer at the bottom of the Webpage */}
               <Footer data={footerInfo.data} />
-
             </HashRouter>
           </NotificationsProvider>
         </ModalsProvider>
       </MantineProvider>
     </>
-  );
+  )
 }
Index: src/index.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.css b/src/index.css
--- a/src/index.css	
+++ b/src/index.css	
@@ -1,13 +1,13 @@
 body {
   margin: 0;
-  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
-    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
+  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
+    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
     sans-serif;
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
 }
 
 code {
-  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
+  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
     monospace;
 }
Index: src/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.tsx b/src/index.tsx
--- a/src/index.tsx	
+++ b/src/index.tsx	
@@ -3,17 +3,21 @@
 import "./index.css";
 import App from "./App";
 import reportWebVitals from "./reportWebVitals";
+import { DevSupport } from "@react-buddy/ide-toolbox";
+import { ComponentPreviews, useInitial } from "./dev";
 
-const root = ReactDOM.createRoot(
-  document.getElementById("root") as HTMLElement
-);
+const root = ReactDOM.createRoot(document.getElementById("root") as HTMLElement);
 root.render(
   <React.StrictMode>
+    <DevSupport ComponentPreviews={ComponentPreviews}
+                useInitialHook={useInitial}
+    >
       <App />
+    </DevSupport>
   </React.StrictMode>
 );
 
 // If you want to start measuring performance in your app, pass a function
 // to log results (for example: reportWebVitals(console.log))
 // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
-reportWebVitals();
\ No newline at end of file
+reportWebVitals();
Index: src/setupTests.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport \"@testing-library/jest-dom\";\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/setupTests.ts b/src/setupTests.ts
--- a/src/setupTests.ts	
+++ b/src/setupTests.ts	
@@ -2,4 +2,4 @@
 // allows you to do things like:
 // expect(element).toHaveTextContent(/react/i)
 // learn more: https://github.com/testing-library/jest-dom
-import "@testing-library/jest-dom";
+import '@testing-library/jest-dom'
Index: src/AnimatedRoutes.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Login } from \"./pages/Login\";\nimport { Register } from \"./pages/Register\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport { Landing } from \"./pages/Landing\";\nimport { About } from \"./pages/AboutUs\";\nimport { NotFound } from \"./pages/NotFound\";\nimport { ForgotPassword } from \"./pages/ForgotPassword\";\nimport { Jobs } from \"./pages/Jobs\";\nimport { Competitions } from \"./pages/Competitions\";\nimport { Users } from \"./pages/adminView/Users\";\nimport { Festivals } from \"./pages/Festivals\";\nimport { CreateOpportunityPage } from \"./pages/CreateOpportunityPage\";\nimport { Concerts } from \"./pages/Concerts\";\nimport { BannedUser } from \"./pages/BannedUser\";\nimport { RecentPosts } from \"./pages/adminView/RecentPosts\";\nimport { MyPosts } from \"./pages/MyPosts\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { VerifyEmail } from \"./pages/VerifyEmail\";\nimport { Reported } from \"./pages/adminView/Reported\";\nimport { News } from \"./pages/News\";\nimport { Blog } from \"./pages/Blog\";\nimport {CreateBlogOpportunityPage} from \"./pages/CreateBlogOpportunityPage\";\nimport { ScrapedPostApproval } from \"./pages/adminView/ScrapedPostApproval\";\nimport {NewsOpportunity} from \"./components/opportunity/NewsOpportunity\";\n\nexport default function AnimatedRoutes() {\n  const location = useLocation();\n  return (\n    <AnimatePresence>\n      <Routes location={location} key={location.pathname}>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/forgotpassword\" element={<ForgotPassword />} />\n        <Route path=\"/jobs\" element={<Jobs />} />\n        <Route path=\"/competitions\" element={<Competitions />} />\n        <Route path=\"/festivals\" element={<Festivals />} />\n        <Route path=\"/admin/reported\" element={<Reported />} />\n        <Route path=\"/concerts\" element={<Concerts />} />\n        <Route path=\"/admin/scrapedPosts\" element={<ScrapedPostApproval />} />\n        <Route path=\"/admin/users\" element={<Users />} />\n        <Route path=\"/create-opportunity\" element={<CreateOpportunityPage />} />\n        <Route path=\"/admin/recent-posts\" element={<RecentPosts />} />\n        <Route path=\"/admin/create-blog-post\" element={<CreateBlogOpportunityPage/>} />\n        <Route path=\"/my-posts\" element={<MyPosts/>} />\n        <Route path=\"/banned\" element={<BannedUser />} />\n        <Route path=\"/verify\" element={<VerifyEmail />} />\n\n        <Route path=\"/news\" element={<NewsOpportunity apiEndpoint={\"news\"}/>} />\n        <Route path=\"/blog\" element={<Blog />} />\n\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </AnimatePresence>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/AnimatedRoutes.tsx b/src/AnimatedRoutes.tsx
--- a/src/AnimatedRoutes.tsx	
+++ b/src/AnimatedRoutes.tsx	
@@ -1,30 +1,30 @@
-import { Login } from "./pages/Login";
-import { Register } from "./pages/Register";
-import { Route, Routes, useLocation } from "react-router-dom";
-import { Landing } from "./pages/Landing";
-import { About } from "./pages/AboutUs";
-import { NotFound } from "./pages/NotFound";
-import { ForgotPassword } from "./pages/ForgotPassword";
-import { Jobs } from "./pages/Jobs";
-import { Competitions } from "./pages/Competitions";
-import { Users } from "./pages/adminView/Users";
-import { Festivals } from "./pages/Festivals";
-import { CreateOpportunityPage } from "./pages/CreateOpportunityPage";
-import { Concerts } from "./pages/Concerts";
-import { BannedUser } from "./pages/BannedUser";
-import { RecentPosts } from "./pages/adminView/RecentPosts";
-import { MyPosts } from "./pages/MyPosts";
-import { AnimatePresence } from "framer-motion";
-import { VerifyEmail } from "./pages/VerifyEmail";
-import { Reported } from "./pages/adminView/Reported";
-import { News } from "./pages/News";
-import { Blog } from "./pages/Blog";
-import {CreateBlogOpportunityPage} from "./pages/CreateBlogOpportunityPage";
-import { ScrapedPostApproval } from "./pages/adminView/ScrapedPostApproval";
-import {NewsOpportunity} from "./components/opportunity/NewsOpportunity";
+import {Login} from './pages/Login'
+import {Register} from './pages/Register'
+import {Route, Routes, useLocation} from 'react-router-dom'
+import {Landing} from './pages/Landing'
+import {About} from './pages/AboutUs'
+import {NotFound} from './pages/NotFound'
+import {ForgotPassword} from './pages/ForgotPassword'
+import {Jobs} from './pages/Jobs'
+import {Competitions} from './pages/Competitions'
+import {Users} from './pages/adminView/Users'
+import {Festivals} from './pages/Festivals'
+import {CreateOpportunityPage} from './pages/CreateOpportunityPage'
+import {Concerts} from './pages/Concerts'
+import {BannedUser} from './pages/BannedUser'
+import {RecentPosts} from './pages/adminView/RecentPosts'
+import {MyPosts} from './pages/MyPosts'
+import {AnimatePresence} from 'framer-motion'
+import {VerifyEmail} from './pages/VerifyEmail'
+import {Reported} from './pages/adminView/Reported'
+import {News} from './pages/News'
+import {Blog} from './pages/Blog'
+import {CreateBlogOpportunityPage} from './pages/CreateBlogOpportunityPage'
+import {ScrapedPostApproval} from './pages/adminView/ScrapedPostApproval'
+import {NewsOpportunity} from './components/opportunity/NewsOpportunity'
 
 export default function AnimatedRoutes() {
-  const location = useLocation();
+  const location = useLocation()
   return (
     <AnimatePresence>
       <Routes location={location} key={location.pathname}>
@@ -42,16 +42,22 @@
         <Route path="/admin/users" element={<Users />} />
         <Route path="/create-opportunity" element={<CreateOpportunityPage />} />
         <Route path="/admin/recent-posts" element={<RecentPosts />} />
-        <Route path="/admin/create-blog-post" element={<CreateBlogOpportunityPage/>} />
-        <Route path="/my-posts" element={<MyPosts/>} />
+        <Route
+          path="/admin/create-blog-post"
+          element={<CreateBlogOpportunityPage />}
+        />
+        <Route path="/my-posts" element={<MyPosts />} />
         <Route path="/banned" element={<BannedUser />} />
         <Route path="/verify" element={<VerifyEmail />} />
 
-        <Route path="/news" element={<NewsOpportunity apiEndpoint={"news"}/>} />
+        <Route
+          path="/news"
+          element={<NewsOpportunity apiEndpoint={'news'} />}
+        />
         <Route path="/blog" element={<Blog />} />
 
         <Route path="*" element={<NotFound />} />
       </Routes>
     </AnimatePresence>
-  );
+  )
 }
Index: src/App.test.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport App from \"./App\";\n\ntest(\"renders learn react link\", () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.test.tsx b/src/App.test.tsx
--- a/src/App.test.tsx	
+++ b/src/App.test.tsx	
@@ -1,9 +1,9 @@
-import React from "react";
-import { render, screen } from "@testing-library/react";
-import App from "./App";
+import React from 'react'
+import {render, screen} from '@testing-library/react'
+import App from './App'
 
-test("renders learn react link", () => {
-  render(<App />);
-  const linkElement = screen.getByText(/learn react/i);
-  expect(linkElement).toBeInTheDocument();
-});
+test('renders learn react link', () => {
+  render(<App />)
+  const linkElement = screen.getByText(/learn react/i)
+  expect(linkElement).toBeInTheDocument()
+})
Index: src/Firebase.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  // apiKey: process.env.REACT_APP_API_KEY,\n  apiKey: \"AIzaSyBuOlYOCXCSMGqkRy5LH7eLAlURH6sfuYM\",\n  authDomain: process.env.REACT_API_AUTH_DOMAIN,\n  projectId: process.env.REACT_API_PROJECT_ID,\n  storageBucket: process.env.REACT_API_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_API_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_API_APP_ID,\n  measurementId: process.env.REACT_API_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth();\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Firebase.ts b/src/Firebase.ts
--- a/src/Firebase.ts	
+++ b/src/Firebase.ts	
@@ -1,6 +1,6 @@
 // Import the functions you need from the SDKs you need
-import { initializeApp } from "firebase/app";
-import { getAuth } from "firebase/auth";
+import {initializeApp} from 'firebase/app'
+import {getAuth} from 'firebase/auth'
 // TODO: Add SDKs for Firebase products that you want to use
 // https://firebase.google.com/docs/web/setup#available-libraries
 
@@ -8,15 +8,15 @@
 // For Firebase JS SDK v7.20.0 and later, measurementId is optional
 const firebaseConfig = {
   // apiKey: process.env.REACT_APP_API_KEY,
-  apiKey: "AIzaSyBuOlYOCXCSMGqkRy5LH7eLAlURH6sfuYM",
+  apiKey: 'AIzaSyBuOlYOCXCSMGqkRy5LH7eLAlURH6sfuYM',
   authDomain: process.env.REACT_API_AUTH_DOMAIN,
   projectId: process.env.REACT_API_PROJECT_ID,
   storageBucket: process.env.REACT_API_STORAGE_BUCKET,
   messagingSenderId: process.env.REACT_API_MESSAGING_SENDER_ID,
   appId: process.env.REACT_API_APP_ID,
   measurementId: process.env.REACT_API_MEASUREMENT_ID,
-};
+}
 
 // Initialize Firebase
-const app = initializeApp(firebaseConfig);
-export const auth = getAuth();
+const app = initializeApp(firebaseConfig)
+export const auth = getAuth()
Index: src/.prettierrc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"arrowParens\": \"always\",\n  \"bracketSameLine\": false,\n  \"bracketSpacing\": false,\n  \"semi\": false,\n  \"experimentalTernaries\": false,\n  \"singleQuote\": true,\n  \"jsxSingleQuote\": false,\n  \"quoteProps\": \"as-needed\",\n  \"trailingComma\": \"all\",\n  \"singleAttributePerLine\": false,\n  \"htmlWhitespaceSensitivity\": \"css\",\n  \"vueIndentScriptAndStyle\": false,\n  \"proseWrap\": \"preserve\",\n  \"insertPragma\": false,\n  \"printWidth\": 80,\n  \"requirePragma\": false,\n  \"tabWidth\": 2,\n  \"useTabs\": false,\n  \"embeddedLanguageFormatting\": \"auto\"\n}
===================================================================
diff --git a/src/.prettierrc b/src/.prettierrc
--- a/src/.prettierrc	
+++ b/src/.prettierrc	
@@ -18,4 +18,4 @@
   "tabWidth": 2,
   "useTabs": false,
   "embeddedLanguageFormatting": "auto"
-}
\ No newline at end of file
+}
